{"version":3,"sources":["Components/Database-Components/FetchUserData.js","Components/Database-Components/FetchBudgets.js","Components/Database-Components/CreateBudget.js","Components/BudgetAlert.js","Components/AddBudgetForm.js","Components/Database-Components/DeleteBudget.js","Components/DeleteBudgetForm.js","Components/Database-Components/UpdateBudget.js","Components/EditBudgetForm.js","Components/Summary.js","Components/Dashboard.js","firebase-config.js"],"names":["fetchUserName","user","setName","q","query","collection","db","where","uid","getDocs","doc","data","docs","name","displayName","console","error","log","fetchBudgets","setBudgets","id","querySnapshot","map","budget","amount","budgetId","category","totalBudget","createBudget","budgetName","budgetAmount","budgets","addBudget","setAddBudget","includes","addDoc","uuid","alert","BudgetAlert","Alert","className","severity","AddBudgetForm","setBudgetName","setBudgetAmount","setTotalBudget","useState","validated","setValidated","selectedCategory","setSelectedCategory","showBudgetAlert","setShowBudgetAlert","Form","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","setTimeout","FloatingLabel","controlId","label","Control","type","placeholder","onChange","e","target","value","required","Feedback","Select","valueAsNumber","Button","variant","onClick","deleteBudget","setDeleteBudget","budgetDoc","find","deleteDoc","ref","DeleteBudgetForm","delBudget","setDelBudget","selectedBudget","setSelectedBudget","key","updateBudget","setEditBudget","updateDoc","EditBudgetForm","editBudget","handleAlertShow","useEffect","defaultValue","Summary","total","forEach","calculateTotalBudget","style","backgroundColor","href","Dashboard","isLoading","setIsLoading","useAuthState","auth","loading","navigate","useNavigate","fetchDataToDB","LoadingScreen","logout","length","index","ProgressBar","animated","now","max","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","getFirestore","authProvider","email","message","googleProvider","GoogleAuthProvider","signInWithGoogle","signInWithRedirect","logInWithEmailAndPassword","password","signInWithEmailAndPassword","registerWithEmailAndPassword","createUserWithEmailAndPassword","res","sendPasswordReset","sendPasswordResetEmail","signOut"],"mappings":"gMAGaA,EAAa,iDAAG,WAAOC,EAAMC,GAAO,qFAE8B,OAF9B,SAEnCC,EAAIC,YAAMC,YAAWC,IAAI,SAAUC,YAAM,MAAO,KAAU,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMO,MAAM,EAAD,OACrDC,YAAQN,GAAG,KAAD,EAAtBO,EAAG,OACHC,EAAOD,EAAIE,KAAK,GAAGD,OACzBT,EAAQS,EAAKE,MAAM,gDAEnBX,EAAQD,EAAKa,aACbC,QAAQC,MAAM,EAAD,IACbD,QAAQE,IAAI,4BAA4B,yDAE/C,gBAXyB,wCCAbC,EAAY,iDAAG,WAAOjB,EAAMkB,GAAU,uFAE4B,OAF5B,SAErChB,EAAIC,YAAMC,YAAWC,IAAI,SAAUC,YAAM,MAAO,KAAU,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMO,MAAM,EAAD,OACrDC,YAAQN,GAAG,KAAD,EAAnB,OAAHO,EAAG,gBACmBD,YAAQJ,YAAWC,IAAI,QAASI,EAAIE,KAAK,GAAGQ,GAAI,YAAY,KAAD,EAAjFC,EAAa,OACbV,EAAOU,EAAcT,KAAKU,KAAI,SAAAZ,GAAG,OAAIA,EAAIC,MAAM,IACrDQ,EAAWR,EAAKW,KAAI,SAAAC,GAAM,MAAK,CAACV,KAAMU,EAAOV,KAAMW,OAAQD,EAAOC,OAAQC,SAAUF,EAAOE,SAAUC,SAAUH,EAAOG,SAAUC,YAAaJ,EAAOI,YAAY,KAAI,kDAEpKZ,QAAQC,MAAM,EAAD,IACbD,QAAQE,IAAI,0BAA0B,0DAE7C,gBAXwB,wC,0DCCZW,EAAY,iDAAG,WAAO3B,EAAM4B,EAAYV,EAAYW,EAAcC,EAASC,EAAWC,EAAcP,EAAUC,GAAW,uFAGvD,OAHuD,SAE9HM,GAAa,GACP9B,EAAIC,YAAMC,YAAWC,IAAI,SAAUC,YAAM,MAAO,KAAU,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMO,MAAM,EAAD,OACrDC,YAAQN,GAAG,KAAD,EAAnB,OAAHO,EAAG,gBACmBD,YAAQJ,YAAWC,IAAI,QAASI,EAAIE,KAAK,GAAGQ,GAAI,YAAY,KAAD,EAEnC,GAF9CC,EAAa,OACbV,EAAOU,EAAcT,KAAKU,KAAI,SAAAZ,GAAG,OAAIA,EAAIC,MAAM,IACjCA,EAAKW,KAAI,SAAAC,GAAM,OAAIA,EAAOV,IAAI,IACjCqB,SAASL,GAAY,CAAD,iCAC3BM,YAAO9B,YAAWC,IAAI,QAASI,EAAIE,KAAK,GAAGQ,GAAI,WAAY,CAC7DZ,IAAKP,EAAKO,IACViB,SAAUW,iBACVvB,KAAMgB,EACNH,SAAUA,EACVF,OAAQM,EACRH,YAAaA,IACd,KAAD,GACFR,EAAW,GAAD,mBAAKY,GAAO,CAAE,CAAClB,KAAMgB,EAAYL,OAAQM,EAAcJ,SAAUA,EAAUC,YAAaA,EAAaF,SAAUW,iBAAQ5B,IAAKP,EAAKO,QAAO,wBAElJ6B,MAAM,8BAA8B,0DAGxCtB,QAAQC,MAAM,EAAD,IACbD,QAAQE,IAAI,yBAAyB,0DAE5C,gBAzBwB,sD,gBCKVqB,MANf,WACI,OACI,cAACC,EAAA,EAAK,CAACC,UAAW,eAAgBC,SAAS,QAAO,8DAE1D,ECwGeC,MAzGf,SAAuB,GAYI,IAXAzC,EAAI,EAAJA,KACA+B,EAAS,EAATA,UACAC,EAAY,EAAZA,aACAF,EAAO,EAAPA,QACAZ,EAAU,EAAVA,WACAwB,EAAa,EAAbA,cACAC,EAAe,EAAfA,gBACAf,EAAU,EAAVA,WACAC,EAAY,EAAZA,aACAH,EAAW,EAAXA,YACAkB,EAAc,EAAdA,eAEvB,EAAkCC,oBAAS,GAAM,mBAA1CC,EAAS,KAAEC,EAAY,KAE9B,EAAgDF,mBAAS,SAAQ,mBAA1DG,EAAgB,KAAEC,EAAmB,KAE5C,EAA8CJ,oBAAS,GAAM,mBAAtDK,EAAe,KAAEC,EAAkB,KAyB1C,OACI,qBAAKZ,UAAW,2BAA2B,SACvC,eAAC,IAAO,WACHW,GAAmB,cAAC,EAAW,IAChC,eAACE,EAAA,EAAI,CAACC,YAAU,EAACP,UAAWA,EAAWQ,SApB9B,SAACC,GAElB,IAA6B,IADhBA,EAAMC,cACVC,gBACLF,EAAMG,iBACNH,EAAMI,sBACH,CACH,GAAI9B,EAAeH,EAEf,OAdRyB,GAAmB,QACnBS,YAAW,WACPT,GAAmB,EACvB,GAAG,MAaKxB,EAAa3B,EAAM4B,EAAYV,EAAYW,EAAcC,EAASC,EAAWC,EAAcgB,EAAkBtB,EAErH,CACAqB,GAAa,EACjB,EAM2ER,UAAW,mBAAmB,UACzF,mBAAGA,UAAW,YAAY,+BAC1B,eAACsB,EAAA,EAAa,CACVC,UAAU,iBACVC,MAAM,cAAa,UAEnB,cAACX,EAAA,EAAKY,QAAO,CAACC,KAAK,OAAOC,YAAY,SACxBC,SAAU,SAACC,GAAC,OAAK1B,EAAc0B,EAAEC,OAAOC,MAAM,EAAEC,UAAQ,IACtE,cAACnB,EAAA,EAAKY,QAAQQ,SAAQ,0BAGtB,cAACpB,EAAA,EAAKY,QAAQQ,SAAQ,CAACP,KAAK,UAAS,uDAIzC,mBAAG1B,UAAW,YAAY,oCAC1B,eAACa,EAAA,EAAKqB,OAAM,CAAC,aAAW,yBACXN,SAAU,SAACC,GAAC,OAAKnB,EAAoBmB,EAAEC,OAAOC,MAAM,EAAC,UAC9D,qDACA,wBAAQA,MAAO,UAAU,qBACzB,wBAAQA,MAAO,iBAAiB,4BAChC,wBAAQA,MAAO,OAAO,kBACtB,wBAAQA,MAAO,YAAY,uBAC3B,wBAAQA,MAAO,YAAY,uBAC3B,wBAAQA,MAAO,iBAAiB,4BAChC,wBAAQA,MAAO,UAAU,qBACzB,wBAAQA,MAAO,QAAQ,sBAE3B,mBAAG/B,UAAW,YAAY,yCAC1B,eAACsB,EAAA,EAAa,CAACC,UAAU,iBAAiBC,MAAM,iBAAgB,UAC5D,cAACX,EAAA,EAAKY,QAAO,CAACC,KAAK,SAASC,YAAY,SAC1BC,SAAU,SAACC,GAAC,OAAKzB,EAAgByB,EAAEC,OAAOK,cAAc,EAAEH,UAAQ,IAChF,cAACnB,EAAA,EAAKY,QAAQQ,SAAQ,0BAGtB,cAACpB,EAAA,EAAKY,QAAQQ,SAAQ,CAACP,KAAK,UAAS,+CAIzC,mBAAG1B,UAAW,YAAY,yCAC1B,eAACsB,EAAA,EAAa,CAACC,UAAU,iBAAiBC,MAAM,iBAAgB,UAC5D,cAACX,EAAA,EAAKY,QAAO,CAACC,KAAK,SAASC,YAAY,SAC1BC,SAAU,SAACC,GAAC,OAAKxB,EAAewB,EAAEC,OAAOK,cAAc,EAAEH,UAAQ,IAC/E,cAACnB,EAAA,EAAKY,QAAQQ,SAAQ,0BAGtB,cAACpB,EAAA,EAAKY,QAAQQ,SAAQ,CAACP,KAAK,UAAS,qDAIzC,cAACU,EAAA,EAAM,CAACC,QAAS,UAAWX,KAAM,SAAU1B,UAAW,aAAa,wBACpE,cAACoC,EAAA,EAAM,CAACC,QAAS,SAAUC,QAAS,kBAAM7C,GAAcD,EAAU,EAC1DQ,UAAW,aAAa,2BAKpD,ECzGauC,EAAY,iDAAG,WAAO9E,EAAM4B,EAAYE,EAASZ,EAAY4D,EAAcC,GAAe,uFAGxB,OAHwB,SAE/FA,GAAgB,GACV7E,EAAIC,YAAMC,YAAWC,IAAI,SAAUC,YAAM,MAAO,KAAU,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMO,MAAM,EAAD,OACrDC,YAAQN,GAAG,KAAD,EAAnB,OAAHO,EAAG,gBACmBD,YAAQJ,YAAWC,IAAI,QAASI,EAAIE,KAAK,GAAGQ,GAAI,YAAY,KAAD,EACP,OAD1EC,EAAa,OACb4D,EAAY5D,EAAcT,KAAKsE,MAAK,SAAAxE,GAAG,OAAIA,EAAIC,OAAOE,OAASgB,CAAU,IAAE,EAAD,QAC1EsD,YAAUF,EAAUG,KAAK,KAAD,oBACxBlE,EAAajB,EAAMkB,GAAY,KAAD,qDAEpCJ,QAAQC,MAAM,EAAD,IACbD,QAAQE,IAAI,yBAAyB,0DAE5C,6DAbwB,GC4BVoE,MA3Bf,SAA0B,GAAuD,IAAtDpF,EAAI,EAAJA,KAAMqF,EAAS,EAATA,UAAWC,EAAY,EAAZA,aAAcxD,EAAO,EAAPA,QAASZ,EAAU,EAAVA,WAE/D,EAA4C2B,mBAASf,EAAQ,GAAGlB,MAAK,mBAA9D2E,EAAc,KAAEC,EAAiB,KAMxC,OACI,qBAAKjD,UAAW,8BAA8B,SAC1C,cAAC,IAAO,UACJ,eAACa,EAAA,EAAI,CAACE,SAPG,WACbwB,EAAa9E,EAAMuF,EAAgBzD,EAASZ,EAAYmE,EAAWC,EAC3E,EAK0C/C,UAAW,mBAAmB,UACxD,mBAAGA,UAAW,cAAc,2BAC5B,cAACa,EAAA,EAAKqB,OAAM,CAAC,aAAW,yBAAyBH,MAAOiB,EAAgBpB,SAAU,SAACC,GAAC,OAAKoB,EAAkBpB,EAAEC,OAAOC,MAAM,EAAC,SACtHxC,EAAQT,KAAI,SAACC,EAAQmE,GAAG,OACrB,wBAAkBtE,GAAIG,EAAOE,SAAU8C,MAAOhD,EAAOV,KAAK,SAAEU,EAAOV,MAAtD6E,EAAoE,MAGzF,cAACd,EAAA,EAAM,CAACC,QAAS,UAAWX,KAAM,SAAU1B,UAAW,aAAa,2BACpE,cAACoC,EAAA,EAAM,CAACC,QAAS,SAAUC,QAAS,kBAAMS,GAAcD,EAAU,EAC1D9C,UAAW,aAAa,0BAKpD,EC1BamD,EAAY,iDAAG,WAAO1F,EAAM4B,EAAYV,EAAYO,EAAUI,EAAc0D,EAAgBI,EAAejE,GAAW,uFAGpD,OAHoD,SAE3HiE,GAAc,GACRzF,EAAIC,YAAMC,YAAWC,IAAI,SAAUC,YAAM,MAAO,KAAU,OAAJN,QAAI,IAAJA,OAAI,EAAJA,EAAMO,MAAM,EAAD,OACrDC,YAAQN,GAAG,KAAD,EAAnB,OAAHO,EAAG,gBACmBD,YAAQJ,YAAWC,IAAI,QAASI,EAAIE,KAAK,GAAGQ,GAAI,YAAY,KAAD,EACH,OAD9EC,EAAa,OACb4D,EAAY5D,EAAcT,KAAKsE,MAAK,SAAAxE,GAAG,OAAIA,EAAIC,OAAOE,OAAS2E,CAAc,IAAE,EAAD,QAC9EK,YAAUZ,EAAUG,IAAK,CAC3BvE,KAAMgB,EACNL,OAAQM,EACRJ,SAAUA,EACVC,YAAaA,IACd,KAAD,oBACIT,EAAajB,EAAMkB,GAAY,KAAD,qDAEpCJ,QAAQC,MAAM,EAAD,IACbD,QAAQE,IAAI,yBAAyB,0DAE5C,gBAlBwB,oDCuJV6E,MAnJf,SAAwB,GAYI,IAXA7F,EAAI,EAAJA,KACA8B,EAAO,EAAPA,QACAZ,EAAU,EAAVA,WACAU,EAAU,EAAVA,WACAc,EAAa,EAAbA,cACAoD,EAAU,EAAVA,WACAH,EAAa,EAAbA,cACA9D,EAAY,EAAZA,aACAc,EAAe,EAAfA,gBACAjB,EAAW,EAAXA,YACAkB,EAAc,EAAdA,eAGxB,EAAkCC,oBAAS,GAAM,mBAA1CC,EAAS,KAAEC,EAAY,KAE9B,EAA4CF,mBAASf,EAAQ,GAAGlB,MAAK,mBAA9D2E,EAAc,KAAEC,EAAiB,KAExC,EAAgD3C,mBAASf,EAAQ,GAAGL,UAAS,mBAAtEuB,EAAgB,KAAEC,EAAmB,KAE5C,EAA8CJ,oBAAS,GAAM,mBAAtDK,EAAe,KAAEC,EAAkB,KAcpC4C,EAAkB,WACpB5C,GAAmB,GACnBS,YAAW,WACPT,GAAmB,EACvB,GAAG,KACP,EAwBA,OAJA6C,qBAAU,WApCNlE,EAAQT,KAAI,SAACC,GAOT,OANIA,EAAOV,OAAS2E,IAChB7C,EAAcpB,EAAOV,MACrB+B,EAAgBrB,EAAOC,QACvB0B,EAAoB3B,EAAOG,UAC3BmB,EAAetB,EAAOI,cAEnB,IACX,GA8BJ,GAAG,CAAC6D,IAEI,qBAAKhD,UAAW,4BAA4B,SAChD,eAAC,IAAO,WACHW,GAAmB,cAAC,EAAW,IAChC,eAACE,EAAA,EAAI,CAACC,YAAU,EAACP,UAAWA,EAAWQ,SAzB1B,SAACC,GAElB,IAA6B,IADhBA,EAAMC,cACVC,gBACLF,EAAMG,iBACNH,EAAMI,sBACH,CAGH,GAFAoC,IACAxC,EAAMG,iBACH7B,EAAeH,EAEd,YADAqE,IAGAL,EAAa1F,EAAM4B,EAAYV,EAAY8B,EAAkBnB,EAAc0D,EAAgBI,EAAejE,EAElH,CACAqB,GAAa,EACjB,EASuER,UAAW,iBAAiB,UACvF,mBAAGA,UAAW,YAAY,2BAC1B,cAACa,EAAA,EAAKqB,OAAM,CAAC,aAAW,yBAAyBH,MAAOiB,EAC3CpB,SAAU,SAACC,GAAC,OAAKoB,EAAkBpB,EAAEC,OAAOC,MAAM,EAAC,SAC3DxC,EAAQT,KAAI,SAACC,EAAQmE,GAAG,OACrB,wBAAkBtE,GAAIG,EAAOE,SAAU8C,MAAOhD,EAAOV,KAAK,SAAEU,EAAOV,MAAtD6E,EAAoE,MAExF3D,EAAQT,KAAI,SAACC,GAAM,MAAK,CACrBA,EAAOV,OAAS2E,GACZ,qCACI,mBAAGhD,UAAW,YAAY,8BAC1B,eAACsB,EAAA,EAAa,CACVC,UAAU,iBACVC,MAAOwB,EAAe,UAEtB,cAACnC,EAAA,EAAKY,QAAO,CAACC,KAAK,OAAOC,YAAY,SACxB+B,aAAc3E,EAAOV,KACrBuD,SAAU,SAACC,GAAC,OAAK1B,EAAc0B,EAAEC,OAAOC,MAAM,IAC5D,cAAClB,EAAA,EAAKY,QAAQQ,SAAQ,0BAGtB,cAACpB,EAAA,EAAKY,QAAQQ,SAAQ,CAACP,KAAK,UAAS,2CAIzC,mBAAG1B,UAAW,YAAY,oCAC1B,eAACa,EAAA,EAAKqB,OAAM,CAAC,aAAW,yBACXN,SAAU,SAACC,GAAC,OAAKnB,EAAoBmB,EAAEC,OAAOC,MAAM,EAAC,UAC9D,iCACKxC,EAAQT,KAAI,SAACC,GAAM,MAAM,CAACA,EAAOV,OAAS2E,GAAkBjE,EAAOG,SAAS,MAEjF,wBAAQ6C,MAAO,UAAU,qBACzB,wBAAQA,MAAO,iBAAiB,4BAChC,wBAAQA,MAAO,OAAO,kBACtB,wBAAQA,MAAO,YAAY,uBAC3B,wBAAQA,MAAO,YAAY,uBAC3B,wBAAQA,MAAO,iBAAiB,4BAChC,wBAAQA,MAAO,UAAU,qBACzB,wBAAQA,MAAO,QAAQ,sBAE3B,mBAAG/B,UAAW,YAAY,wCAC1B,eAACsB,EAAA,EAAa,CAACC,UAAU,iBACVC,MAAOjC,EAAQT,KAAI,SAACC,GAAM,MAAM,CAACA,EAAOV,OAAS2E,GAAkBjE,EAAOC,OAAO,IAAG,UAE/F,cAAC6B,EAAA,EAAKY,QAAO,CAACC,KAAK,SAASC,YAAY,SAC1B+B,aAAc3E,EAAOC,OACrB4C,SAAU,SAACC,GAAC,OAAKzB,EAAgByB,EAAEC,OAAOK,cAAc,IACtE,cAACtB,EAAA,EAAKY,QAAQQ,SAAQ,0BAGtB,cAACpB,EAAA,EAAKY,QAAQQ,SAAQ,CAACP,KAAK,UAAS,6CAIzC,mBAAG1B,UAAW,YAAY,wCAC1B,eAACsB,EAAA,EAAa,CAACC,UAAU,iBACVC,MAAOjC,EAAQT,KAAI,SAACC,GAAM,MAAM,CAACA,EAAOV,OAAS2E,GAAkBjE,EAAOI,YAAY,IAAG,UAEpG,cAAC0B,EAAA,EAAKY,QAAO,CAACC,KAAK,SAASC,YAAY,SAC1B+B,aAAc3E,EAAOI,YACrByC,SAAU,SAACC,GAAC,OAAKxB,EAAewB,EAAEC,OAAOK,cAAc,IACrE,cAACtB,EAAA,EAAKY,QAAQQ,SAAQ,0BAGtB,cAACpB,EAAA,EAAKY,QAAQQ,SAAQ,CAACP,KAAK,UAAS,6CAIzC,cAACU,EAAA,EAAM,CAACC,QAAS,UAAWX,KAAM,SAAU1B,UAAW,WAAW,yBAClE,cAACoC,EAAA,EAAM,CAACC,QAAS,SAAUC,QAAS,kBAAMc,GAAeG,EAAW,EAC5DvD,UAAW,aAAa,uBAG3C,WAMjB,EClHe2D,MApCf,SAAiB,GAAY,IAAXpE,EAAO,EAAPA,QAEd,EAAsCe,mBAAS,GAAE,mBAA1CnB,EAAW,KAAEkB,EAAc,KAclC,OAJAoD,qBAAU,YARmB,WACzB,IAAIG,EAAQ,EACZrE,EAAQsE,SAAQ,SAAA9E,GACZ6E,GAAS7E,EAAOC,MACpB,IACAqB,EAAeuD,EACnB,CAGIE,EACJ,GAAG,CAACvE,IAGA,qBAAKS,UAAW,UAAU,SACtB,eAAC,IAAS,CAACA,UAAU,yBAAyB+D,MAAO,CAAEC,gBAAiB,WAAY,UAChF,cAAC,IAAY,CAAChE,UAAU,WAAU,SAC9B,kCACI,oBAAGA,UAAU,gEAA+D,2BAAgBb,SAIpG,sBAAKa,UAAU,kBAAkB+D,MAAO,CAAEC,gBAAiB,sBAAuB,iCAE9E,mBAAGhE,UAAU,kBAAkBiE,KAAK,6BAA4B,mCAOpF,E,QCkEeC,UAxFf,SAAmB,GAA4B,IAA3BC,EAAS,EAATA,UAAWC,EAAY,EAAZA,aAE3B,EAAwBC,YAAaC,KAAK,mBAAnC7G,EAAI,KAAE8G,EAAO,KACpB,EAAwBjE,mBAAS,IAAG,mBAA7BjC,EAAI,KAAEX,EAAO,KACd8G,EAAWC,cACjB,EAAoCnE,mBAAS,IAAG,mBAAzCjB,EAAU,KAAEc,EAAa,KAChC,EAAwCG,mBAAS,GAAE,mBAA5ChB,EAAY,KAAEc,EAAe,KACpC,EAAsCE,mBAAS,GAAE,mBAA1CnB,EAAW,KAAEkB,EAAc,KAClC,EAAkCC,oBAAS,GAAM,mBAA1Cd,EAAS,KAAEC,EAAY,KAC9B,EAAkCa,oBAAS,GAAM,mBAA1CwC,EAAS,KAAEC,EAAY,KAC9B,EAAoCzC,oBAAS,GAAM,mBAA5CiD,EAAU,KAAEH,EAAa,KAEhC,EAA8B9C,mBAAS,IAAG,mBAAnCf,GAAO,KAAEZ,GAAU,KAkB1B,OAhBA8E,qBAAU,WACN,GAAIc,EACAH,GAAa,OADjB,CAOA,IAHgB,IAAZG,GACAH,GAAa,IAEZ3G,EAAM,OAAO+G,EAAS,KAC3BE,YAAcjH,GACdD,EAAcC,EAAMC,GACpBgB,EAAajB,EAAMkB,GAPnB,CASJ,GAAG,CAAClB,EAAM8G,EAASC,IAIf,mCACKL,EAAY,cAACQ,EAAA,EAAa,IACvB,sBAAK3E,UAAW,YAAY,UACxB,sBAAKA,UAAW,mBAAmB,UAC9B3B,EAAI,IAAE,cAAC+D,EAAA,EAAM,CAACC,QAAS,YAAaC,QAAS,kBAAMsC,aAAQ,EAAC,uBAEjE,sBAAK5E,UAAW,iBAAiB,UAC5BR,EACG,cAAC,EAAa,CAACA,UAAWA,EAAWC,aAAcA,EAAchC,KAAMA,EACxD4B,WAAYA,EACZc,cAAeA,EAAeb,aAAcA,EAC5Cc,gBAAiBA,EACjBzB,WAAYA,GACZY,QAASA,GAASJ,YAAaA,EAAakB,eAAgBA,IACzE,sBAAKL,UAAW,sBAAsB,UACpC,cAACoC,EAAA,EAAM,CAACC,QAAS,UAAWC,QAAS,kBAAM7C,GAAcD,EAAU,EAAC,eAAW,IAAC,qDAEpE,IAAnBD,GAAQsF,QAAgB,CAAC/B,EACtB,cAAC,EAAgB,CAACA,UAAWA,EAAWC,aAAcA,EAActF,KAAMA,EACxD8B,QAASA,GACTZ,WAAYA,KAC5B,sBAAKqB,UAAW,yBAAyB,UACvC,cAACoC,EAAA,EAAM,CAACC,QAAS,SAAUC,QAAS,kBAAMS,GAAcD,EAAU,EAAC,eAAW,IAAC,8DAEnE,IAAnBvD,GAAQsF,QAAgB,CAACtB,EACtB,cAAC,EAAc,CAAC9F,KAAMA,EAAM8B,QAASA,GAASZ,WAAYA,GAC1CU,WAAYA,EACZc,cAAeA,EAAeoD,WAAYA,EAC1CH,cAAeA,EACf9D,aAAcA,EAAcc,gBAAiBA,EAC7CjB,YAAaA,EACbkB,eAAgBA,IAC9B,sBAAKL,UAAW,uBAAuB,UACrC,cAACoC,EAAA,EAAM,CAACC,QAAS,UAAWC,QAAS,kBAAMc,GAAeG,EAAW,EAAC,oBAAW,IAAC,+DAG9F,qBAAKvD,UAAW,mBAAmB,SACX,IAAnBT,GAAQsF,QACL,CAACtF,GAAQT,KAAI,SAACC,EAAQ+F,GAClB,OAAO,eAAC,IAAO,WACX,mBAAG9E,UAAW,cAAc,SAAEjB,EAAOV,OACrC,mBAAG2B,UAAW,kBAAkB,SAAEjB,EAAOG,WACzC,mBAAGc,UAAW,aAAa,SAAC,cAAC+E,EAAA,EAAW,CAACC,UAAQ,EAACC,IAAKlG,EAAOC,OACrBkG,IAAKnG,EAAOI,gBACrD,oBAAGa,UAAW,gBAAgB,UAAEjB,EAAOC,OAAM,IAAGD,EAAOI,iBALtC2F,EAQzB,OAGR,cAAC,EAAO,CAACvF,QAASA,SAKtC,C,4VClEM+E,GADMa,YAVW,CACnBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,8CAKEC,eACP5H,EAAK6H,cAELjB,EAAa,iDAAG,WAAOjH,GAAI,iFAE6C,OAF7C,SAEnBE,EAAIC,YAAMC,YAAWC,EAAI,SAAUC,YAAM,MAAO,KAAMN,EAAKO,MAAM,EAAD,OACnDC,YAAQN,GAAG,KAAD,EAAnB,GACe,IADf,OACDS,KAAKyG,OAAY,gCAChBlF,YAAO9B,YAAWC,EAAI,SAAU,CAClCE,IAAKP,EAAKO,IACVK,KAAMZ,EAAKa,YACXsH,aAAc,SACdC,MAAOpI,EAAKoI,QACb,KAAD,oDAGNtH,QAAQC,MAAM,EAAD,IACbqB,MAAM,KAAIiG,SAAS,0DAE1B,gBAhBkB,sCAkBbC,EAAiB,IAAIC,IACrBC,EAAgB,iDAAG,iHAEXC,YAAmB5B,EAAMyB,GAAgB,KAAD,iDAE9CxH,QAAQC,MAAM,EAAD,IACbqB,MAAM,KAAIiG,SAAS,wDAE1B,kBAPqB,mCAShBK,EAAyB,iDAAG,WAAON,EAAOO,GAAQ,oGAE1CC,YAA2B/B,EAAMuB,EAAOO,GAAU,KAAD,iDAEvD7H,QAAQC,MAAM,EAAD,IACbqB,MAAM,KAAIiG,SAAS,wDAE1B,gBAP8B,wCAQzBQ,EAA4B,iDAAG,WAAOjI,EAAMwH,EAAOO,GAAQ,4GAEvCG,YAA+BjC,EAAMuB,EAAOO,GAAU,KAAD,EAClD,OADfI,EAAG,OACH/I,EAAO+I,EAAI/I,KAAK,EAAD,OACfkC,YAAO9B,YAAWC,EAAI,SAAU,CAClCE,IAAKP,EAAKO,IACVK,OACAuH,aAAc,QACdC,UACD,KAAD,kDAEFtH,QAAQC,MAAM,EAAD,IACbqB,MAAM,KAAIiG,SAAS,yDAE1B,gBAdiC,0CAe5BW,EAAiB,iDAAG,WAAOZ,GAAK,oGAExBa,YAAuBpC,EAAMuB,GAAO,KAAD,EACzChG,MAAM,6BAA6B,gDAGnCtB,QAAQC,MAAM,EAAD,IACbqB,MAAM,KAAIiG,SAAS,yDAE1B,gBATsB,sCAUjBlB,EAAS,WACX+B,YAAQrC,EACZ,C","file":"static/js/9.55c8b6a0.chunk.js","sourcesContent":["import {collection, getDocs, query, where} from \"firebase/firestore\";\r\nimport {db} from \"../../firebase-config\";\r\n\r\nexport const fetchUserName = async (user, setName) => {\r\n    try {\r\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\r\n        const doc = await getDocs(q);\r\n        const data = doc.docs[0].data();\r\n        setName(data.name);\r\n    } catch (err) {\r\n        setName(user.displayName);\r\n        console.error(err);\r\n        console.log(\"Error fetching user name\");\r\n    }\r\n};\r\n","import {collection, getDocs, query, where} from \"firebase/firestore\";\r\nimport {db} from \"../../firebase-config\";\r\n\r\nexport const fetchBudgets = async (user, setBudgets) => {\r\n    try {\r\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\r\n        const doc = await getDocs(q);\r\n        const querySnapshot = await getDocs(collection(db, \"users\", doc.docs[0].id, \"budgets\"));\r\n        const data = querySnapshot.docs.map(doc => doc.data());\r\n        setBudgets(data.map(budget => ({name: budget.name, amount: budget.amount, budgetId: budget.budgetId, category: budget.category, totalBudget: budget.totalBudget})));\r\n    } catch (err) {\r\n        console.error(err);\r\n        console.log(\"Error fetching budgets\");\r\n    }\r\n}\r\n","import {addDoc, collection, getDocs, query, where} from \"firebase/firestore\";\r\nimport {db} from \"../../firebase-config\";\r\nimport {uuid} from \"uuidv4\";\r\n\r\nexport const createBudget = async (user, budgetName, setBudgets, budgetAmount, budgets, addBudget, setAddBudget, category, totalBudget) => {\r\n    try {\r\n        setAddBudget(false);\r\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\r\n        const doc = await getDocs(q);\r\n        const querySnapshot = await getDocs(collection(db, \"users\", doc.docs[0].id, \"budgets\"));\r\n        const data = querySnapshot.docs.map(doc => doc.data());\r\n        const budgetNames = data.map(budget => budget.name);\r\n        if (!budgetNames.includes(budgetName)) {\r\n            await addDoc(collection(db, \"users\", doc.docs[0].id, \"budgets\"), {\r\n                uid: user.uid,\r\n                budgetId: uuid(),\r\n                name: budgetName,\r\n                category: category,\r\n                amount: budgetAmount,\r\n                totalBudget: totalBudget\r\n            });\r\n            setBudgets([...budgets, {name: budgetName, amount: budgetAmount, category: category, totalBudget: totalBudget, budgetId: uuid(), uid: user.uid}]);\r\n        } else {\r\n            alert(\"Budget name already exists\");\r\n        }\r\n    } catch (err) {\r\n        console.error(err);\r\n        console.log(\"Error creating budget\");\r\n    }\r\n};\r\n","import React from 'react';\r\nimport {Alert} from \"@mui/material\";\r\n\r\nfunction BudgetAlert() {\r\n    return (\r\n        <Alert className={'Alert-Budget'} severity=\"error\">Budget Amount can't be higher than Maximum Budget</Alert>\r\n    );\r\n}\r\n\r\nexport default BudgetAlert;\r\n","import React, {useState} from 'react';\r\nimport {MDBCard} from \"mdb-react-ui-kit\";\r\nimport {Button, FloatingLabel, Form} from \"react-bootstrap\";\r\nimport {createBudget} from \"./Database-Components/CreateBudget\";\r\nimport BudgetAlert from \"./BudgetAlert\";\r\n\r\nfunction AddBudgetForm({\r\n                           user,\r\n                           addBudget,\r\n                           setAddBudget,\r\n                           budgets,\r\n                           setBudgets,\r\n                           setBudgetName,\r\n                           setBudgetAmount,\r\n                           budgetName,\r\n                           budgetAmount,\r\n                           totalBudget,\r\n                           setTotalBudget\r\n                       }) {\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const [selectedCategory, setSelectedCategory] = useState(\"Other\");\r\n\r\n    const [showBudgetAlert, setShowBudgetAlert] = useState(false);\r\n\r\n    const handleAlertShow = () => {\r\n        setShowBudgetAlert(true);\r\n        setTimeout(() => {\r\n            setShowBudgetAlert(false);\r\n        }, 2500);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        } else {\r\n            if (budgetAmount > totalBudget) {\r\n                handleAlertShow();\r\n                return;\r\n            } else {\r\n                createBudget(user, budgetName, setBudgets, budgetAmount, budgets, addBudget, setAddBudget, selectedCategory, totalBudget);\r\n            }\r\n        }\r\n        setValidated(true);\r\n    };\r\n\r\n    return (\r\n        <div className={\"Dashboard-AddBudget-Form\"}>\r\n            <MDBCard>\r\n                {showBudgetAlert && <BudgetAlert/>}\r\n                <Form noValidate validated={validated} onSubmit={handleSubmit} className={\"createBudgetForm\"}>\r\n                    <p className={'edit-info'}>Enter budget name</p>\r\n                    <FloatingLabel\r\n                        controlId=\"floatingBudget\"\r\n                        label=\"Budget Name\"\r\n                    >\r\n                        <Form.Control type=\"text\" placeholder=\"Budget\"\r\n                                      onChange={(e) => setBudgetName(e.target.value)} required/>\r\n                        <Form.Control.Feedback>\r\n                            Looks good!\r\n                        </Form.Control.Feedback>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a name for your budget.\r\n                        </Form.Control.Feedback>\r\n                    </FloatingLabel>\r\n                    <p className={'edit-info'}>Select budget category</p>\r\n                    <Form.Select aria-label=\"Default select example\"\r\n                                 onChange={(e) => setSelectedCategory(e.target.value)}>\r\n                        <option>Select category</option>\r\n                        <option value={\"Housing\"}>Housing</option>\r\n                        <option value={\"Transportation\"}>Transportation</option>\r\n                        <option value={\"Food\"}>Food</option>\r\n                        <option value={\"Utilities\"}>Utilities</option>\r\n                        <option value={\"Insurance\"}>Insurance</option>\r\n                        <option value={\"Medical/Dental\"}>Medical/Dental</option>\r\n                        <option value={\"Savings\"}>Savings</option>\r\n                        <option value={\"Other\"}>Other</option>\r\n                    </Form.Select>\r\n                    <p className={'edit-info'}>Enter current budget amount</p>\r\n                    <FloatingLabel controlId=\"floatingAmount\" label=\"Current Amount\">\r\n                        <Form.Control type=\"number\" placeholder=\"Amount\"\r\n                                      onChange={(e) => setBudgetAmount(e.target.valueAsNumber)} required/>\r\n                        <Form.Control.Feedback>\r\n                            Looks good!\r\n                        </Form.Control.Feedback>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid amount.\r\n                        </Form.Control.Feedback>\r\n                    </FloatingLabel>\r\n                    <p className={'edit-info'}>Enter maximum budget amount</p>\r\n                    <FloatingLabel controlId=\"floatingAmount\" label=\"Maximum Amount\">\r\n                        <Form.Control type=\"number\" placeholder=\"Amount\"\r\n                                      onChange={(e) => setTotalBudget(e.target.valueAsNumber)} required/>\r\n                        <Form.Control.Feedback>\r\n                            Looks good!\r\n                        </Form.Control.Feedback>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid total amount.\r\n                        </Form.Control.Feedback>\r\n                    </FloatingLabel>\r\n                    <Button variant={\"success\"} type={\"submit\"} className={'btn-submit'}>Add Budget</Button>\r\n                    <Button variant={\"danger\"} onClick={() => setAddBudget(!addBudget)}\r\n                            className={'btn-cancel'}>Cancel</Button>\r\n                </Form>\r\n            </MDBCard>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddBudgetForm;\r\n","import {collection, deleteDoc, getDocs, query, where} from \"firebase/firestore\";\r\nimport {db} from \"../../firebase-config\";\r\nimport {fetchBudgets} from \"./FetchBudgets\";\r\n\r\nexport const deleteBudget = async (user, budgetName, budgets, setBudgets, deleteBudget, setDeleteBudget) => {\r\n    try {\r\n        setDeleteBudget(false);\r\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\r\n        const doc = await getDocs(q);\r\n        const querySnapshot = await getDocs(collection(db, \"users\", doc.docs[0].id, \"budgets\"));\r\n        const budgetDoc = querySnapshot.docs.find(doc => doc.data().name === budgetName);\r\n        await deleteDoc(budgetDoc.ref);\r\n        await fetchBudgets(user, setBudgets);\r\n    } catch (err) {\r\n        console.error(err);\r\n        console.log(\"Error deleting budget\");\r\n    }\r\n}\r\n","import React, {useState} from 'react';\r\nimport {MDBCard} from \"mdb-react-ui-kit\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {deleteBudget} from \"./Database-Components/DeleteBudget\";\r\n\r\nfunction DeleteBudgetForm({user, delBudget, setDelBudget, budgets, setBudgets}) {\r\n\r\n    const [selectedBudget, setSelectedBudget] = useState(budgets[0].name);\r\n\r\n    const handleSubmit = () => {\r\n            deleteBudget(user, selectedBudget, budgets, setBudgets, delBudget, setDelBudget);\r\n    };\r\n\r\n    return (\r\n        <div className={\"Dashboard-DeleteBudget-Form\"}>\r\n            <MDBCard>\r\n                <Form onSubmit={handleSubmit} className={\"deleteBudgetForm\"}>\r\n                    <p className={'delete-info'}>Select budget</p>\r\n                    <Form.Select aria-label=\"Default select example\" value={selectedBudget} onChange={(e) => setSelectedBudget(e.target.value)}>\r\n                        {budgets.map((budget, key) => (\r\n                            <option key={key} id={budget.budgetId} value={budget.name}>{budget.name}</option>\r\n                        ))}\r\n                    </Form.Select>\r\n                    <Button variant={\"success\"} type={\"submit\"} className={'btn-delete'}>Delete Budget</Button>\r\n                    <Button variant={\"danger\"} onClick={() => setDelBudget(!delBudget)}\r\n                            className={'btn-cancel'}>Cancel</Button>\r\n                </Form>\r\n            </MDBCard>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeleteBudgetForm;\r\n","import {collection, getDocs, query, updateDoc, where} from \"firebase/firestore\";\r\nimport {db} from \"../../firebase-config\";\r\nimport {fetchBudgets} from \"./FetchBudgets\";\r\n\r\nexport const updateBudget = async (user, budgetName, setBudgets, category, budgetAmount, selectedBudget, setEditBudget, totalBudget) => {\r\n    try {\r\n        setEditBudget(false);\r\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\r\n        const doc = await getDocs(q);\r\n        const querySnapshot = await getDocs(collection(db, \"users\", doc.docs[0].id, \"budgets\"));\r\n        const budgetDoc = querySnapshot.docs.find(doc => doc.data().name === selectedBudget);\r\n        await updateDoc(budgetDoc.ref, {\r\n            name: budgetName,\r\n            amount: budgetAmount,\r\n            category: category,\r\n            totalBudget: totalBudget\r\n        });\r\n        await fetchBudgets(user, setBudgets);\r\n    } catch (err) {\r\n        console.error(err);\r\n        console.log(\"Error updating budget\");\r\n    }\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Button, FloatingLabel, Form} from \"react-bootstrap\";\r\nimport {updateBudget} from \"./Database-Components/UpdateBudget\";\r\nimport {MDBCard} from \"mdb-react-ui-kit\";\r\nimport {Alert} from \"@mui/material\";\r\nimport BudgetAlert from \"./BudgetAlert\";\r\n\r\n\r\nfunction EditBudgetForm({\r\n                            user,\r\n                            budgets,\r\n                            setBudgets,\r\n                            budgetName,\r\n                            setBudgetName,\r\n                            editBudget,\r\n                            setEditBudget,\r\n                            budgetAmount,\r\n                            setBudgetAmount,\r\n                            totalBudget,\r\n                            setTotalBudget\r\n                        }) {\r\n\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const [selectedBudget, setSelectedBudget] = useState(budgets[0].name);\r\n\r\n    const [selectedCategory, setSelectedCategory] = useState(budgets[0].category);\r\n\r\n    const [showBudgetAlert, setShowBudgetAlert] = useState(false);\r\n\r\n    const handleNoChange = () => {\r\n        budgets.map((budget) => {\r\n            if (budget.name === selectedBudget) {\r\n                setBudgetName(budget.name);\r\n                setBudgetAmount(budget.amount);\r\n                setSelectedCategory(budget.category);\r\n                setTotalBudget(budget.totalBudget);\r\n            }\r\n            return null;\r\n        })\r\n    }\r\n\r\n    const handleAlertShow = () => {\r\n        setShowBudgetAlert(true);\r\n        setTimeout(() => {\r\n            setShowBudgetAlert(false);\r\n        }, 2500);\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        } else {\r\n            handleAlertShow();\r\n            event.preventDefault();\r\n            if(budgetAmount > totalBudget){\r\n                handleAlertShow();\r\n                return;\r\n            } else {\r\n                updateBudget(user, budgetName, setBudgets, selectedCategory, budgetAmount, selectedBudget, setEditBudget, totalBudget);\r\n            }\r\n        }\r\n        setValidated(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        handleNoChange();\r\n    }, [selectedBudget]);\r\n\r\n    return (<div className={'Dashboard-EditBudget-Form'}>\r\n        <MDBCard>\r\n            {showBudgetAlert && <BudgetAlert/>}\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit} className={\"editBudgetForm\"}>\r\n                <p className={'edit-info'}>Select budget</p>\r\n                <Form.Select aria-label=\"Default select example\" value={selectedBudget}\r\n                             onChange={(e) => setSelectedBudget(e.target.value)}>\r\n                    {budgets.map((budget, key) => (\r\n                        <option key={key} id={budget.budgetId} value={budget.name}>{budget.name}</option>))}\r\n                </Form.Select>\r\n                {budgets.map((budget) => [\r\n                    budget.name === selectedBudget && (\r\n                        <>\r\n                            <p className={'edit-info'}>Edit budget name</p>\r\n                            <FloatingLabel\r\n                                controlId=\"floatingBudget\"\r\n                                label={selectedBudget}\r\n                            >\r\n                                <Form.Control type=\"text\" placeholder=\"Budget\"\r\n                                              defaultValue={budget.name}\r\n                                              onChange={(e) => setBudgetName(e.target.value)}/>\r\n                                <Form.Control.Feedback>\r\n                                    Looks good!\r\n                                </Form.Control.Feedback>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Please provide a new name.\r\n                                </Form.Control.Feedback>\r\n                            </FloatingLabel>\r\n                            <p className={'edit-info'}>Select budget category</p>\r\n                            <Form.Select aria-label=\"Default select example\"\r\n                                         onChange={(e) => setSelectedCategory(e.target.value)}>\r\n                                <option>\r\n                                    {budgets.map((budget) => ([budget.name === selectedBudget && budget.category]))}\r\n                                </option>\r\n                                <option value={'Housing'}>Housing</option>\r\n                                <option value={'Transportation'}>Transportation</option>\r\n                                <option value={'Food'}>Food</option>\r\n                                <option value={'Utilities'}>Utilities</option>\r\n                                <option value={'Insurance'}>Insurance</option>\r\n                                <option value={'Medical/Dental'}>Medical/Dental</option>\r\n                                <option value={'Savings'}>Savings</option>\r\n                                <option value={'Other'}>Other</option>\r\n                            </Form.Select>\r\n                            <p className={'edit-info'}>Edit current budget amount</p>\r\n                            <FloatingLabel controlId=\"floatingAmount\"\r\n                                           label={budgets.map((budget) => ([budget.name === selectedBudget && budget.amount]))}\r\n                            >\r\n                                <Form.Control type=\"number\" placeholder=\"Amount\"\r\n                                              defaultValue={budget.amount}\r\n                                              onChange={(e) => setBudgetAmount(e.target.valueAsNumber)}/>\r\n                                <Form.Control.Feedback>\r\n                                    Looks good!\r\n                                </Form.Control.Feedback>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Please provide a new amount.\r\n                                </Form.Control.Feedback>\r\n                            </FloatingLabel>\r\n                            <p className={'edit-info'}>Edit maximum budget amount</p>\r\n                            <FloatingLabel controlId=\"floatingAmount\"\r\n                                           label={budgets.map((budget) => ([budget.name === selectedBudget && budget.totalBudget]))}\r\n                            >\r\n                                <Form.Control type=\"number\" placeholder=\"Amount\"\r\n                                              defaultValue={budget.totalBudget}\r\n                                              onChange={(e) => setTotalBudget(e.target.valueAsNumber)}/>\r\n                                <Form.Control.Feedback>\r\n                                    Looks good!\r\n                                </Form.Control.Feedback>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Please provide a new amount.\r\n                                </Form.Control.Feedback>\r\n                            </FloatingLabel>\r\n                            <Button variant={\"success\"} type={\"submit\"} className={'btn-edit'}>Edit Budget</Button>\r\n                            <Button variant={\"danger\"} onClick={() => setEditBudget(!editBudget)}\r\n                                    className={'btn-cancel'}>Cancel</Button>\r\n                        </>\r\n                    )\r\n                ])\r\n                }\r\n            </Form>\r\n        </MDBCard>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default EditBudgetForm;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {MDBContainer, MDBFooter} from \"mdb-react-ui-kit\";\r\n\r\nfunction Summary({budgets}) {\r\n\r\n    const [totalBudget, setTotalBudget] = useState(0);\r\n\r\n    const calculateTotalBudget = () => {\r\n        let total = 0;\r\n        budgets.forEach(budget => {\r\n            total += budget.amount;\r\n        });\r\n        setTotalBudget(total);\r\n    }\r\n\r\n    useEffect(() => {\r\n        calculateTotalBudget();\r\n    }, [budgets]);\r\n\r\n    return (\r\n        <div className={'Summary'}>\r\n            <MDBFooter className='text-center text-white' style={{ backgroundColor: '#1c1c1c' }}>\r\n                <MDBContainer className='p-4 pb-0'>\r\n                    <section>\r\n                        <p className='d-flex justify-content-center align-items-center budget-total'>Total budget: {totalBudget}</p>\r\n                    </section>\r\n                </MDBContainer>\r\n\r\n                <div className='text-center p-3' style={{ backgroundColor: 'rgba(0, 0, 0, 0.2)' }}>\r\n                    © 2022 Copyright:\r\n                    <a className='text-white ms-2' href='https://github.com/Blizzeq'>\r\n                        Jakub Krasuski\r\n                    </a>\r\n                </div>\r\n            </MDBFooter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Summary;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {auth, fetchDataToDB, logout} from \"../firebase-config\";\r\nimport {fetchUserName} from \"./Database-Components/FetchUserData\";\r\nimport {fetchBudgets} from \"./Database-Components/FetchBudgets\";\r\nimport {Button, ProgressBar} from \"react-bootstrap\";\r\nimport AddBudgetForm from \"./AddBudgetForm\";\r\nimport DeleteBudgetForm from \"./DeleteBudgetForm\";\r\nimport EditBudgetForm from \"./EditBudgetForm\";\r\nimport {MDBCard} from \"mdb-react-ui-kit\";\r\nimport Summary from \"./Summary\";\r\nimport LoadingScreen from \"./LoadingScreen\";\r\n\r\n\r\nfunction Dashboard({isLoading, setIsLoading}) {\r\n\r\n    const [user, loading] = useAuthState(auth);\r\n    const [name, setName] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const [budgetName, setBudgetName] = useState(\"\");\r\n    const [budgetAmount, setBudgetAmount] = useState(0);\r\n    const [totalBudget, setTotalBudget] = useState(0);\r\n    const [addBudget, setAddBudget] = useState(false);\r\n    const [delBudget, setDelBudget] = useState(false);\r\n    const [editBudget, setEditBudget] = useState(false);\r\n\r\n    const [budgets, setBudgets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (loading) {\r\n            setIsLoading(true);\r\n            return\r\n        }\r\n        if (loading === false) {\r\n            setIsLoading(false);\r\n        }\r\n        if (!user) return navigate(\"/\");\r\n        fetchDataToDB(user);\r\n        fetchUserName(user, setName);\r\n        fetchBudgets(user, setBudgets);\r\n\r\n    }, [user, loading, navigate]);\r\n\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? <LoadingScreen/> :\r\n                <div className={\"Dashboard\"}>\r\n                    <div className={\"Dashboard-Header\"}>\r\n                        {name} <Button variant={\"secondary\"} onClick={() => logout()}>Logout</Button>\r\n                    </div>\r\n                    <div className={\"Dashboard-Menu\"}>\r\n                        {addBudget ?\r\n                            <AddBudgetForm addBudget={addBudget} setAddBudget={setAddBudget} user={user}\r\n                                           budgetName={budgetName}\r\n                                           setBudgetName={setBudgetName} budgetAmount={budgetAmount}\r\n                                           setBudgetAmount={setBudgetAmount}\r\n                                           setBudgets={setBudgets}\r\n                                           budgets={budgets} totalBudget={totalBudget} setTotalBudget={setTotalBudget}/>\r\n                            : <div className={\"Dashboard-AddBudget\"}>\r\n                                <Button variant={\"success\"} onClick={() => setAddBudget(!addBudget)}>+</Button> <span>Add new Budget</span>\r\n                            </div>}\r\n                        {budgets.length !== 0 && [delBudget ?\r\n                            <DeleteBudgetForm delBudget={delBudget} setDelBudget={setDelBudget} user={user}\r\n                                              budgets={budgets}\r\n                                              setBudgets={setBudgets}/>\r\n                            : <div className={\"Dashboard-DeleteBudget\"}>\r\n                                <Button variant={\"danger\"} onClick={() => setDelBudget(!delBudget)}>-</Button> <span>Delete existing Budget</span>\r\n                            </div>]}\r\n                        {budgets.length !== 0 && [editBudget ?\r\n                            <EditBudgetForm user={user} budgets={budgets} setBudgets={setBudgets}\r\n                                            budgetName={budgetName}\r\n                                            setBudgetName={setBudgetName} editBudget={editBudget}\r\n                                            setEditBudget={setEditBudget}\r\n                                            budgetAmount={budgetAmount} setBudgetAmount={setBudgetAmount}\r\n                                            totalBudget={totalBudget}\r\n                                            setTotalBudget={setTotalBudget}/>\r\n                            : <div className={\"Dashboard-EditBudget\"}>\r\n                                <Button variant={\"warning\"} onClick={() => setEditBudget(!editBudget)}>✎</Button> <span>Edit existing Budget</span>\r\n                            </div>]}\r\n                    </div>\r\n                    <div className={\"Dashboard-Budget\"}>\r\n                        {budgets.length !== 0 &&\r\n                            [budgets.map((budget, index) => {\r\n                                return <MDBCard key={index}>\r\n                                    <p className={'Budget-Name'}>{budget.name}</p>\r\n                                    <p className={'Budget-Category'}>{budget.category}</p>\r\n                                    <p className={'Budget-Bar'}><ProgressBar animated now={budget.amount}\r\n                                                                             max={budget.totalBudget}></ProgressBar></p>\r\n                                    <p className={'Budget-Amount'}>{budget.amount}/{budget.totalBudget}</p>\r\n                                </MDBCard>\r\n\r\n                            })]\r\n                        }\r\n                    </div>\r\n                    <Summary budgets={budgets}/>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","// Import the functions you need from the SDKs you need\r\nimport {initializeApp} from \"firebase/app\";\r\nimport {\r\n    GoogleAuthProvider,\r\n    getAuth,\r\n    signInWithRedirect,\r\n    signInWithEmailAndPassword,\r\n    createUserWithEmailAndPassword,\r\n    sendPasswordResetEmail,\r\n    signOut\r\n} from \"firebase/auth\";\r\nimport {\r\n    getFirestore,\r\n    query,\r\n    getDocs,\r\n    collection,\r\n    where,\r\n    addDoc\r\n} from \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC3DMSjnUoA9dF9GM17-cXY2vGrD01UOsg\",\r\n    authDomain: \"budget-app-fba0d.firebaseapp.com\",\r\n    projectId: \"budget-app-fba0d\",\r\n    storageBucket: \"budget-app-fba0d.appspot.com\",\r\n    messagingSenderId: \"304622335247\",\r\n    appId: \"1:304622335247:web:fed99b704be7ad5cdafa7a\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth();\r\nconst db = getFirestore();\r\n\r\nconst fetchDataToDB = async (user) => {\r\n    try{\r\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\r\n        const docs = await getDocs(q);\r\n        if (docs.docs.length === 0) {\r\n            await addDoc(collection(db, \"users\"), {\r\n                uid: user.uid,\r\n                name: user.displayName,\r\n                authProvider: \"google\",\r\n                email: user.email\r\n            });\r\n        }\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\nconst googleProvider = new GoogleAuthProvider();\r\nconst signInWithGoogle = async () => {\r\n    try {\r\n        await signInWithRedirect(auth, googleProvider);\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\nconst logInWithEmailAndPassword = async (email, password) => {\r\n    try {\r\n        await signInWithEmailAndPassword(auth, email, password);\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\nconst registerWithEmailAndPassword = async (name, email, password) => {\r\n    try {\r\n        const res = await createUserWithEmailAndPassword(auth, email, password);\r\n        const user = res.user;\r\n        await addDoc(collection(db, \"users\"), {\r\n            uid: user.uid,\r\n            name,\r\n            authProvider: \"local\",\r\n            email\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\nconst sendPasswordReset = async (email) => {\r\n    try {\r\n        await sendPasswordResetEmail(auth, email);\r\n        alert(\"Password reset email sent\");\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\nconst logout = () => {\r\n    signOut(auth);\r\n};\r\nexport {\r\n    auth,\r\n    db,\r\n    signInWithGoogle,\r\n    logInWithEmailAndPassword,\r\n    registerWithEmailAndPassword,\r\n    sendPasswordReset,\r\n    logout,\r\n    fetchDataToDB\r\n};\r\n"],"sourceRoot":""}