{"version":3,"sources":["Components/Database-Components/FetchUserData.js","Components/Database-Components/FetchBudgets.js","Components/Database-Components/CreateBudget.js","Components/BudgetAlert.js","Components/AddBudgetForm.js","Components/Database-Components/DeleteBudget.js","Components/DeleteBudgetForm.js","Components/Database-Components/UpdateBudget.js","Components/EditBudgetForm.js","Components/Summary.js","Components/Dashboard.js","firebase-config.js","Components/FormValidation.js"],"names":["fetchUserName","user","setName","q","query","collection","db","where","uid","getDocs","doc","data","docs","name","displayName","console","error","log","fetchBudgets","setBudgets","id","querySnapshot","map","budget","amount","budgetId","category","totalBudget","createBudget","budgetName","budgetAmount","budgets","addBudget","setAddBudget","includes","addDoc","uuid","alert","BudgetAlert","Alert","className","severity","AddBudgetForm","useState","showBudgetAlert","setShowBudgetAlert","useForm","resolver","yupResolver","addBudgetValidation","register","handleSubmit","errors","formState","Form","onSubmit","BudgetAmount","TotalBudget","setTimeout","BudgetName","BudgetCategory","FloatingLabel","controlId","label","Control","type","placeholder","message","Select","value","Button","variant","onClick","deleteBudget","setDeleteBudget","budgetDoc","find","deleteDoc","ref","DeleteBudgetForm","delBudget","setDelBudget","selectedBudget","setSelectedBudget","onChange","e","target","key","updateBudget","setEditBudget","updateDoc","EditBudgetForm","setBudgetName","editBudget","setBudgetAmount","setTotalBudget","validated","setValidated","selectedCategory","setSelectedCategory","handleAlertShow","useEffect","noValidate","event","currentTarget","checkValidity","preventDefault","stopPropagation","defaultValue","Feedback","valueAsNumber","Summary","total","forEach","calculateTotalBudget","style","backgroundColor","href","Dashboard","isLoading","setIsLoading","useAuthState","auth","loading","navigate","useNavigate","fetchDataToDB","LoadingScreen","logout","length","index","ProgressBar","animated","now","max","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","getFirestore","authProvider","email","googleProvider","GoogleAuthProvider","signInWithGoogle","signInWithRedirect","logInWithEmailAndPassword","password","signInWithEmailAndPassword","registerWithEmailAndPassword","createUserWithEmailAndPassword","res","sendPasswordReset","sendPasswordResetEmail","signOut","loginScreenValidation","yup","shape","Email","required","Password","resetPasswordValidation","registerScreenValidation","Name","min","typeError"],"mappings":"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","file":"static/js/9.56a5d017.chunk.js","sourcesContent":["import {collection, getDocs, query, where} from \"firebase/firestore\";\nimport {db} from \"../../firebase-config\";\n\nexport const fetchUserName = async (user, setName) => {\n    try {\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\n        const doc = await getDocs(q);\n        const data = doc.docs[0].data();\n        setName(data.name);\n    } catch (err) {\n        setName(user.displayName);\n        console.error(err);\n        console.log(\"Error fetching user name\");\n    }\n};\n","import {collection, getDocs, query, where} from \"firebase/firestore\";\nimport {db} from \"../../firebase-config\";\n\nexport const fetchBudgets = async (user, setBudgets) => {\n    try {\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\n        const doc = await getDocs(q);\n        const querySnapshot = await getDocs(collection(db, \"users\", doc.docs[0].id, \"budgets\"));\n        const data = querySnapshot.docs.map(doc => doc.data());\n        setBudgets(data.map(budget => ({name: budget.name, amount: budget.amount, budgetId: budget.budgetId, category: budget.category, totalBudget: budget.totalBudget})));\n    } catch (err) {\n        console.error(err);\n        console.log(\"Error fetching budgets\");\n    }\n}\n","import {addDoc, collection, getDocs, query, where} from \"firebase/firestore\";\nimport {db} from \"../../firebase-config\";\nimport {uuid} from \"uuidv4\";\n\nexport const createBudget = async (user, budgetName, setBudgets, budgetAmount, budgets, addBudget, setAddBudget, category, totalBudget) => {\n    try {\n        setAddBudget(false);\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\n        const doc = await getDocs(q);\n        const querySnapshot = await getDocs(collection(db, \"users\", doc.docs[0].id, \"budgets\"));\n        const data = querySnapshot.docs.map(doc => doc.data());\n        const budgetNames = data.map(budget => budget.name);\n        if (!budgetNames.includes(budgetName)) {\n            await addDoc(collection(db, \"users\", doc.docs[0].id, \"budgets\"), {\n                uid: user.uid,\n                budgetId: uuid(),\n                name: budgetName,\n                category: category,\n                amount: budgetAmount,\n                totalBudget: totalBudget\n            });\n            setBudgets([...budgets, {name: budgetName, amount: budgetAmount, category: category, totalBudget: totalBudget, budgetId: uuid(), uid: user.uid}]);\n        } else {\n            alert(\"Budget name already exists\");\n        }\n    } catch (err) {\n        console.error(err);\n        console.log(\"Error creating budget\");\n    }\n};\n","import React from 'react';\nimport {Alert} from \"@mui/material\";\n\nfunction BudgetAlert() {\n    return (\n        <Alert className={'Alert-Budget'} severity=\"error\">Budget Amount can't be higher than Maximum Budget</Alert>\n    );\n}\n\nexport default BudgetAlert;\n","import React, {useState} from 'react';\nimport {MDBCard} from \"mdb-react-ui-kit\";\nimport {Button, FloatingLabel, Form} from \"react-bootstrap\";\nimport {createBudget} from \"./Database-Components/CreateBudget\";\nimport BudgetAlert from \"./BudgetAlert\";\nimport {useForm} from \"react-hook-form\";\nimport {addBudgetValidation} from \"./FormValidation\";\nimport {yupResolver} from \"@hookform/resolvers/yup\";\n\nfunction AddBudgetForm({\n                           user,\n                           addBudget,\n                           setAddBudget,\n                           budgets,\n                           setBudgets\n                       }) {\n    const [showBudgetAlert, setShowBudgetAlert] = useState(false);\n\n    const handleAlertShow = () => {\n        setShowBudgetAlert(true);\n        setTimeout(() => {\n            setShowBudgetAlert(false);\n        }, 2500);\n    }\n\n    const {register, handleSubmit, formState: {errors}} = useForm({\n        resolver: yupResolver(addBudgetValidation)\n    });\n\n    const onSubmit = (data) => {\n        if (data.BudgetAmount > data.TotalBudget) {\n            handleAlertShow();\n        } else {\n            createBudget(user, data.BudgetName, setBudgets, data.BudgetAmount, budgets, addBudget, setAddBudget, data.BudgetCategory, data.TotalBudget);\n        }\n    }\n\n    return (\n        <div className={\"Dashboard-AddBudget-Form\"}>\n            <MDBCard>\n                {showBudgetAlert && <BudgetAlert/>}\n                <Form onSubmit={handleSubmit(onSubmit)} className={\"createBudgetForm\"}>\n                    <p className={'edit-info'}>Enter budget name</p>\n                    <FloatingLabel\n                        controlId=\"floatingBudget\"\n                        label=\"Budget Name\"\n                    >\n                        <Form.Control type=\"text\" placeholder=\"Budget\"\n                            {...register(\"BudgetName\")}/>\n                        <p className={\"error\"}>{errors.BudgetName?.message}</p>\n                    </FloatingLabel>\n                    <p className={'edit-info'}>Select budget category</p>\n                    <Form.Select aria-label=\"Default select example\"\n                                 {...register(\"BudgetCategory\")}>\n                        <option value={\"Other\"}>Other</option>\n                        <option value={\"Housing\"}>Housing</option>\n                        <option value={\"Transportation\"}>Transportation</option>\n                        <option value={\"Food\"}>Food</option>\n                        <option value={\"Utilities\"}>Utilities</option>\n                        <option value={\"Insurance\"}>Insurance</option>\n                        <option value={\"Medical/Dental\"}>Medical/Dental</option>\n                        <option value={\"Savings\"}>Savings</option>\n                    </Form.Select>\n                    <p className={\"error\"}>{errors.BudgetCategory?.message}</p>\n                    <p className={'edit-info'}>Enter current budget amount</p>\n                    <FloatingLabel controlId=\"floatingAmount\" label=\"Current Amount\">\n                        <Form.Control type=\"number\" placeholder=\"Amount\"\n                            {...register(\"BudgetAmount\")}/>\n                        <p className={\"error\"}>{errors.BudgetAmount?.message}</p>\n                    </FloatingLabel>\n                    <p className={'edit-info'}>Enter maximum budget amount</p>\n                    <FloatingLabel controlId=\"floatingAmount\" label=\"Maximum Amount\">\n                        <Form.Control type=\"number\" placeholder=\"Amount\"\n                            {...register(\"TotalBudget\")}/>\n                        <p className={\"error\"}>{errors.TotalBudget?.message}</p>\n                    </FloatingLabel>\n                    <Button variant={\"success\"} type={\"submit\"} className={'btn-submit'}>Add Budget</Button>\n                    <Button variant={\"danger\"} onClick={() => setAddBudget(!addBudget)}\n                            className={'btn-cancel'}>Cancel</Button>\n                </Form>\n            </MDBCard>\n        </div>\n    );\n}\n\nexport default AddBudgetForm;\n","import {collection, deleteDoc, getDocs, query, where} from \"firebase/firestore\";\nimport {db} from \"../../firebase-config\";\nimport {fetchBudgets} from \"./FetchBudgets\";\n\nexport const deleteBudget = async (user, budgetName, budgets, setBudgets, deleteBudget, setDeleteBudget) => {\n    try {\n        setDeleteBudget(false);\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\n        const doc = await getDocs(q);\n        const querySnapshot = await getDocs(collection(db, \"users\", doc.docs[0].id, \"budgets\"));\n        const budgetDoc = querySnapshot.docs.find(doc => doc.data().name === budgetName);\n        await deleteDoc(budgetDoc.ref);\n        await fetchBudgets(user, setBudgets);\n    } catch (err) {\n        console.error(err);\n        console.log(\"Error deleting budget\");\n    }\n}\n","import React, {useState} from 'react';\nimport {MDBCard} from \"mdb-react-ui-kit\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {deleteBudget} from \"./Database-Components/DeleteBudget\";\n\nfunction DeleteBudgetForm({user, delBudget, setDelBudget, budgets, setBudgets}) {\n\n    const [selectedBudget, setSelectedBudget] = useState(budgets[0].name);\n\n    const handleSubmit = () => {\n            deleteBudget(user, selectedBudget, budgets, setBudgets, delBudget, setDelBudget);\n    };\n\n    return (\n        <div className={\"Dashboard-DeleteBudget-Form\"}>\n            <MDBCard>\n                <Form onSubmit={handleSubmit} className={\"deleteBudgetForm\"}>\n                    <p className={'delete-info'}>Select budget</p>\n                    <Form.Select aria-label=\"Default select example\" value={selectedBudget} onChange={(e) => setSelectedBudget(e.target.value)}>\n                        {budgets.map((budget, key) => (\n                            <option key={key} id={budget.budgetId} value={budget.name}>{budget.name}</option>\n                        ))}\n                    </Form.Select>\n                    <Button variant={\"success\"} type={\"submit\"} className={'btn-delete'}>Delete Budget</Button>\n                    <Button variant={\"danger\"} onClick={() => setDelBudget(!delBudget)}\n                            className={'btn-cancel'}>Cancel</Button>\n                </Form>\n            </MDBCard>\n        </div>\n    );\n}\n\nexport default DeleteBudgetForm;\n","import {collection, getDocs, query, updateDoc, where} from \"firebase/firestore\";\nimport {db} from \"../../firebase-config\";\nimport {fetchBudgets} from \"./FetchBudgets\";\n\nexport const updateBudget = async (user, budgetName, setBudgets, category, budgetAmount, selectedBudget, setEditBudget, totalBudget) => {\n    try {\n        setEditBudget(false);\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\n        const doc = await getDocs(q);\n        const querySnapshot = await getDocs(collection(db, \"users\", doc.docs[0].id, \"budgets\"));\n        const budgetDoc = querySnapshot.docs.find(doc => doc.data().name === selectedBudget);\n        await updateDoc(budgetDoc.ref, {\n            name: budgetName,\n            amount: budgetAmount,\n            category: category,\n            totalBudget: totalBudget\n        });\n        await fetchBudgets(user, setBudgets);\n    } catch (err) {\n        console.error(err);\n        console.log(\"Error updating budget\");\n    }\n};\n","import React, {useEffect, useState} from 'react';\nimport {Button, FloatingLabel, Form} from \"react-bootstrap\";\nimport {updateBudget} from \"./Database-Components/UpdateBudget\";\nimport {MDBCard} from \"mdb-react-ui-kit\";\nimport BudgetAlert from \"./BudgetAlert\";\n\n\nfunction EditBudgetForm({\n                            user,\n                            budgets,\n                            setBudgets,\n                            budgetName,\n                            setBudgetName,\n                            editBudget,\n                            setEditBudget,\n                            budgetAmount,\n                            setBudgetAmount,\n                            totalBudget,\n                            setTotalBudget\n                        }) {\n\n    const [validated, setValidated] = useState(false);\n\n    const [selectedBudget, setSelectedBudget] = useState(budgets[0].name);\n\n    const [selectedCategory, setSelectedCategory] = useState(budgets[0].category);\n\n    const [showBudgetAlert, setShowBudgetAlert] = useState(false);\n\n    const handleNoChange = () => {\n        budgets.map((budget) => {\n            if (budget.name === selectedBudget) {\n                setBudgetName(budget.name);\n                setBudgetAmount(budget.amount);\n                setSelectedCategory(budget.category);\n                setTotalBudget(budget.totalBudget);\n            }\n            return null;\n        })\n    }\n\n    const handleAlertShow = () => {\n        setShowBudgetAlert(true);\n        setTimeout(() => {\n            setShowBudgetAlert(false);\n        }, 2500);\n    }\n\n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            handleAlertShow();\n            event.preventDefault();\n            if(budgetAmount > totalBudget){\n                handleAlertShow();\n                return;\n            } else {\n                updateBudget(user, budgetName, setBudgets, selectedCategory, budgetAmount, selectedBudget, setEditBudget, totalBudget);\n            }\n        }\n        setValidated(true);\n    };\n\n    useEffect(() => {\n        handleNoChange();\n    }, [selectedBudget]);\n\n    return (<div className={'Dashboard-EditBudget-Form'}>\n        <MDBCard>\n            {showBudgetAlert && <BudgetAlert/>}\n            <Form noValidate validated={validated} onSubmit={handleSubmit} className={\"editBudgetForm\"}>\n                <p className={'edit-info'}>Select budget</p>\n                <Form.Select aria-label=\"Default select example\" value={selectedBudget}\n                             onChange={(e) => setSelectedBudget(e.target.value)}>\n                    {budgets.map((budget, key) => (\n                        <option key={key} id={budget.budgetId} value={budget.name}>{budget.name}</option>))}\n                </Form.Select>\n                {budgets.map((budget) => [\n                    budget.name === selectedBudget && (\n                        <>\n                            <p className={'edit-info'}>Edit budget name</p>\n                            <FloatingLabel\n                                controlId=\"floatingBudget\"\n                                label={selectedBudget}\n                            >\n                                <Form.Control type=\"text\" placeholder=\"Budget\"\n                                              defaultValue={budget.name}\n                                              onChange={(e) => setBudgetName(e.target.value)}/>\n                                <Form.Control.Feedback>\n                                    Looks good!\n                                </Form.Control.Feedback>\n                                <Form.Control.Feedback type=\"invalid\">\n                                    Please provide a new name.\n                                </Form.Control.Feedback>\n                            </FloatingLabel>\n                            <p className={'edit-info'}>Select budget category</p>\n                            <Form.Select aria-label=\"Default select example\"\n                                         onChange={(e) => setSelectedCategory(e.target.value)}>\n                                <option>\n                                    {budgets.map((budget) => ([budget.name === selectedBudget && budget.category]))}\n                                </option>\n                                <option value={'Housing'}>Housing</option>\n                                <option value={'Transportation'}>Transportation</option>\n                                <option value={'Food'}>Food</option>\n                                <option value={'Utilities'}>Utilities</option>\n                                <option value={'Insurance'}>Insurance</option>\n                                <option value={'Medical/Dental'}>Medical/Dental</option>\n                                <option value={'Savings'}>Savings</option>\n                                <option value={'Other'}>Other</option>\n                            </Form.Select>\n                            <p className={'edit-info'}>Edit current budget amount</p>\n                            <FloatingLabel controlId=\"floatingAmount\"\n                                           label={budgets.map((budget) => ([budget.name === selectedBudget && budget.amount]))}\n                            >\n                                <Form.Control type=\"number\" placeholder=\"Amount\"\n                                              defaultValue={budget.amount}\n                                              onChange={(e) => setBudgetAmount(e.target.valueAsNumber)}/>\n                                <Form.Control.Feedback>\n                                    Looks good!\n                                </Form.Control.Feedback>\n                                <Form.Control.Feedback type=\"invalid\">\n                                    Please provide a new amount.\n                                </Form.Control.Feedback>\n                            </FloatingLabel>\n                            <p className={'edit-info'}>Edit maximum budget amount</p>\n                            <FloatingLabel controlId=\"floatingAmount\"\n                                           label={budgets.map((budget) => ([budget.name === selectedBudget && budget.totalBudget]))}\n                            >\n                                <Form.Control type=\"number\" placeholder=\"Amount\"\n                                              defaultValue={budget.totalBudget}\n                                              onChange={(e) => setTotalBudget(e.target.valueAsNumber)}/>\n                                <Form.Control.Feedback>\n                                    Looks good!\n                                </Form.Control.Feedback>\n                                <Form.Control.Feedback type=\"invalid\">\n                                    Please provide a new amount.\n                                </Form.Control.Feedback>\n                            </FloatingLabel>\n                            <Button variant={\"success\"} type={\"submit\"} className={'btn-edit'}>Edit Budget</Button>\n                            <Button variant={\"danger\"} onClick={() => setEditBudget(!editBudget)}\n                                    className={'btn-cancel'}>Cancel</Button>\n                        </>\n                    )\n                ])\n                }\n            </Form>\n        </MDBCard>\n    </div>\n    );\n}\n\nexport default EditBudgetForm;\n","import React, {useEffect, useState} from 'react';\nimport {MDBContainer, MDBFooter} from \"mdb-react-ui-kit\";\n\nfunction Summary({budgets}) {\n\n    const [totalBudget, setTotalBudget] = useState(0);\n\n    const calculateTotalBudget = () => {\n        let total = 0;\n        budgets.forEach(budget => {\n            total += budget.amount;\n        });\n        setTotalBudget(total);\n    }\n\n    useEffect(() => {\n        calculateTotalBudget();\n    }, [budgets]);\n\n    return (\n        <div className={'Summary'}>\n            <MDBFooter className='text-center text-white' style={{ backgroundColor: '#1c1c1c' }}>\n                <MDBContainer className='p-4 pb-0'>\n                    <section>\n                        <p className='d-flex justify-content-center align-items-center budget-total'>Total budget: {totalBudget}</p>\n                    </section>\n                </MDBContainer>\n\n                <div className='text-center p-3' style={{ backgroundColor: 'rgba(0, 0, 0, 0.2)' }}>\n                    © 2022 Copyright:\n                    <a className='text-white ms-2' href='https://github.com/Blizzeq'>\n                        Jakub Krasuski\n                    </a>\n                </div>\n            </MDBFooter>\n        </div>\n    );\n}\n\nexport default Summary;\n","import React, {useEffect, useState} from \"react\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {useNavigate} from \"react-router-dom\";\nimport {auth, fetchDataToDB, logout} from \"../firebase-config\";\nimport {fetchUserName} from \"./Database-Components/FetchUserData\";\nimport {fetchBudgets} from \"./Database-Components/FetchBudgets\";\nimport {Button, ProgressBar} from \"react-bootstrap\";\nimport AddBudgetForm from \"./AddBudgetForm\";\nimport DeleteBudgetForm from \"./DeleteBudgetForm\";\nimport EditBudgetForm from \"./EditBudgetForm\";\nimport {MDBCard} from \"mdb-react-ui-kit\";\nimport Summary from \"./Summary\";\nimport LoadingScreen from \"./LoadingScreen\";\n\n\nfunction Dashboard({isLoading, setIsLoading}) {\n\n    const [user, loading] = useAuthState(auth);\n    const [name, setName] = useState(\"\");\n    const navigate = useNavigate();\n    const [budgetName, setBudgetName] = useState(\"\");\n    const [budgetAmount, setBudgetAmount] = useState(0);\n    const [totalBudget, setTotalBudget] = useState(0);\n    const [addBudget, setAddBudget] = useState(false);\n    const [delBudget, setDelBudget] = useState(false);\n    const [editBudget, setEditBudget] = useState(false);\n\n    const [budgets, setBudgets] = useState([]);\n\n    useEffect(() => {\n        if (loading) {\n            setIsLoading(true);\n            return\n        }\n        if (loading === false) {\n            setIsLoading(false);\n        }\n        if (!user) return navigate(\"/\");\n        fetchDataToDB(user);\n        fetchUserName(user, setName);\n        fetchBudgets(user, setBudgets);\n\n    }, [user, loading, navigate]);\n\n\n    return (\n        <>\n            {isLoading ? <LoadingScreen/> :\n                <div className={\"Dashboard\"}>\n                    <div className={\"Dashboard-Header\"}>\n                        {name} <Button variant={\"secondary\"} onClick={() => logout()}>Logout</Button>\n                    </div>\n                    <div className={\"Dashboard-Menu\"}>\n                        {addBudget ?\n                            <AddBudgetForm addBudget={addBudget} setAddBudget={setAddBudget} user={user}\n                                           budgetName={budgetName}\n                                           setBudgets={setBudgets}\n                                           budgets={budgets}/>\n                            : <div className={\"Dashboard-AddBudget\"}>\n                                <Button variant={\"success\"} onClick={() => setAddBudget(!addBudget)}>+</Button> <span>Add new Budget</span>\n                            </div>}\n                        {budgets.length !== 0 && [delBudget ?\n                            <DeleteBudgetForm delBudget={delBudget} setDelBudget={setDelBudget} user={user}\n                                              budgets={budgets}\n                                              setBudgets={setBudgets}/>\n                            : <div className={\"Dashboard-DeleteBudget\"}>\n                                <Button variant={\"danger\"} onClick={() => setDelBudget(!delBudget)}>-</Button> <span>Delete existing Budget</span>\n                            </div>]}\n                        {budgets.length !== 0 && [editBudget ?\n                            <EditBudgetForm user={user} budgets={budgets} setBudgets={setBudgets}\n                                            budgetName={budgetName}\n                                            setBudgetName={setBudgetName} editBudget={editBudget}\n                                            setEditBudget={setEditBudget}\n                                            budgetAmount={budgetAmount} setBudgetAmount={setBudgetAmount}\n                                            totalBudget={totalBudget}\n                                            setTotalBudget={setTotalBudget}/>\n                            : <div className={\"Dashboard-EditBudget\"}>\n                                <Button variant={\"warning\"} onClick={() => setEditBudget(!editBudget)}>✎</Button> <span>Edit existing Budget</span>\n                            </div>]}\n                    </div>\n                    <div className={\"Dashboard-Budget\"}>\n                        {budgets.length !== 0 &&\n                            [budgets.map((budget, index) => {\n                                return <MDBCard key={index}>\n                                    <p className={'Budget-Name'}>{budget.name}</p>\n                                    <p className={'Budget-Category'}>{budget.category}</p>\n                                    <p className={'Budget-Bar'}><ProgressBar animated now={budget.amount}\n                                                                             max={budget.totalBudget}></ProgressBar></p>\n                                    <p className={'Budget-Amount'}>{budget.amount}/{budget.totalBudget}</p>\n                                </MDBCard>\n\n                            })]\n                        }\n                    </div>\n                    <Summary budgets={budgets}/>\n                </div>\n            }\n        </>\n    );\n}\n\nexport default Dashboard;\n","// Import the functions you need from the SDKs you need\nimport {initializeApp} from \"firebase/app\";\nimport {\n    GoogleAuthProvider,\n    getAuth,\n    signInWithRedirect,\n    signInWithEmailAndPassword,\n    createUserWithEmailAndPassword,\n    sendPasswordResetEmail,\n    signOut\n} from \"firebase/auth\";\nimport {\n    getFirestore,\n    query,\n    getDocs,\n    collection,\n    where,\n    addDoc\n} from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC3DMSjnUoA9dF9GM17-cXY2vGrD01UOsg\",\n    authDomain: \"budget-app-fba0d.firebaseapp.com\",\n    projectId: \"budget-app-fba0d\",\n    storageBucket: \"budget-app-fba0d.appspot.com\",\n    messagingSenderId: \"304622335247\",\n    appId: \"1:304622335247:web:fed99b704be7ad5cdafa7a\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth();\nconst db = getFirestore();\n\nconst fetchDataToDB = async (user) => {\n    try{\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n        const docs = await getDocs(q);\n        if (docs.docs.length === 0) {\n            await addDoc(collection(db, \"users\"), {\n                uid: user.uid,\n                name: user.displayName,\n                authProvider: \"google\",\n                email: user.email\n            });\n        }\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\n\nconst googleProvider = new GoogleAuthProvider();\nconst signInWithGoogle = async () => {\n    try {\n        await signInWithRedirect(auth, googleProvider);\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\n\nconst logInWithEmailAndPassword = async (email, password) => {\n    try {\n        await signInWithEmailAndPassword(auth, email, password);\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\nconst registerWithEmailAndPassword = async (name, email, password) => {\n    try {\n        const res = await createUserWithEmailAndPassword(auth, email, password);\n        const user = res.user;\n        await addDoc(collection(db, \"users\"), {\n            uid: user.uid,\n            name,\n            authProvider: \"local\",\n            email\n        });\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\nconst sendPasswordReset = async (email) => {\n    try {\n        await sendPasswordResetEmail(auth, email);\n        alert(\"Password reset email sent\");\n\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\nconst logout = () => {\n    signOut(auth);\n};\nexport {\n    auth,\n    db,\n    signInWithGoogle,\n    logInWithEmailAndPassword,\n    registerWithEmailAndPassword,\n    sendPasswordReset,\n    logout,\n    fetchDataToDB\n};\n","import * as yup from 'yup';\n\nconst loginScreenValidation = yup.object().shape({\n    Email: yup.string().email(\"Please provide a valid email.\").required(\"Email is required.\"),\n    Password: yup.string().required(\"Password is required.\")\n});\n\nconst resetPasswordValidation = yup.object().shape({\n    Email: yup.string().email(\"Please provide a valid email.\").required(\"Email is required.\")\n});\n\nconst registerScreenValidation = yup.object().shape({\n    Name: yup.string().required(\"Name is required.\"),\n    Email: yup.string().email(\"Please provide a valid email.\").required(\"Email is required.\"),\n    Password: yup.string().required(\"Password is required.\").min(6, \"Password must be at least 6 characters.\")\n});\n\nconst addBudgetValidation = yup.object().shape({\n    BudgetName: yup.string().required(\"Budget name is required.\"),\n    BudgetCategory: yup.string().required(\"Budget category is required.\"),\n    BudgetAmount: yup.number().required().typeError(\"Budget amount is required.\"),\n    TotalBudget: yup.number().required().typeError(\"Total budget is required.\").min(yup.ref(\"BudgetAmount\"), \"Total budget must be greater than current budget amount.\")\n});\n\nexport {loginScreenValidation, resetPasswordValidation, registerScreenValidation, addBudgetValidation};\n\n"],"sourceRoot":""}