{"version":3,"sources":["Components/Database-Components/FetchUserData.js","Components/Database-Components/FetchBudgets.js","Components/Database-Components/CreateBudget.js","Components/BudgetAlert.js","Components/AddBudgetForm.js","Components/Database-Components/DeleteBudget.js","Components/DeleteBudgetForm.js","Components/Database-Components/UpdateBudget.js","Components/EditBudgetForm.js","Components/Summary.js","Components/Dashboard.js","firebase-config.js"],"names":["fetchUserName","user","setName","q","query","collection","db","where","uid","getDocs","doc","data","docs","name","displayName","console","error","log","fetchBudgets","setBudgets","id","querySnapshot","map","budget","amount","budgetId","category","totalBudget","createBudget","budgetName","budgetAmount","budgets","addBudget","setAddBudget","includes","addDoc","uuid","alert","BudgetAlert","Alert","className","severity","AddBudgetForm","setBudgetName","setBudgetAmount","setTotalBudget","useState","validated","setValidated","selectedCategory","setSelectedCategory","showBudgetAlert","setShowBudgetAlert","Form","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","setTimeout","FloatingLabel","controlId","label","Control","type","placeholder","onChange","e","target","value","required","Feedback","Select","valueAsNumber","Button","variant","onClick","deleteBudget","setDeleteBudget","budgetDoc","find","deleteDoc","ref","DeleteBudgetForm","delBudget","setDelBudget","selectedBudget","setSelectedBudget","key","updateBudget","setEditBudget","updateDoc","EditBudgetForm","editBudget","handleAlertShow","useEffect","defaultValue","Summary","total","forEach","calculateTotalBudget","style","backgroundColor","href","Dashboard","isLoading","setIsLoading","useAuthState","auth","loading","navigate","useNavigate","fetchDataToDB","LoadingScreen","logout","length","index","ProgressBar","animated","now","max","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","getFirestore","authProvider","email","message","googleProvider","GoogleAuthProvider","signInWithGoogle","signInWithRedirect","logInWithEmailAndPassword","password","signInWithEmailAndPassword","registerWithEmailAndPassword","createUserWithEmailAndPassword","res","sendPasswordReset","sendPasswordResetEmail","signOut"],"mappings":"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","file":"static/js/9.6ae2ca2b.chunk.js","sourcesContent":["import {collection, getDocs, query, where} from \"firebase/firestore\";\nimport {db} from \"../../firebase-config\";\n\nexport const fetchUserName = async (user, setName) => {\n    try {\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\n        const doc = await getDocs(q);\n        const data = doc.docs[0].data();\n        setName(data.name);\n    } catch (err) {\n        setName(user.displayName);\n        console.error(err);\n        console.log(\"Error fetching user name\");\n    }\n};\n","import {collection, getDocs, query, where} from \"firebase/firestore\";\nimport {db} from \"../../firebase-config\";\n\nexport const fetchBudgets = async (user, setBudgets) => {\n    try {\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\n        const doc = await getDocs(q);\n        const querySnapshot = await getDocs(collection(db, \"users\", doc.docs[0].id, \"budgets\"));\n        const data = querySnapshot.docs.map(doc => doc.data());\n        setBudgets(data.map(budget => ({name: budget.name, amount: budget.amount, budgetId: budget.budgetId, category: budget.category, totalBudget: budget.totalBudget})));\n    } catch (err) {\n        console.error(err);\n        console.log(\"Error fetching budgets\");\n    }\n}\n","import {addDoc, collection, getDocs, query, where} from \"firebase/firestore\";\nimport {db} from \"../../firebase-config\";\nimport {uuid} from \"uuidv4\";\n\nexport const createBudget = async (user, budgetName, setBudgets, budgetAmount, budgets, addBudget, setAddBudget, category, totalBudget) => {\n    try {\n        setAddBudget(false);\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\n        const doc = await getDocs(q);\n        const querySnapshot = await getDocs(collection(db, \"users\", doc.docs[0].id, \"budgets\"));\n        const data = querySnapshot.docs.map(doc => doc.data());\n        const budgetNames = data.map(budget => budget.name);\n        if (!budgetNames.includes(budgetName)) {\n            await addDoc(collection(db, \"users\", doc.docs[0].id, \"budgets\"), {\n                uid: user.uid,\n                budgetId: uuid(),\n                name: budgetName,\n                category: category,\n                amount: budgetAmount,\n                totalBudget: totalBudget\n            });\n            setBudgets([...budgets, {name: budgetName, amount: budgetAmount, category: category, totalBudget: totalBudget, budgetId: uuid(), uid: user.uid}]);\n        } else {\n            alert(\"Budget name already exists\");\n        }\n    } catch (err) {\n        console.error(err);\n        console.log(\"Error creating budget\");\n    }\n};\n","import React from 'react';\nimport {Alert} from \"@mui/material\";\n\nfunction BudgetAlert() {\n    return (\n        <Alert className={'Alert-Budget'} severity=\"error\">Budget Amount can't be higher than Maximum Budget</Alert>\n    );\n}\n\nexport default BudgetAlert;\n","import React, {useState} from 'react';\nimport {MDBCard} from \"mdb-react-ui-kit\";\nimport {Button, FloatingLabel, Form} from \"react-bootstrap\";\nimport {createBudget} from \"./Database-Components/CreateBudget\";\nimport BudgetAlert from \"./BudgetAlert\";\n\nfunction AddBudgetForm({\n                           user,\n                           addBudget,\n                           setAddBudget,\n                           budgets,\n                           setBudgets,\n                           setBudgetName,\n                           setBudgetAmount,\n                           budgetName,\n                           budgetAmount,\n                           totalBudget,\n                           setTotalBudget\n                       }) {\n    const [validated, setValidated] = useState(false);\n\n    const [selectedCategory, setSelectedCategory] = useState(\"Other\");\n\n    const [showBudgetAlert, setShowBudgetAlert] = useState(false);\n\n    const handleAlertShow = () => {\n        setShowBudgetAlert(true);\n        setTimeout(() => {\n            setShowBudgetAlert(false);\n        }, 2500);\n    }\n\n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            if (budgetAmount > totalBudget) {\n                handleAlertShow();\n                return;\n            } else {\n                createBudget(user, budgetName, setBudgets, budgetAmount, budgets, addBudget, setAddBudget, selectedCategory, totalBudget);\n            }\n        }\n        setValidated(true);\n    };\n\n    return (\n        <div className={\"Dashboard-AddBudget-Form\"}>\n            <MDBCard>\n                <Form noValidate validated={validated} onSubmit={handleSubmit} className={\"createBudgetForm\"}>\n                    <p className={'edit-info'}>Enter budget name</p>\n                    <FloatingLabel\n                        controlId=\"floatingBudget\"\n                        label=\"Budget Name\"\n                    >\n                        <Form.Control type=\"text\" placeholder=\"Budget\"\n                                      onChange={(e) => setBudgetName(e.target.value)} required/>\n                        <Form.Control.Feedback>\n                            Looks good!\n                        </Form.Control.Feedback>\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please provide a name for your budget.\n                        </Form.Control.Feedback>\n                    </FloatingLabel>\n                    <p className={'edit-info'}>Select budget category</p>\n                    <Form.Select aria-label=\"Default select example\"\n                                 onChange={(e) => setSelectedCategory(e.target.value)}>\n                        <option>Select category</option>\n                        <option value={\"Housing\"}>Housing</option>\n                        <option value={\"Transportation\"}>Transportation</option>\n                        <option value={\"Food\"}>Food</option>\n                        <option value={\"Utilities\"}>Utilities</option>\n                        <option value={\"Insurance\"}>Insurance</option>\n                        <option value={\"Medical/Dental\"}>Medical/Dental</option>\n                        <option value={\"Savings\"}>Savings</option>\n                        <option value={\"Other\"}>Other</option>\n                    </Form.Select>\n                    <p className={'edit-info'}>Enter current budget amount</p>\n                    <FloatingLabel controlId=\"floatingAmount\" label=\"Current Amount\">\n                        <Form.Control type=\"number\" placeholder=\"Amount\"\n                                      onChange={(e) => setBudgetAmount(e.target.valueAsNumber)} required/>\n                        <Form.Control.Feedback>\n                            Looks good!\n                        </Form.Control.Feedback>\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please provide a valid amount.\n                        </Form.Control.Feedback>\n                    </FloatingLabel>\n                    <p className={'edit-info'}>Enter maximum budget amount</p>\n                    <FloatingLabel controlId=\"floatingAmount\" label=\"Maximum Amount\">\n                        <Form.Control type=\"number\" placeholder=\"Amount\"\n                                      onChange={(e) => setTotalBudget(e.target.valueAsNumber)} required/>\n                        <Form.Control.Feedback>\n                            Looks good!\n                        </Form.Control.Feedback>\n                        <Form.Control.Feedback type=\"invalid\">\n                            Please provide a valid total amount.\n                        </Form.Control.Feedback>\n                    </FloatingLabel>\n                    {showBudgetAlert && <BudgetAlert/>}\n                    <Button variant={\"success\"} type={\"submit\"} className={'btn-submit'}>Add Budget</Button>\n                    <Button variant={\"danger\"} onClick={() => setAddBudget(!addBudget)}\n                            className={'btn-cancel'}>Cancel</Button>\n                </Form>\n            </MDBCard>\n        </div>\n    );\n}\n\nexport default AddBudgetForm;\n","import {collection, deleteDoc, getDocs, query, where} from \"firebase/firestore\";\nimport {db} from \"../../firebase-config\";\nimport {fetchBudgets} from \"./FetchBudgets\";\n\nexport const deleteBudget = async (user, budgetName, budgets, setBudgets, deleteBudget, setDeleteBudget) => {\n    try {\n        setDeleteBudget(false);\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\n        const doc = await getDocs(q);\n        const querySnapshot = await getDocs(collection(db, \"users\", doc.docs[0].id, \"budgets\"));\n        const budgetDoc = querySnapshot.docs.find(doc => doc.data().name === budgetName);\n        await deleteDoc(budgetDoc.ref);\n        await fetchBudgets(user, setBudgets);\n    } catch (err) {\n        console.error(err);\n        console.log(\"Error deleting budget\");\n    }\n}\n","import React, {useState} from 'react';\nimport {MDBCard} from \"mdb-react-ui-kit\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {deleteBudget} from \"./Database-Components/DeleteBudget\";\n\nfunction DeleteBudgetForm({user, delBudget, setDelBudget, budgets, setBudgets}) {\n\n    const [selectedBudget, setSelectedBudget] = useState(budgets[0].name);\n\n    const handleSubmit = () => {\n            deleteBudget(user, selectedBudget, budgets, setBudgets, delBudget, setDelBudget);\n    };\n\n    return (\n        <div className={\"Dashboard-DeleteBudget-Form\"}>\n            <MDBCard>\n                <Form onSubmit={handleSubmit} className={\"deleteBudgetForm\"}>\n                    <p className={'delete-info'}>Select budget</p>\n                    <Form.Select aria-label=\"Default select example\" value={selectedBudget} onChange={(e) => setSelectedBudget(e.target.value)}>\n                        {budgets.map((budget, key) => (\n                            <option key={key} id={budget.budgetId} value={budget.name}>{budget.name}</option>\n                        ))}\n                    </Form.Select>\n                    <Button variant={\"success\"} type={\"submit\"} className={'btn-delete'}>Delete Budget</Button>\n                    <Button variant={\"danger\"} onClick={() => setDelBudget(!delBudget)}\n                            className={'btn-cancel'}>Cancel</Button>\n                </Form>\n            </MDBCard>\n        </div>\n    );\n}\n\nexport default DeleteBudgetForm;\n","import {collection, getDocs, query, updateDoc, where} from \"firebase/firestore\";\nimport {db} from \"../../firebase-config\";\nimport {fetchBudgets} from \"./FetchBudgets\";\n\nexport const updateBudget = async (user, budgetName, setBudgets, category, budgetAmount, selectedBudget, setEditBudget, totalBudget) => {\n    try {\n        setEditBudget(false);\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\n        const doc = await getDocs(q);\n        const querySnapshot = await getDocs(collection(db, \"users\", doc.docs[0].id, \"budgets\"));\n        const budgetDoc = querySnapshot.docs.find(doc => doc.data().name === selectedBudget);\n        await updateDoc(budgetDoc.ref, {\n            name: budgetName,\n            amount: budgetAmount,\n            category: category,\n            totalBudget: totalBudget\n        });\n        await fetchBudgets(user, setBudgets);\n    } catch (err) {\n        console.error(err);\n        console.log(\"Error updating budget\");\n    }\n};\n","import React, {useEffect, useState} from 'react';\nimport {Button, FloatingLabel, Form} from \"react-bootstrap\";\nimport {updateBudget} from \"./Database-Components/UpdateBudget\";\nimport {MDBCard} from \"mdb-react-ui-kit\";\nimport {Alert} from \"@mui/material\";\nimport BudgetAlert from \"./BudgetAlert\";\n\n\nfunction EditBudgetForm({\n                            user,\n                            budgets,\n                            setBudgets,\n                            budgetName,\n                            setBudgetName,\n                            editBudget,\n                            setEditBudget,\n                            budgetAmount,\n                            setBudgetAmount,\n                            totalBudget,\n                            setTotalBudget\n                        }) {\n\n    const [validated, setValidated] = useState(false);\n\n    const [selectedBudget, setSelectedBudget] = useState(budgets[0].name);\n\n    const [selectedCategory, setSelectedCategory] = useState(budgets[0].category);\n\n    const [showBudgetAlert, setShowBudgetAlert] = useState(false);\n\n    const handleNoChange = () => {\n        budgets.map((budget) => {\n            if (budget.name === selectedBudget) {\n                setBudgetName(budget.name);\n                setBudgetAmount(budget.amount);\n                setSelectedCategory(budget.category);\n                setTotalBudget(budget.totalBudget);\n            }\n            return null;\n        })\n    }\n\n    const handleAlertShow = () => {\n        setShowBudgetAlert(true);\n        setTimeout(() => {\n            setShowBudgetAlert(false);\n        }, 2500);\n    }\n\n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n        if (form.checkValidity() === false) {\n            event.preventDefault();\n            event.stopPropagation();\n        } else {\n            handleAlertShow();\n            event.preventDefault();\n            if(budgetAmount > totalBudget){\n                handleAlertShow();\n                return;\n            } else {\n                updateBudget(user, budgetName, setBudgets, selectedCategory, budgetAmount, selectedBudget, setEditBudget, totalBudget);\n            }\n        }\n        setValidated(true);\n    };\n\n    useEffect(() => {\n        handleNoChange();\n    }, [selectedBudget]);\n\n    return (<div className={'Dashboard-EditBudget-Form'}>\n        <MDBCard>\n            <Form noValidate validated={validated} onSubmit={handleSubmit} className={\"editBudgetForm\"}>\n                <p className={'edit-info'}>Select budget</p>\n                <Form.Select aria-label=\"Default select example\" value={selectedBudget}\n                             onChange={(e) => setSelectedBudget(e.target.value)}>\n                    {budgets.map((budget, key) => (\n                        <option key={key} id={budget.budgetId} value={budget.name}>{budget.name}</option>))}\n                </Form.Select>\n                {budgets.map((budget) => [\n                    budget.name === selectedBudget && (\n                        <>\n                            <p className={'edit-info'}>Edit budget name</p>\n                            <FloatingLabel\n                                controlId=\"floatingBudget\"\n                                label={selectedBudget}\n                            >\n                                <Form.Control type=\"text\" placeholder=\"Budget\"\n                                              defaultValue={budget.name}\n                                              onChange={(e) => setBudgetName(e.target.value)}/>\n                                <Form.Control.Feedback>\n                                    Looks good!\n                                </Form.Control.Feedback>\n                                <Form.Control.Feedback type=\"invalid\">\n                                    Please provide a new name.\n                                </Form.Control.Feedback>\n                            </FloatingLabel>\n                            <p className={'edit-info'}>Select budget category</p>\n                            <Form.Select aria-label=\"Default select example\"\n                                         onChange={(e) => setSelectedCategory(e.target.value)}>\n                                <option>\n                                    {budgets.map((budget) => ([budget.name === selectedBudget && budget.category]))}\n                                </option>\n                                <option value={'Housing'}>Housing</option>\n                                <option value={'Transportation'}>Transportation</option>\n                                <option value={'Food'}>Food</option>\n                                <option value={'Utilities'}>Utilities</option>\n                                <option value={'Insurance'}>Insurance</option>\n                                <option value={'Medical/Dental'}>Medical/Dental</option>\n                                <option value={'Savings'}>Savings</option>\n                                <option value={'Other'}>Other</option>\n                            </Form.Select>\n                            <p className={'edit-info'}>Edit current budget amount</p>\n                            <FloatingLabel controlId=\"floatingAmount\"\n                                           label={budgets.map((budget) => ([budget.name === selectedBudget && budget.amount]))}\n                            >\n                                <Form.Control type=\"number\" placeholder=\"Amount\"\n                                              defaultValue={budget.amount}\n                                              onChange={(e) => setBudgetAmount(e.target.valueAsNumber)}/>\n                                <Form.Control.Feedback>\n                                    Looks good!\n                                </Form.Control.Feedback>\n                                <Form.Control.Feedback type=\"invalid\">\n                                    Please provide a new amount.\n                                </Form.Control.Feedback>\n                            </FloatingLabel>\n                            <p className={'edit-info'}>Edit maximum budget amount</p>\n                            <FloatingLabel controlId=\"floatingAmount\"\n                                           label={budgets.map((budget) => ([budget.name === selectedBudget && budget.totalBudget]))}\n                            >\n                                <Form.Control type=\"number\" placeholder=\"Amount\"\n                                              defaultValue={budget.totalBudget}\n                                              onChange={(e) => setTotalBudget(e.target.valueAsNumber)}/>\n                                <Form.Control.Feedback>\n                                    Looks good!\n                                </Form.Control.Feedback>\n                                <Form.Control.Feedback type=\"invalid\">\n                                    Please provide a new amount.\n                                </Form.Control.Feedback>\n                            </FloatingLabel>\n                            {showBudgetAlert && <BudgetAlert/>}\n                            <Button variant={\"success\"} type={\"submit\"} className={'btn-edit'}>Edit Budget</Button>\n                            <Button variant={\"danger\"} onClick={() => setEditBudget(!editBudget)}\n                                    className={'btn-cancel'}>Cancel</Button>\n                        </>\n                    )\n                ])\n                }\n            </Form>\n        </MDBCard>\n    </div>\n    );\n}\n\nexport default EditBudgetForm;\n","import React, {useEffect, useState} from 'react';\nimport {MDBContainer, MDBFooter} from \"mdb-react-ui-kit\";\n\nfunction Summary({budgets}) {\n\n    const [totalBudget, setTotalBudget] = useState(0);\n\n    const calculateTotalBudget = () => {\n        let total = 0;\n        budgets.forEach(budget => {\n            total += budget.amount;\n        });\n        setTotalBudget(total);\n    }\n\n    useEffect(() => {\n        calculateTotalBudget();\n    }, [budgets]);\n\n    return (\n        <div className={'Summary'}>\n            <MDBFooter className='text-center text-white' style={{ backgroundColor: '#1c1c1c' }}>\n                <MDBContainer className='p-4 pb-0'>\n                    <section className=''>\n                        <p className='d-flex justify-content-center align-items-center'>Total budget: {totalBudget}</p>\n                    </section>\n                </MDBContainer>\n\n                <div className='text-center p-3' style={{ backgroundColor: 'rgba(0, 0, 0, 0.2)' }}>\n                    © 2022 Copyright:\n                    <a className='text-white' href='https://github.com/Blizzeq'>\n                        Jakub Krasuski\n                    </a>\n                </div>\n            </MDBFooter>\n        </div>\n    );\n}\n\nexport default Summary;\n","import React, {useEffect, useState} from \"react\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {useNavigate} from \"react-router-dom\";\nimport {auth, fetchDataToDB, logout} from \"../firebase-config\";\nimport {fetchUserName} from \"./Database-Components/FetchUserData\";\nimport {fetchBudgets} from \"./Database-Components/FetchBudgets\";\nimport {Button, ProgressBar} from \"react-bootstrap\";\nimport AddBudgetForm from \"./AddBudgetForm\";\nimport DeleteBudgetForm from \"./DeleteBudgetForm\";\nimport EditBudgetForm from \"./EditBudgetForm\";\nimport {MDBCard} from \"mdb-react-ui-kit\";\nimport Summary from \"./Summary\";\nimport LoadingScreen from \"./LoadingScreen\";\n\n\nfunction Dashboard({isLoading, setIsLoading}) {\n\n    const [user, loading] = useAuthState(auth);\n    const [name, setName] = useState(\"\");\n    const navigate = useNavigate();\n    const [budgetName, setBudgetName] = useState(\"\");\n    const [budgetAmount, setBudgetAmount] = useState(0);\n    const [totalBudget, setTotalBudget] = useState(0);\n    const [addBudget, setAddBudget] = useState(false);\n    const [delBudget, setDelBudget] = useState(false);\n    const [editBudget, setEditBudget] = useState(false);\n\n    const [budgets, setBudgets] = useState([]);\n\n    useEffect(() => {\n        if (loading) {\n            setIsLoading(true);\n            return\n        }\n        if (loading === false) {\n            setIsLoading(false);\n        }\n        if (!user) return navigate(\"/\");\n        fetchDataToDB(user);\n        fetchUserName(user, setName);\n        fetchBudgets(user, setBudgets);\n\n    }, [user, loading, navigate]);\n\n\n    return (\n        <>\n            {isLoading ? <LoadingScreen/> :\n                <div className={\"Dashboard\"}>\n                    <div className={\"Dashboard-Header\"}>\n                        {name} <Button variant={\"secondary\"} onClick={() => logout()}>Logout</Button>\n                    </div>\n                    <div className={\"Dashboard-Menu\"}>\n                        {addBudget ?\n                            <AddBudgetForm addBudget={addBudget} setAddBudget={setAddBudget} user={user}\n                                           budgetName={budgetName}\n                                           setBudgetName={setBudgetName} budgetAmount={budgetAmount}\n                                           setBudgetAmount={setBudgetAmount}\n                                           setBudgets={setBudgets}\n                                           budgets={budgets} totalBudget={totalBudget} setTotalBudget={setTotalBudget}/>\n                            : <div className={\"Dashboard-AddBudget\"}>\n                                <Button variant={\"success\"} onClick={() => setAddBudget(!addBudget)}>+</Button> <span>Add new Budget</span>\n                            </div>}\n                        {budgets.length !== 0 && [delBudget ?\n                            <DeleteBudgetForm delBudget={delBudget} setDelBudget={setDelBudget} user={user}\n                                              budgets={budgets}\n                                              setBudgets={setBudgets}/>\n                            : <div className={\"Dashboard-DeleteBudget\"}>\n                                <Button variant={\"danger\"} onClick={() => setDelBudget(!delBudget)}>-</Button> <span>Delete existing Budget</span>\n                            </div>]}\n                        {budgets.length !== 0 && [editBudget ?\n                            <EditBudgetForm user={user} budgets={budgets} setBudgets={setBudgets}\n                                            budgetName={budgetName}\n                                            setBudgetName={setBudgetName} editBudget={editBudget}\n                                            setEditBudget={setEditBudget}\n                                            budgetAmount={budgetAmount} setBudgetAmount={setBudgetAmount}\n                                            totalBudget={totalBudget}\n                                            setTotalBudget={setTotalBudget}/>\n                            : <div className={\"Dashboard-EditBudget\"}>\n                                <Button variant={\"warning\"} onClick={() => setEditBudget(!editBudget)}>✎</Button> <span>Edit existing Budget</span>\n                            </div>]}\n                    </div>\n                    {budgets.length !== 0 &&\n                        [budgets.map((budget, index) => {\n                            return <div className={\"Dashboard-Budget\"} key={index}>\n                                <MDBCard>\n                                    <p className={'Budget-Name'}>{budget.name}</p>\n                                    <p className={'Budget-Category'}>{budget.category}</p>\n                                    <p className={'Budget-Bar'}><ProgressBar animated now={budget.amount} max={budget.totalBudget}></ProgressBar></p>\n                                    <p className={'Budget-Amount'}>{budget.amount}/{budget.totalBudget}</p>\n                                </MDBCard>\n                            </div>\n                        })]\n                    }\n                    <Summary budgets={budgets}/>\n                </div>\n            }\n        </>\n    );\n}\n\nexport default Dashboard;\n","// Import the functions you need from the SDKs you need\nimport {initializeApp} from \"firebase/app\";\nimport {\n    GoogleAuthProvider,\n    getAuth,\n    signInWithRedirect,\n    signInWithEmailAndPassword,\n    createUserWithEmailAndPassword,\n    sendPasswordResetEmail,\n    signOut\n} from \"firebase/auth\";\nimport {\n    getFirestore,\n    query,\n    getDocs,\n    collection,\n    where,\n    addDoc\n} from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyC3DMSjnUoA9dF9GM17-cXY2vGrD01UOsg\",\n    authDomain: \"budget-app-fba0d.firebaseapp.com\",\n    projectId: \"budget-app-fba0d\",\n    storageBucket: \"budget-app-fba0d.appspot.com\",\n    messagingSenderId: \"304622335247\",\n    appId: \"1:304622335247:web:fed99b704be7ad5cdafa7a\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth();\nconst db = getFirestore();\n\nconst fetchDataToDB = async (user) => {\n    try{\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\n        const docs = await getDocs(q);\n        if (docs.docs.length === 0) {\n            await addDoc(collection(db, \"users\"), {\n                uid: user.uid,\n                name: user.displayName,\n                authProvider: \"google\",\n                email: user.email\n            });\n        }\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\n\nconst googleProvider = new GoogleAuthProvider();\nconst signInWithGoogle = async () => {\n    try {\n        await signInWithRedirect(auth, googleProvider);\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\n\nconst logInWithEmailAndPassword = async (email, password) => {\n    try {\n        await signInWithEmailAndPassword(auth, email, password);\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\nconst registerWithEmailAndPassword = async (name, email, password) => {\n    try {\n        const res = await createUserWithEmailAndPassword(auth, email, password);\n        const user = res.user;\n        await addDoc(collection(db, \"users\"), {\n            uid: user.uid,\n            name,\n            authProvider: \"local\",\n            email\n        });\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\nconst sendPasswordReset = async (email) => {\n    try {\n        await sendPasswordResetEmail(auth, email);\n        alert(\"Password reset email sent\");\n\n    } catch (err) {\n        console.error(err);\n        alert(err.message);\n    }\n};\nconst logout = () => {\n    signOut(auth);\n};\nexport {\n    auth,\n    db,\n    signInWithGoogle,\n    logInWithEmailAndPassword,\n    registerWithEmailAndPassword,\n    sendPasswordReset,\n    logout,\n    fetchDataToDB\n};\n"],"sourceRoot":""}