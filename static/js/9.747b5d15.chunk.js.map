{"version":3,"sources":["firebase-config.js","Components/Database-Components/FetchUserData.js","Components/Database-Components/FetchBudgets.js","Components/Database-Components/CreateBudget.js","Components/AddBudgetForm.js","Components/Database-Components/DeleteBudget.js","Components/DeleteBudgetForm.js","Components/Database-Components/UpdateBudget.js","Components/EditBudgetForm.js","Components/Summary.js","Components/Dashboard.js"],"names":["auth","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","db","getFirestore","fetchDataToDB","user","q","query","collection","where","uid","getDocs","docs","length","addDoc","name","displayName","authProvider","email","console","error","alert","message","googleProvider","GoogleAuthProvider","signInWithGoogle","signInWithRedirect","logInWithEmailAndPassword","password","signInWithEmailAndPassword","registerWithEmailAndPassword","createUserWithEmailAndPassword","res","sendPasswordReset","sendPasswordResetEmail","logout","signOut","fetchUserName","setName","doc","data","log","fetchBudgets","setBudgets","id","querySnapshot","map","budget","amount","budgetId","category","totalBudget","createBudget","budgetName","budgetAmount","budgets","addBudget","setAddBudget","includes","uuid","AddBudgetForm","setBudgetName","setBudgetAmount","setTotalBudget","useState","validated","setValidated","selectedCategory","setSelectedCategory","className","Form","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","FloatingLabel","controlId","label","Control","type","placeholder","onChange","e","target","value","required","Feedback","Select","valueAsNumber","Button","variant","onClick","deleteBudget","setDeleteBudget","budgetDoc","find","deleteDoc","ref","DeleteBudgetForm","delBudget","setDelBudget","selectedBudget","setSelectedBudget","key","updateBudget","setEditBudget","updateDoc","EditBudgetForm","editBudget","useEffect","defaultValue","Summary","total","forEach","calculateTotalBudget","style","backgroundColor","href","Dashboard","isLoading","setIsLoading","useAuthState","loading","navigate","useNavigate","LoadingScreen","index"],"mappings":"mbAmCMA,GADMC,YAVW,CACnBC,OAAQ,0CACRC,WAAY,mCACZC,UAAW,mBACXC,cAAe,+BACfC,kBAAmB,eACnBC,MAAO,8CAKEC,eACPC,EAAKC,cAELC,EAAa,iDAAG,WAAOC,GAAI,iFAE6C,OAF7C,SAEnBC,EAAIC,YAAMC,YAAWN,EAAI,SAAUO,YAAM,MAAO,KAAMJ,EAAKK,MAAM,EAAD,OACnDC,YAAQL,GAAG,KAAD,EAAnB,GACe,IADf,OACDM,KAAKC,OAAY,gCAChBC,YAAON,YAAWN,EAAI,SAAU,CAClCQ,IAAKL,EAAKK,IACVK,KAAMV,EAAKW,YACXC,aAAc,SACdC,MAAOb,EAAKa,QACb,KAAD,oDAGNC,QAAQC,MAAM,EAAD,IACbC,MAAM,KAAIC,SAAS,0DAE1B,gBAhBkB,sCAkBbC,EAAiB,IAAIC,IACrBC,EAAgB,iDAAG,iHAEXC,YAAmBjC,EAAM8B,GAAgB,KAAD,iDAE9CJ,QAAQC,MAAM,EAAD,IACbC,MAAM,KAAIC,SAAS,wDAE1B,kBAPqB,mCAShBK,EAAyB,iDAAG,WAAOT,EAAOU,GAAQ,oGAE1CC,YAA2BpC,EAAMyB,EAAOU,GAAU,KAAD,iDAEvDT,QAAQC,MAAM,EAAD,IACbC,MAAM,KAAIC,SAAS,wDAE1B,gBAP8B,wCAQzBQ,EAA4B,iDAAG,WAAOf,EAAMG,EAAOU,GAAQ,4GAEvCG,YAA+BtC,EAAMyB,EAAOU,GAAU,KAAD,EAClD,OADfI,EAAG,OACH3B,EAAO2B,EAAI3B,KAAK,EAAD,OACfS,YAAON,YAAWN,EAAI,SAAU,CAClCQ,IAAKL,EAAKK,IACVK,OACAE,aAAc,QACdC,UACD,KAAD,kDAEFC,QAAQC,MAAM,EAAD,IACbC,MAAM,KAAIC,SAAS,yDAE1B,gBAdiC,0CAe5BW,EAAiB,iDAAG,WAAOf,GAAK,oGAExBgB,YAAuBzC,EAAMyB,GAAO,KAAD,EACzCG,MAAM,6BAA6B,gDAGnCF,QAAQC,MAAM,EAAD,IACbC,MAAM,KAAIC,SAAS,yDAE1B,gBATsB,sCAUjBa,EAAS,WACXC,YAAQ3C,EACZ,C,wGClGa4C,EAAa,iDAAG,WAAOhC,EAAMiC,GAAO,qFAE8B,OAF9B,SAEnChC,EAAIC,YAAMC,YAAWN,IAAI,SAAUO,YAAM,MAAO,KAAU,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMK,MAAM,EAAD,OACrDC,YAAQL,GAAG,KAAD,EAAtBiC,EAAG,OACHC,EAAOD,EAAI3B,KAAK,GAAG4B,OACzBF,EAAQE,EAAKzB,MAAM,gDAEnBuB,EAAQjC,EAAKW,aACbG,QAAQC,MAAM,EAAD,IACbD,QAAQsB,IAAI,4BAA4B,yDAE/C,gBAXyB,wCCAbC,EAAY,iDAAG,WAAOrC,EAAMsC,GAAU,uFAE4B,OAF5B,SAErCrC,EAAIC,YAAMC,YAAWN,IAAI,SAAUO,YAAM,MAAO,KAAU,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMK,MAAM,EAAD,OACrDC,YAAQL,GAAG,KAAD,EAAnB,OAAHiC,EAAG,gBACmB5B,YAAQH,YAAWN,IAAI,QAASqC,EAAI3B,KAAK,GAAGgC,GAAI,YAAY,KAAD,EAAjFC,EAAa,OACbL,EAAOK,EAAcjC,KAAKkC,KAAI,SAAAP,GAAG,OAAIA,EAAIC,MAAM,IACrDG,EAAWH,EAAKM,KAAI,SAAAC,GAAM,MAAK,CAAChC,KAAMgC,EAAOhC,KAAMiC,OAAQD,EAAOC,OAAQC,SAAUF,EAAOE,SAAUC,SAAUH,EAAOG,SAAUC,YAAaJ,EAAOI,YAAY,KAAI,kDAEpKhC,QAAQC,MAAM,EAAD,IACbD,QAAQsB,IAAI,0BAA0B,0DAE7C,gBAXwB,wC,+CCCZW,EAAY,iDAAG,WAAO/C,EAAMgD,EAAYV,EAAYW,EAAcC,EAASC,EAAWC,EAAcP,EAAUC,GAAW,uFAGvD,OAHuD,SAE9HM,GAAa,GACPnD,EAAIC,YAAMC,YAAWN,IAAI,SAAUO,YAAM,MAAO,KAAU,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMK,MAAM,EAAD,OACrDC,YAAQL,GAAG,KAAD,EAAnB,OAAHiC,EAAG,gBACmB5B,YAAQH,YAAWN,IAAI,QAASqC,EAAI3B,KAAK,GAAGgC,GAAI,YAAY,KAAD,EAEnC,GAF9CC,EAAa,OACbL,EAAOK,EAAcjC,KAAKkC,KAAI,SAAAP,GAAG,OAAIA,EAAIC,MAAM,IACjCA,EAAKM,KAAI,SAAAC,GAAM,OAAIA,EAAOhC,IAAI,IACjC2C,SAASL,GAAY,CAAD,iCAC3BvC,YAAON,YAAWN,IAAI,QAASqC,EAAI3B,KAAK,GAAGgC,GAAI,WAAY,CAC7DlC,IAAKL,EAAKK,IACVuC,SAAUU,iBACV5C,KAAMsC,EACNH,SAAUA,EACVF,OAAQM,EACRH,YAAaA,IACd,KAAD,GACFR,EAAW,GAAD,mBAAKY,GAAO,CAAE,CAACxC,KAAMsC,EAAYL,OAAQM,EAAcJ,SAAUA,EAAUC,YAAaA,MAAe,wBAEjH9B,MAAM,8BAA8B,0DAGxCF,QAAQC,MAAM,EAAD,IACbD,QAAQsB,IAAI,yBAAyB,0DAE5C,gBAzBwB,sD,OC4FVmB,MA3Ff,SAAuB,GAYtB,IAX0BvD,EAAI,EAAJA,KACAmD,EAAS,EAATA,UACAC,EAAY,EAAZA,aACAF,EAAO,EAAPA,QACAZ,EAAU,EAAVA,WACAkB,EAAa,EAAbA,cACAC,EAAe,EAAfA,gBACAT,EAAU,EAAVA,WACAC,EAAY,EAAZA,aACAH,EAAW,EAAXA,YACAY,EAAc,EAAdA,eAEvB,EAAkCC,oBAAS,GAAM,mBAA1CC,EAAS,KAAEC,EAAY,KAE9B,EAAgDF,mBAAS,SAAQ,mBAA1DG,EAAgB,KAAEC,EAAmB,KAc5C,OACI,qBAAKC,UAAW,2BAA2B,SACvC,cAAC,IAAO,UACJ,eAACC,EAAA,EAAI,CAACC,YAAU,EAACN,UAAWA,EAAWO,SAf9B,SAACC,IAEW,IADhBA,EAAMC,cACVC,iBACLF,EAAMG,iBACNH,EAAMI,mBAENzB,EAAa/C,EAAMgD,EAAYV,EAAYW,EAAcC,EAASC,EAAWC,EAAcU,EAAkBhB,GAGjHe,GAAa,EACjB,EAK2EG,UAAW,mBAAmB,UACzF,mBAAGA,UAAW,YAAY,+BAC1B,eAACS,EAAA,EAAa,CACVC,UAAU,iBACVC,MAAM,cAAa,UAEnB,cAACV,EAAA,EAAKW,QAAO,CAACC,KAAK,OAAOC,YAAY,SACxBC,SAAU,SAACC,GAAC,OAAKxB,EAAcwB,EAAEC,OAAOC,MAAM,EAAEC,UAAQ,IACtE,cAAClB,EAAA,EAAKW,QAAQQ,SAAQ,0BAGtB,cAACnB,EAAA,EAAKW,QAAQQ,SAAQ,CAACP,KAAK,UAAS,uDAIzC,mBAAGb,UAAW,YAAY,oCAC1B,eAACC,EAAA,EAAKoB,OAAM,CAAC,aAAW,yBACXN,SAAU,SAACC,GAAC,OAAKjB,EAAoBiB,EAAEC,OAAOC,MAAM,EAAC,UAC9D,qDACA,wBAAQA,MAAO,UAAU,qBACzB,wBAAQA,MAAO,iBAAiB,4BAChC,wBAAQA,MAAO,OAAO,kBACtB,wBAAQA,MAAO,YAAY,uBAC3B,wBAAQA,MAAO,YAAY,uBAC3B,wBAAQA,MAAO,iBAAiB,4BAChC,wBAAQA,MAAO,UAAU,qBACzB,wBAAQA,MAAO,QAAQ,sBAE3B,mBAAGlB,UAAW,YAAY,yCAC1B,eAACS,EAAA,EAAa,CAACC,UAAU,iBAAiBC,MAAM,iBAAgB,UAC5D,cAACV,EAAA,EAAKW,QAAO,CAACC,KAAK,SAASC,YAAY,SAC1BC,SAAU,SAACC,GAAC,OAAKvB,EAAgBuB,EAAEC,OAAOK,cAAc,EAAEH,UAAQ,IAChF,cAAClB,EAAA,EAAKW,QAAQQ,SAAQ,0BAGtB,cAACnB,EAAA,EAAKW,QAAQQ,SAAQ,CAACP,KAAK,UAAS,+CAIzC,mBAAGb,UAAW,YAAY,yCAC1B,eAACS,EAAA,EAAa,CAACC,UAAU,iBAAiBC,MAAM,iBAAgB,UAC5D,cAACV,EAAA,EAAKW,QAAO,CAACC,KAAK,SAASC,YAAY,SAC1BC,SAAU,SAACC,GAAC,OAAKtB,EAAesB,EAAEC,OAAOK,cAAc,EAAEH,UAAQ,IAC/E,cAAClB,EAAA,EAAKW,QAAQQ,SAAQ,0BAGtB,cAACnB,EAAA,EAAKW,QAAQQ,SAAQ,CAACP,KAAK,UAAS,qDAIzC,cAACU,EAAA,EAAM,CAACC,QAAS,UAAWX,KAAM,SAAUb,UAAW,aAAa,wBACpE,cAACuB,EAAA,EAAM,CAACC,QAAS,SAAUC,QAAS,kBAAMrC,GAAcD,EAAU,EAC1Da,UAAW,aAAa,0BAKpD,EC1Fa0B,EAAY,iDAAG,WAAO1F,EAAMgD,EAAYE,EAASZ,EAAYoD,EAAcC,GAAe,uFAGxB,OAHwB,SAE/FA,GAAgB,GACV1F,EAAIC,YAAMC,YAAWN,IAAI,SAAUO,YAAM,MAAO,KAAU,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMK,MAAM,EAAD,OACrDC,YAAQL,GAAG,KAAD,EAAnB,OAAHiC,EAAG,gBACmB5B,YAAQH,YAAWN,IAAI,QAASqC,EAAI3B,KAAK,GAAGgC,GAAI,YAAY,KAAD,EACP,OAD1EC,EAAa,OACboD,EAAYpD,EAAcjC,KAAKsF,MAAK,SAAA3D,GAAG,OAAIA,EAAIC,OAAOzB,OAASsC,CAAU,IAAE,EAAD,QAC1E8C,YAAUF,EAAUG,KAAK,KAAD,oBACxB1D,EAAarC,EAAMsC,GAAY,KAAD,qDAEpCxB,QAAQC,MAAM,EAAD,IACbD,QAAQsB,IAAI,yBAAyB,0DAE5C,6DAbwB,GC4BV4D,MA3Bf,SAA0B,GAAuD,IAAtDhG,EAAI,EAAJA,KAAMiG,EAAS,EAATA,UAAWC,EAAY,EAAZA,aAAchD,EAAO,EAAPA,QAASZ,EAAU,EAAVA,WAE/D,EAA4CqB,mBAAST,EAAQ,GAAGxC,MAAK,mBAA9DyF,EAAc,KAAEC,EAAiB,KAMxC,OACI,qBAAKpC,UAAW,8BAA8B,SAC1C,cAAC,IAAO,UACJ,eAACC,EAAA,EAAI,CAACE,SAPG,WACbuB,EAAa1F,EAAMmG,EAAgBjD,EAASZ,EAAY2D,EAAWC,EAC3E,EAK0ClC,UAAW,mBAAmB,UACxD,mBAAGA,UAAW,cAAc,2BAC5B,cAACC,EAAA,EAAKoB,OAAM,CAAC,aAAW,yBAAyBH,MAAOiB,EAAgBpB,SAAU,SAACC,GAAC,OAAKoB,EAAkBpB,EAAEC,OAAOC,MAAM,EAAC,SACtHhC,EAAQT,KAAI,SAACC,EAAQ2D,GAAG,OACrB,wBAAkB9D,GAAIG,EAAOE,SAAUsC,MAAOxC,EAAOhC,KAAK,SAAEgC,EAAOhC,MAAtD2F,EAAoE,MAGzF,cAACd,EAAA,EAAM,CAACC,QAAS,UAAWX,KAAM,SAAUb,UAAW,aAAa,2BACpE,cAACuB,EAAA,EAAM,CAACC,QAAS,SAAUC,QAAS,kBAAMS,GAAcD,EAAU,EAC1DjC,UAAW,aAAa,0BAKpD,EC1BasC,EAAY,iDAAG,WAAOtG,EAAMgD,EAAYV,EAAYO,EAAUI,EAAckD,EAAgBI,EAAezD,GAAW,uFAGpD,OAHoD,SAE3HyD,GAAc,GACRtG,EAAIC,YAAMC,YAAWN,IAAI,SAAUO,YAAM,MAAO,KAAU,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMK,MAAM,EAAD,OACrDC,YAAQL,GAAG,KAAD,EAAnB,OAAHiC,EAAG,gBACmB5B,YAAQH,YAAWN,IAAI,QAASqC,EAAI3B,KAAK,GAAGgC,GAAI,YAAY,KAAD,EACH,OAD9EC,EAAa,OACboD,EAAYpD,EAAcjC,KAAKsF,MAAK,SAAA3D,GAAG,OAAIA,EAAIC,OAAOzB,OAASyF,CAAc,IAAE,EAAD,QAC9EK,YAAUZ,EAAUG,IAAK,CAC3BrF,KAAMsC,EACNL,OAAQM,EACRJ,SAAUA,EACVC,YAAaA,IACd,KAAD,oBACIT,EAAarC,EAAMsC,GAAY,KAAD,qDAEpCxB,QAAQC,MAAM,EAAD,IACbD,QAAQsB,IAAI,yBAAyB,0DAE5C,gBAlBwB,oDCuIVqE,MArIf,SAAwB,GAYI,IAXAzG,EAAI,EAAJA,KACAkD,EAAO,EAAPA,QACAZ,EAAU,EAAVA,WACAU,EAAU,EAAVA,WACAQ,EAAa,EAAbA,cACAkD,EAAU,EAAVA,WACAH,EAAa,EAAbA,cACAtD,EAAY,EAAZA,aACAQ,EAAe,EAAfA,gBACAX,EAAW,EAAXA,YACAY,EAAc,EAAdA,eAGxB,EAAkCC,oBAAS,GAAM,mBAA1CC,EAAS,KAAEC,EAAY,KAE9B,EAA4CF,mBAAST,EAAQ,GAAGxC,MAAK,mBAA9DyF,EAAc,KAAEC,EAAiB,KAExC,EAAgDzC,mBAAST,EAAQ,GAAGL,UAAS,mBAAtEiB,EAAgB,KAAEC,EAAmB,KAgC5C,OALA4C,qBAAU,WAxBNzD,EAAQT,KAAI,SAACC,GAOT,OANIA,EAAOhC,OAASyF,IAChB3C,EAAcd,EAAOhC,MACrB+C,EAAgBf,EAAOC,QACvBoB,EAAoBrB,EAAOG,UAC3Ba,EAAehB,EAAOI,cAEnB,IACX,GAkBJ,GAAG,CAACqD,IAGI,qBAAKnC,UAAW,4BAA4B,SAChD,cAAC,IAAO,UACJ,eAACC,EAAA,EAAI,CAACC,YAAU,EAACN,UAAWA,EAAWO,SAnB1B,SAACC,IAEW,IADhBA,EAAMC,cACVC,iBACLF,EAAMG,iBACNH,EAAMI,oBAENJ,EAAMG,iBACN+B,EAAatG,EAAMgD,EAAYV,EAAYwB,EAAkBb,EAAckD,EAAgBI,EAAezD,IAE9Ge,GAAa,EACjB,EASuEG,UAAW,iBAAiB,UACvF,mBAAGA,UAAW,YAAY,2BAC1B,cAACC,EAAA,EAAKoB,OAAM,CAAC,aAAW,yBAAyBH,MAAOiB,EAC3CpB,SAAU,SAACC,GAAC,OAAKoB,EAAkBpB,EAAEC,OAAOC,MAAM,EAAC,SAC3DhC,EAAQT,KAAI,SAACC,EAAQ2D,GAAG,OACrB,wBAAkB9D,GAAIG,EAAOE,SAAUsC,MAAOxC,EAAOhC,KAAK,SAAEgC,EAAOhC,MAAtD2F,EAAoE,MAExFnD,EAAQT,KAAI,SAACC,GAAM,MAAK,CACrBA,EAAOhC,OAASyF,GACZ,qCACI,mBAAGnC,UAAW,YAAY,8BAC1B,eAACS,EAAA,EAAa,CACVC,UAAU,iBACVC,MAAOwB,EAAe,UAEtB,cAAClC,EAAA,EAAKW,QAAO,CAACC,KAAK,OAAOC,YAAY,SACxB8B,aAAclE,EAAOhC,KACrBqE,SAAU,SAACC,GAAC,OAAKxB,EAAcwB,EAAEC,OAAOC,MAAM,IAC5D,cAACjB,EAAA,EAAKW,QAAQQ,SAAQ,0BAGtB,cAACnB,EAAA,EAAKW,QAAQQ,SAAQ,CAACP,KAAK,UAAS,2CAIzC,mBAAGb,UAAW,YAAY,oCAC1B,eAACC,EAAA,EAAKoB,OAAM,CAAC,aAAW,yBACXN,SAAU,SAACC,GAAC,OAAKjB,EAAoBiB,EAAEC,OAAOC,MAAM,EAAC,UAC9D,iCACKhC,EAAQT,KAAI,SAACC,GAAM,MAAM,CAACA,EAAOhC,OAASyF,GAAkBzD,EAAOG,SAAS,MAEjF,wBAAQqC,MAAO,UAAU,qBACzB,wBAAQA,MAAO,iBAAiB,4BAChC,wBAAQA,MAAO,OAAO,kBACtB,wBAAQA,MAAO,YAAY,uBAC3B,wBAAQA,MAAO,YAAY,uBAC3B,wBAAQA,MAAO,iBAAiB,4BAChC,wBAAQA,MAAO,UAAU,qBACzB,wBAAQA,MAAO,QAAQ,sBAE3B,mBAAGlB,UAAW,YAAY,wCAC1B,eAACS,EAAA,EAAa,CAACC,UAAU,iBACVC,MAAOzB,EAAQT,KAAI,SAACC,GAAM,MAAM,CAACA,EAAOhC,OAASyF,GAAkBzD,EAAOC,OAAO,IAAG,UAE/F,cAACsB,EAAA,EAAKW,QAAO,CAACC,KAAK,SAASC,YAAY,SAC1B8B,aAAclE,EAAOC,OACrBoC,SAAU,SAACC,GAAC,OAAKvB,EAAgBuB,EAAEC,OAAOK,cAAc,IACtE,cAACrB,EAAA,EAAKW,QAAQQ,SAAQ,0BAGtB,cAACnB,EAAA,EAAKW,QAAQQ,SAAQ,CAACP,KAAK,UAAS,6CAIzC,mBAAGb,UAAW,YAAY,wCAC1B,eAACS,EAAA,EAAa,CAACC,UAAU,iBACVC,MAAOzB,EAAQT,KAAI,SAACC,GAAM,MAAM,CAACA,EAAOhC,OAASyF,GAAkBzD,EAAOI,YAAY,IAAG,UAEpG,cAACmB,EAAA,EAAKW,QAAO,CAACC,KAAK,SAASC,YAAY,SAC1B8B,aAAclE,EAAOI,YACrBiC,SAAU,SAACC,GAAC,OAAKtB,EAAesB,EAAEC,OAAOK,cAAc,IACrE,cAACrB,EAAA,EAAKW,QAAQQ,SAAQ,0BAGtB,cAACnB,EAAA,EAAKW,QAAQQ,SAAQ,CAACP,KAAK,UAAS,6CAIzC,cAACU,EAAA,EAAM,CAACC,QAAS,UAAWX,KAAM,SAAUb,UAAW,WAAW,yBAClE,cAACuB,EAAA,EAAM,CAACC,QAAS,SAAUC,QAAS,kBAAMc,GAAeG,EAAW,EAC5D1C,UAAW,aAAa,uBAG3C,UAMjB,EClGe6C,MApCf,SAAiB,GAAY,IAAX3D,EAAO,EAAPA,QAEd,EAAsCS,mBAAS,GAAE,mBAA1Cb,EAAW,KAAEY,EAAc,KAclC,OAJAiD,qBAAU,YARmB,WACzB,IAAIG,EAAQ,EACZ5D,EAAQ6D,SAAQ,SAAArE,GACZoE,GAASpE,EAAOC,MACpB,IACAe,EAAeoD,EACnB,CAGIE,EACJ,GAAG,CAAC9D,IAGA,qBAAKc,UAAW,UAAU,SACtB,eAAC,IAAS,CAACA,UAAU,yBAAyBiD,MAAO,CAAEC,gBAAiB,WAAY,UAChF,cAAC,IAAY,CAAClD,UAAU,WAAU,SAC9B,yBAASA,UAAU,GAAE,SACjB,oBAAGA,UAAU,mDAAkD,2BAAgBlB,SAIvF,sBAAKkB,UAAU,kBAAkBiD,MAAO,CAAEC,gBAAiB,sBAAuB,iCAE9E,mBAAGlD,UAAU,aAAamD,KAAK,6BAA4B,mCAO/E,E,QC+DeC,UArFf,SAAmB,GAA4B,IAA3BC,EAAS,EAATA,UAAWC,EAAY,EAAZA,aAE3B,EAAwBC,YAAanI,KAAK,mBAAnCY,EAAI,KAAEwH,EAAO,KACpB,EAAwB7D,mBAAS,IAAG,mBAA7BjD,EAAI,KAAEuB,EAAO,KACdwF,EAAWC,cACjB,EAAoC/D,mBAAS,IAAG,mBAAzCX,EAAU,KAAEQ,EAAa,KAChC,EAAwCG,mBAAS,GAAE,mBAA5CV,EAAY,KAAEQ,EAAe,KACpC,EAAsCE,mBAAS,GAAE,mBAA1Cb,EAAW,KAAEY,EAAc,KAClC,EAAkCC,oBAAS,GAAM,mBAA1CR,EAAS,KAAEC,EAAY,KAC9B,EAAkCO,oBAAS,GAAM,mBAA1CsC,EAAS,KAAEC,EAAY,KAC9B,EAAoCvC,oBAAS,GAAM,mBAA5C+C,EAAU,KAAEH,EAAa,KAEhC,EAA8B5C,mBAAS,IAAG,mBAAnCT,EAAO,KAAEZ,GAAU,KAkB1B,OAhBAqE,qBAAU,WACN,GAAIa,EACAF,GAAa,OADjB,CAOA,IAHgB,IAAZE,GACAF,GAAa,IAEZtH,EAAM,OAAOyH,EAAS,KAC3B1H,YAAcC,GACdgC,EAAchC,EAAMiC,GACpBI,EAAarC,EAAMsC,GAPnB,CASJ,GAAG,CAACtC,EAAMwH,EAASC,IAIf,mCACKJ,EAAY,cAACM,EAAA,EAAa,IACvB,sBAAK3D,UAAW,YAAY,UACxB,sBAAKA,UAAW,mBAAmB,UAC9BtD,EAAI,IAAE,cAAC6E,EAAA,EAAM,CAACC,QAAS,YAAaC,QAAS,kBAAM3D,aAAQ,EAAC,uBAEjE,sBAAKkC,UAAW,iBAAiB,UAC5Bb,EACG,cAAC,EAAa,CAACA,UAAWA,EAAWC,aAAcA,EAAcpD,KAAMA,EACxDgD,WAAYA,EACZQ,cAAeA,EAAeP,aAAcA,EAC5CQ,gBAAiBA,EACjBnB,WAAYA,GACZY,QAASA,EAASJ,YAAaA,EAAaY,eAAgBA,IACzE,sBAAKM,UAAW,sBAAsB,UACpC,cAACuB,EAAA,EAAM,CAACC,QAAS,UAAWC,QAAS,kBAAMrC,GAAcD,EAAU,EAAC,eAAW,IAAC,qDAEpE,IAAnBD,EAAQ1C,QAAgB,CAACyF,EACtB,cAAC,EAAgB,CAACA,UAAWA,EAAWC,aAAcA,EAAclG,KAAMA,EACxDkD,QAASA,EACTZ,WAAYA,KAC5B,sBAAK0B,UAAW,yBAAyB,UACvC,cAACuB,EAAA,EAAM,CAACC,QAAS,SAAUC,QAAS,kBAAMS,GAAcD,EAAU,EAAC,eAAW,IAAC,8DAEnE,IAAnB/C,EAAQ1C,QAAgB,CAACkG,EACtB,cAAC,EAAc,CAAC1G,KAAMA,EAAMkD,QAASA,EAASZ,WAAYA,GAC1CU,WAAYA,EACZQ,cAAeA,EAAekD,WAAYA,EAC1CH,cAAeA,EACftD,aAAcA,EAAcQ,gBAAiBA,EAC7CX,YAAaA,EACbY,eAAgBA,IAC9B,sBAAKM,UAAW,uBAAuB,UACrC,cAACuB,EAAA,EAAM,CAACC,QAAS,UAAWC,QAAS,kBAAMc,GAAeG,EAAW,EAAC,oBAAW,IAAC,+DAG1E,IAAnBxD,EAAQ1C,QACL,CAAC0C,EAAQT,KAAI,SAACC,EAAQkF,GAClB,OAAO,qBAAK5D,UAAW,mBAAmB,SACtC,eAAC,IAAO,WACJ,mBAAGA,UAAW,cAAc,SAAEtB,EAAOhC,OACrC,mBAAGsD,UAAW,kBAAkB,SAAEtB,EAAOG,WACzC,oBAAGmB,UAAW,gBAAgB,UAAEtB,EAAOC,OAAM,IAAGD,EAAOI,mBAJf8E,EAOpD,KAEJ,cAAC,EAAO,CAAC1E,QAASA,QAKtC,C","file":"static/js/9.747b5d15.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport {initializeApp} from \"firebase/app\";\r\nimport {\r\n    GoogleAuthProvider,\r\n    getAuth,\r\n    signInWithRedirect,\r\n    signInWithEmailAndPassword,\r\n    createUserWithEmailAndPassword,\r\n    sendPasswordResetEmail,\r\n    signOut\r\n} from \"firebase/auth\";\r\nimport {\r\n    getFirestore,\r\n    query,\r\n    getDocs,\r\n    collection,\r\n    where,\r\n    addDoc\r\n} from \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC3DMSjnUoA9dF9GM17-cXY2vGrD01UOsg\",\r\n    authDomain: \"budget-app-fba0d.firebaseapp.com\",\r\n    projectId: \"budget-app-fba0d\",\r\n    storageBucket: \"budget-app-fba0d.appspot.com\",\r\n    messagingSenderId: \"304622335247\",\r\n    appId: \"1:304622335247:web:fed99b704be7ad5cdafa7a\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth();\r\nconst db = getFirestore();\r\n\r\nconst fetchDataToDB = async (user) => {\r\n    try{\r\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\r\n        const docs = await getDocs(q);\r\n        if (docs.docs.length === 0) {\r\n            await addDoc(collection(db, \"users\"), {\r\n                uid: user.uid,\r\n                name: user.displayName,\r\n                authProvider: \"google\",\r\n                email: user.email\r\n            });\r\n        }\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\nconst googleProvider = new GoogleAuthProvider();\r\nconst signInWithGoogle = async () => {\r\n    try {\r\n        await signInWithRedirect(auth, googleProvider);\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\nconst logInWithEmailAndPassword = async (email, password) => {\r\n    try {\r\n        await signInWithEmailAndPassword(auth, email, password);\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\nconst registerWithEmailAndPassword = async (name, email, password) => {\r\n    try {\r\n        const res = await createUserWithEmailAndPassword(auth, email, password);\r\n        const user = res.user;\r\n        await addDoc(collection(db, \"users\"), {\r\n            uid: user.uid,\r\n            name,\r\n            authProvider: \"local\",\r\n            email\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\nconst sendPasswordReset = async (email) => {\r\n    try {\r\n        await sendPasswordResetEmail(auth, email);\r\n        alert(\"Password reset email sent\");\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\nconst logout = () => {\r\n    signOut(auth);\r\n};\r\nexport {\r\n    auth,\r\n    db,\r\n    signInWithGoogle,\r\n    logInWithEmailAndPassword,\r\n    registerWithEmailAndPassword,\r\n    sendPasswordReset,\r\n    logout,\r\n    fetchDataToDB\r\n};\r\n","import {collection, getDocs, query, where} from \"firebase/firestore\";\r\nimport {db} from \"../../firebase-config\";\r\n\r\nexport const fetchUserName = async (user, setName) => {\r\n    try {\r\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\r\n        const doc = await getDocs(q);\r\n        const data = doc.docs[0].data();\r\n        setName(data.name);\r\n    } catch (err) {\r\n        setName(user.displayName);\r\n        console.error(err);\r\n        console.log(\"Error fetching user name\");\r\n    }\r\n};\r\n","import {collection, getDocs, query, where} from \"firebase/firestore\";\r\nimport {db} from \"../../firebase-config\";\r\n\r\nexport const fetchBudgets = async (user, setBudgets) => {\r\n    try {\r\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\r\n        const doc = await getDocs(q);\r\n        const querySnapshot = await getDocs(collection(db, \"users\", doc.docs[0].id, \"budgets\"));\r\n        const data = querySnapshot.docs.map(doc => doc.data());\r\n        setBudgets(data.map(budget => ({name: budget.name, amount: budget.amount, budgetId: budget.budgetId, category: budget.category, totalBudget: budget.totalBudget})));\r\n    } catch (err) {\r\n        console.error(err);\r\n        console.log(\"Error fetching budgets\");\r\n    }\r\n}\r\n","import {addDoc, collection, getDocs, query, where} from \"firebase/firestore\";\r\nimport {db} from \"../../firebase-config\";\r\nimport {uuid} from \"uuidv4\";\r\n\r\nexport const createBudget = async (user, budgetName, setBudgets, budgetAmount, budgets, addBudget, setAddBudget, category, totalBudget) => {\r\n    try {\r\n        setAddBudget(false);\r\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\r\n        const doc = await getDocs(q);\r\n        const querySnapshot = await getDocs(collection(db, \"users\", doc.docs[0].id, \"budgets\"));\r\n        const data = querySnapshot.docs.map(doc => doc.data());\r\n        const budgetNames = data.map(budget => budget.name);\r\n        if (!budgetNames.includes(budgetName)) {\r\n            await addDoc(collection(db, \"users\", doc.docs[0].id, \"budgets\"), {\r\n                uid: user.uid,\r\n                budgetId: uuid(),\r\n                name: budgetName,\r\n                category: category,\r\n                amount: budgetAmount,\r\n                totalBudget: totalBudget\r\n            });\r\n            setBudgets([...budgets, {name: budgetName, amount: budgetAmount, category: category, totalBudget: totalBudget}]);\r\n        } else {\r\n            alert(\"Budget name already exists\");\r\n        }\r\n    } catch (err) {\r\n        console.error(err);\r\n        console.log(\"Error creating budget\");\r\n    }\r\n};\r\n","import React, {useState} from 'react';\r\nimport {MDBCard} from \"mdb-react-ui-kit\";\r\nimport {Button, FloatingLabel, Form} from \"react-bootstrap\";\r\nimport {createBudget} from \"./Database-Components/CreateBudget\";\r\n\r\nfunction AddBudgetForm({\r\n                           user,\r\n                           addBudget,\r\n                           setAddBudget,\r\n                           budgets,\r\n                           setBudgets,\r\n                           setBudgetName,\r\n                           setBudgetAmount,\r\n                           budgetName,\r\n                           budgetAmount,\r\n                           totalBudget,\r\n                           setTotalBudget})\r\n{\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const [selectedCategory, setSelectedCategory] = useState(\"Other\");\r\n\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        } else {\r\n            createBudget(user, budgetName, setBudgets, budgetAmount, budgets, addBudget, setAddBudget, selectedCategory, totalBudget);\r\n        }\r\n\r\n        setValidated(true);\r\n    };\r\n\r\n    return (\r\n        <div className={\"Dashboard-AddBudget-Form\"}>\r\n            <MDBCard>\r\n                <Form noValidate validated={validated} onSubmit={handleSubmit} className={\"createBudgetForm\"}>\r\n                    <p className={'edit-info'}>Enter budget name</p>\r\n                    <FloatingLabel\r\n                        controlId=\"floatingBudget\"\r\n                        label=\"Budget Name\"\r\n                    >\r\n                        <Form.Control type=\"text\" placeholder=\"Budget\"\r\n                                      onChange={(e) => setBudgetName(e.target.value)} required/>\r\n                        <Form.Control.Feedback>\r\n                            Looks good!\r\n                        </Form.Control.Feedback>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a name for your budget.\r\n                        </Form.Control.Feedback>\r\n                    </FloatingLabel>\r\n                    <p className={'edit-info'}>Select budget category</p>\r\n                    <Form.Select aria-label=\"Default select example\"\r\n                                 onChange={(e) => setSelectedCategory(e.target.value)}>\r\n                        <option>Select category</option>\r\n                        <option value={\"Housing\"}>Housing</option>\r\n                        <option value={\"Transportation\"}>Transportation</option>\r\n                        <option value={\"Food\"}>Food</option>\r\n                        <option value={\"Utilities\"}>Utilities</option>\r\n                        <option value={\"Insurance\"}>Insurance</option>\r\n                        <option value={\"Medical/Dental\"}>Medical/Dental</option>\r\n                        <option value={\"Savings\"}>Savings</option>\r\n                        <option value={\"Other\"}>Other</option>\r\n                    </Form.Select>\r\n                    <p className={'edit-info'}>Enter current budget amount</p>\r\n                    <FloatingLabel controlId=\"floatingAmount\" label=\"Current Amount\">\r\n                        <Form.Control type=\"number\" placeholder=\"Amount\"\r\n                                      onChange={(e) => setBudgetAmount(e.target.valueAsNumber)} required/>\r\n                        <Form.Control.Feedback>\r\n                            Looks good!\r\n                        </Form.Control.Feedback>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid amount.\r\n                        </Form.Control.Feedback>\r\n                    </FloatingLabel>\r\n                    <p className={'edit-info'}>Enter maximum budget amount</p>\r\n                    <FloatingLabel controlId=\"floatingAmount\" label=\"Maximum Amount\">\r\n                        <Form.Control type=\"number\" placeholder=\"Amount\"\r\n                                      onChange={(e) => setTotalBudget(e.target.valueAsNumber)} required/>\r\n                        <Form.Control.Feedback>\r\n                            Looks good!\r\n                        </Form.Control.Feedback>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid total amount.\r\n                        </Form.Control.Feedback>\r\n                    </FloatingLabel>\r\n                    <Button variant={\"success\"} type={\"submit\"} className={'btn-submit'}>Add Budget</Button>\r\n                    <Button variant={\"danger\"} onClick={() => setAddBudget(!addBudget)}\r\n                            className={'btn-cancel'}>Cancel</Button>\r\n                </Form>\r\n            </MDBCard>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddBudgetForm;\r\n","import {collection, deleteDoc, getDocs, query, where} from \"firebase/firestore\";\r\nimport {db} from \"../../firebase-config\";\r\nimport {fetchBudgets} from \"./FetchBudgets\";\r\n\r\nexport const deleteBudget = async (user, budgetName, budgets, setBudgets, deleteBudget, setDeleteBudget) => {\r\n    try {\r\n        setDeleteBudget(false);\r\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\r\n        const doc = await getDocs(q);\r\n        const querySnapshot = await getDocs(collection(db, \"users\", doc.docs[0].id, \"budgets\"));\r\n        const budgetDoc = querySnapshot.docs.find(doc => doc.data().name === budgetName);\r\n        await deleteDoc(budgetDoc.ref);\r\n        await fetchBudgets(user, setBudgets);\r\n    } catch (err) {\r\n        console.error(err);\r\n        console.log(\"Error deleting budget\");\r\n    }\r\n}\r\n","import React, {useState} from 'react';\r\nimport {MDBCard} from \"mdb-react-ui-kit\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {deleteBudget} from \"./Database-Components/DeleteBudget\";\r\n\r\nfunction DeleteBudgetForm({user, delBudget, setDelBudget, budgets, setBudgets}) {\r\n\r\n    const [selectedBudget, setSelectedBudget] = useState(budgets[0].name);\r\n\r\n    const handleSubmit = () => {\r\n            deleteBudget(user, selectedBudget, budgets, setBudgets, delBudget, setDelBudget);\r\n    };\r\n\r\n    return (\r\n        <div className={\"Dashboard-DeleteBudget-Form\"}>\r\n            <MDBCard>\r\n                <Form onSubmit={handleSubmit} className={\"deleteBudgetForm\"}>\r\n                    <p className={'delete-info'}>Select budget</p>\r\n                    <Form.Select aria-label=\"Default select example\" value={selectedBudget} onChange={(e) => setSelectedBudget(e.target.value)}>\r\n                        {budgets.map((budget, key) => (\r\n                            <option key={key} id={budget.budgetId} value={budget.name}>{budget.name}</option>\r\n                        ))}\r\n                    </Form.Select>\r\n                    <Button variant={\"success\"} type={\"submit\"} className={'btn-delete'}>Delete Budget</Button>\r\n                    <Button variant={\"danger\"} onClick={() => setDelBudget(!delBudget)}\r\n                            className={'btn-cancel'}>Cancel</Button>\r\n                </Form>\r\n            </MDBCard>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeleteBudgetForm;\r\n","import {collection, getDocs, query, updateDoc, where} from \"firebase/firestore\";\r\nimport {db} from \"../../firebase-config\";\r\nimport {fetchBudgets} from \"./FetchBudgets\";\r\n\r\nexport const updateBudget = async (user, budgetName, setBudgets, category, budgetAmount, selectedBudget, setEditBudget, totalBudget) => {\r\n    try {\r\n        setEditBudget(false);\r\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\r\n        const doc = await getDocs(q);\r\n        const querySnapshot = await getDocs(collection(db, \"users\", doc.docs[0].id, \"budgets\"));\r\n        const budgetDoc = querySnapshot.docs.find(doc => doc.data().name === selectedBudget);\r\n        await updateDoc(budgetDoc.ref, {\r\n            name: budgetName,\r\n            amount: budgetAmount,\r\n            category: category,\r\n            totalBudget: totalBudget\r\n        });\r\n        await fetchBudgets(user, setBudgets);\r\n    } catch (err) {\r\n        console.error(err);\r\n        console.log(\"Error updating budget\");\r\n    }\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Button, FloatingLabel, Form} from \"react-bootstrap\";\r\nimport {updateBudget} from \"./Database-Components/UpdateBudget\";\r\nimport {MDBCard} from \"mdb-react-ui-kit\";\r\n\r\n\r\nfunction EditBudgetForm({\r\n                            user,\r\n                            budgets,\r\n                            setBudgets,\r\n                            budgetName,\r\n                            setBudgetName,\r\n                            editBudget,\r\n                            setEditBudget,\r\n                            budgetAmount,\r\n                            setBudgetAmount,\r\n                            totalBudget,\r\n                            setTotalBudget\r\n                        }) {\r\n\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const [selectedBudget, setSelectedBudget] = useState(budgets[0].name);\r\n\r\n    const [selectedCategory, setSelectedCategory] = useState(budgets[0].category);\r\n\r\n    const handleNoChange = () => {\r\n        budgets.map((budget) => {\r\n            if (budget.name === selectedBudget) {\r\n                setBudgetName(budget.name);\r\n                setBudgetAmount(budget.amount);\r\n                setSelectedCategory(budget.category);\r\n                setTotalBudget(budget.totalBudget);\r\n            }\r\n            return null;\r\n        })\r\n    }\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        } else {\r\n            event.preventDefault();\r\n            updateBudget(user, budgetName, setBudgets, selectedCategory, budgetAmount, selectedBudget, setEditBudget, totalBudget);\r\n        }\r\n        setValidated(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        handleNoChange();\r\n    }, [selectedBudget]);\r\n\r\n\r\n    return (<div className={'Dashboard-EditBudget-Form'}>\r\n        <MDBCard>\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit} className={\"editBudgetForm\"}>\r\n                <p className={'edit-info'}>Select budget</p>\r\n                <Form.Select aria-label=\"Default select example\" value={selectedBudget}\r\n                             onChange={(e) => setSelectedBudget(e.target.value)}>\r\n                    {budgets.map((budget, key) => (\r\n                        <option key={key} id={budget.budgetId} value={budget.name}>{budget.name}</option>))}\r\n                </Form.Select>\r\n                {budgets.map((budget) => [\r\n                    budget.name === selectedBudget && (\r\n                        <>\r\n                            <p className={'edit-info'}>Edit budget name</p>\r\n                            <FloatingLabel\r\n                                controlId=\"floatingBudget\"\r\n                                label={selectedBudget}\r\n                            >\r\n                                <Form.Control type=\"text\" placeholder=\"Budget\"\r\n                                              defaultValue={budget.name}\r\n                                              onChange={(e) => setBudgetName(e.target.value)}/>\r\n                                <Form.Control.Feedback>\r\n                                    Looks good!\r\n                                </Form.Control.Feedback>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Please provide a new name.\r\n                                </Form.Control.Feedback>\r\n                            </FloatingLabel>\r\n                            <p className={'edit-info'}>Select budget category</p>\r\n                            <Form.Select aria-label=\"Default select example\"\r\n                                         onChange={(e) => setSelectedCategory(e.target.value)}>\r\n                                <option>\r\n                                    {budgets.map((budget) => ([budget.name === selectedBudget && budget.category]))}\r\n                                </option>\r\n                                <option value={'Housing'}>Housing</option>\r\n                                <option value={'Transportation'}>Transportation</option>\r\n                                <option value={'Food'}>Food</option>\r\n                                <option value={'Utilities'}>Utilities</option>\r\n                                <option value={'Insurance'}>Insurance</option>\r\n                                <option value={'Medical/Dental'}>Medical/Dental</option>\r\n                                <option value={'Savings'}>Savings</option>\r\n                                <option value={'Other'}>Other</option>\r\n                            </Form.Select>\r\n                            <p className={'edit-info'}>Edit current budget amount</p>\r\n                            <FloatingLabel controlId=\"floatingAmount\"\r\n                                           label={budgets.map((budget) => ([budget.name === selectedBudget && budget.amount]))}\r\n                            >\r\n                                <Form.Control type=\"number\" placeholder=\"Amount\"\r\n                                              defaultValue={budget.amount}\r\n                                              onChange={(e) => setBudgetAmount(e.target.valueAsNumber)}/>\r\n                                <Form.Control.Feedback>\r\n                                    Looks good!\r\n                                </Form.Control.Feedback>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Please provide a new amount.\r\n                                </Form.Control.Feedback>\r\n                            </FloatingLabel>\r\n                            <p className={'edit-info'}>Edit maximum budget amount</p>\r\n                            <FloatingLabel controlId=\"floatingAmount\"\r\n                                           label={budgets.map((budget) => ([budget.name === selectedBudget && budget.totalBudget]))}\r\n                            >\r\n                                <Form.Control type=\"number\" placeholder=\"Amount\"\r\n                                              defaultValue={budget.totalBudget}\r\n                                              onChange={(e) => setTotalBudget(e.target.valueAsNumber)}/>\r\n                                <Form.Control.Feedback>\r\n                                    Looks good!\r\n                                </Form.Control.Feedback>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Please provide a new amount.\r\n                                </Form.Control.Feedback>\r\n                            </FloatingLabel>\r\n                            <Button variant={\"success\"} type={\"submit\"} className={'btn-edit'}>Edit Budget</Button>\r\n                            <Button variant={\"danger\"} onClick={() => setEditBudget(!editBudget)}\r\n                                    className={'btn-cancel'}>Cancel</Button>\r\n                        </>\r\n                    )\r\n                ])\r\n                }\r\n            </Form>\r\n        </MDBCard>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default EditBudgetForm;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {MDBContainer, MDBFooter} from \"mdb-react-ui-kit\";\r\n\r\nfunction Summary({budgets}) {\r\n\r\n    const [totalBudget, setTotalBudget] = useState(0);\r\n\r\n    const calculateTotalBudget = () => {\r\n        let total = 0;\r\n        budgets.forEach(budget => {\r\n            total += budget.amount;\r\n        });\r\n        setTotalBudget(total);\r\n    }\r\n\r\n    useEffect(() => {\r\n        calculateTotalBudget();\r\n    }, [budgets]);\r\n\r\n    return (\r\n        <div className={'Summary'}>\r\n            <MDBFooter className='text-center text-white' style={{ backgroundColor: '#1c1c1c' }}>\r\n                <MDBContainer className='p-4 pb-0'>\r\n                    <section className=''>\r\n                        <p className='d-flex justify-content-center align-items-center'>Total budget: {totalBudget}</p>\r\n                    </section>\r\n                </MDBContainer>\r\n\r\n                <div className='text-center p-3' style={{ backgroundColor: 'rgba(0, 0, 0, 0.2)' }}>\r\n                    © 2022 Copyright:\r\n                    <a className='text-white' href='https://github.com/Blizzeq'>\r\n                        Jakub Krasuski\r\n                    </a>\r\n                </div>\r\n            </MDBFooter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Summary;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {auth, fetchDataToDB, logout} from \"../firebase-config\";\r\nimport {fetchUserName} from \"./Database-Components/FetchUserData\";\r\nimport {fetchBudgets} from \"./Database-Components/FetchBudgets\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport AddBudgetForm from \"./AddBudgetForm\";\r\nimport DeleteBudgetForm from \"./DeleteBudgetForm\";\r\nimport EditBudgetForm from \"./EditBudgetForm\";\r\nimport {MDBCard} from \"mdb-react-ui-kit\";\r\nimport Summary from \"./Summary\";\r\nimport LoadingScreen from \"./LoadingScreen\";\r\n\r\n\r\nfunction Dashboard({isLoading, setIsLoading}) {\r\n\r\n    const [user, loading] = useAuthState(auth);\r\n    const [name, setName] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const [budgetName, setBudgetName] = useState(\"\");\r\n    const [budgetAmount, setBudgetAmount] = useState(0);\r\n    const [totalBudget, setTotalBudget] = useState(0);\r\n    const [addBudget, setAddBudget] = useState(false);\r\n    const [delBudget, setDelBudget] = useState(false);\r\n    const [editBudget, setEditBudget] = useState(false);\r\n\r\n    const [budgets, setBudgets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (loading) {\r\n            setIsLoading(true);\r\n            return\r\n        }\r\n        if (loading === false) {\r\n            setIsLoading(false);\r\n        }\r\n        if (!user) return navigate(\"/\");\r\n        fetchDataToDB(user);\r\n        fetchUserName(user, setName);\r\n        fetchBudgets(user, setBudgets);\r\n\r\n    }, [user, loading, navigate]);\r\n\r\n\r\n    return (\r\n        <>\r\n            {isLoading ? <LoadingScreen/> :\r\n                <div className={\"Dashboard\"}>\r\n                    <div className={\"Dashboard-Header\"}>\r\n                        {name} <Button variant={\"secondary\"} onClick={() => logout()}>Logout</Button>\r\n                    </div>\r\n                    <div className={\"Dashboard-Menu\"}>\r\n                        {addBudget ?\r\n                            <AddBudgetForm addBudget={addBudget} setAddBudget={setAddBudget} user={user}\r\n                                           budgetName={budgetName}\r\n                                           setBudgetName={setBudgetName} budgetAmount={budgetAmount}\r\n                                           setBudgetAmount={setBudgetAmount}\r\n                                           setBudgets={setBudgets}\r\n                                           budgets={budgets} totalBudget={totalBudget} setTotalBudget={setTotalBudget}/>\r\n                            : <div className={\"Dashboard-AddBudget\"}>\r\n                                <Button variant={\"success\"} onClick={() => setAddBudget(!addBudget)}>+</Button> <span>Add new Budget</span>\r\n                            </div>}\r\n                        {budgets.length !== 0 && [delBudget ?\r\n                            <DeleteBudgetForm delBudget={delBudget} setDelBudget={setDelBudget} user={user}\r\n                                              budgets={budgets}\r\n                                              setBudgets={setBudgets}/>\r\n                            : <div className={\"Dashboard-DeleteBudget\"}>\r\n                                <Button variant={\"danger\"} onClick={() => setDelBudget(!delBudget)}>-</Button> <span>Delete existing Budget</span>\r\n                            </div>]}\r\n                        {budgets.length !== 0 && [editBudget ?\r\n                            <EditBudgetForm user={user} budgets={budgets} setBudgets={setBudgets}\r\n                                            budgetName={budgetName}\r\n                                            setBudgetName={setBudgetName} editBudget={editBudget}\r\n                                            setEditBudget={setEditBudget}\r\n                                            budgetAmount={budgetAmount} setBudgetAmount={setBudgetAmount}\r\n                                            totalBudget={totalBudget}\r\n                                            setTotalBudget={setTotalBudget}/>\r\n                            : <div className={\"Dashboard-EditBudget\"}>\r\n                                <Button variant={\"warning\"} onClick={() => setEditBudget(!editBudget)}>✎</Button> <span>Edit existing Budget</span>\r\n                            </div>]}\r\n                    </div>\r\n                    {budgets.length !== 0 &&\r\n                        [budgets.map((budget, index) => {\r\n                            return <div className={\"Dashboard-Budget\"} key={index}>\r\n                                <MDBCard>\r\n                                    <p className={'Budget-Name'}>{budget.name}</p>\r\n                                    <p className={'Budget-Category'}>{budget.category}</p>\r\n                                    <p className={'Budget-Amount'}>{budget.amount}/{budget.totalBudget}</p>\r\n                                </MDBCard>\r\n                            </div>\r\n                        })]\r\n                    }\r\n                    <Summary budgets={budgets}/>\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}