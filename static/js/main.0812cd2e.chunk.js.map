{"version":3,"sources":["Components/LoadingScreen.js","App.js","index.js"],"names":["LoadingScreen","props","className","color","style","width","height","LazyHomePage","lazy","LazyLoginScreen","LazyRegisterScreen","LazyDashboard","LazyReset","App","useState","isLoading","setIsLoading","path","element","fallback","ReactDOM","createRoot","document","getElementById","render"],"mappings":"yHAAA,wBAaeA,IAVf,SAAuBC,GACnB,OACI,qBAAKC,UAAW,gBAAgB,SAC5B,cAAC,IAAU,CAACC,MAAO,YAAaD,UAAU,OAAOE,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAAS,SACtF,sBAAMJ,UAAU,kBAAiB,2BAIjD,C,0KCLMK,EAAeC,gBAAK,kBAAM,6BAA+B,IACzDC,EAAkBD,gBAAK,kBAAM,0DAAkC,IAC/DE,EAAqBF,gBAAK,kBAAM,0DAAqC,IACrEG,EAAgBH,gBAAK,kBAAM,2DAAgC,IAC3DI,EAAYJ,gBAAK,kBAAM,0DAA4B,IAoB1CK,MAjBf,WAEI,MAAkCC,oBAAS,GAAM,mBAA1CC,EAAS,KAAEC,EAAY,KAEhC,OACI,cAAC,aAAU,UACT,eAAC,IAAM,WACH,cAAC,IAAK,CAACC,KAAK,IAAIC,QAAS,cAAC,WAAQ,CAACC,SAAU,cAACnB,EAAA,EAAa,IAAG,SAAC,cAACO,EAAY,QAC5E,cAAC,IAAK,CAACU,KAAK,SAASC,QAAS,cAAC,WAAQ,CAACC,SAAU,cAACnB,EAAA,EAAa,IAAG,SAAC,cAACS,EAAe,CAACM,UAAWA,EAAWC,aAAcA,QACzH,cAAC,IAAK,CAACC,KAAK,YAAYC,QAAS,cAAC,WAAQ,CAACC,SAAU,cAACnB,EAAA,EAAa,IAAG,SAAC,cAACU,EAAkB,CAACK,UAAWA,EAAWC,aAAcA,QAC/H,cAAC,IAAK,CAACC,KAAK,aAAaC,QAAS,cAAC,WAAQ,CAACC,SAAU,cAACnB,EAAA,EAAa,IAAG,SAAC,cAACW,EAAa,CAACI,UAAWA,EAAWC,aAAcA,QAC3H,cAAC,IAAK,CAACC,KAAK,SAASC,QAAS,cAAC,WAAQ,CAACC,SAAU,cAACnB,EAAA,EAAa,IAAG,SAAC,cAACY,EAAS,CAACG,UAAWA,EAAWC,aAAcA,YAI/H,ECrBaI,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACD,cAAC,EAAG,I","file":"static/js/main.0812cd2e.chunk.js","sourcesContent":["import React from 'react';\nimport {MDBSpinner} from \"mdb-react-ui-kit\";\n\nfunction LoadingScreen(props) {\n    return (\n        <div className={'LoadingScreen'}>\n            <MDBSpinner color={'secondary'} className='me-2' style={{ width: '6rem', height: '6rem' }}>\n                <span className='visually-hidden'>Loading...</span>\n            </MDBSpinner>\n        </div>\n    );\n}\n\nexport default LoadingScreen;\n","import './App.scss';\nimport {HashRouter, Route, Routes} from \"react-router-dom\";\nimport {lazy, Suspense, useState} from \"react\";\nimport LoadingScreen from \"./Components/LoadingScreen\";\n\n\nconst LazyHomePage = lazy(() => import('./Components/HomePage'));\nconst LazyLoginScreen = lazy(() => import('./Components/LoginScreen'));\nconst LazyRegisterScreen = lazy(() => import('./Components/RegisterScreen'));\nconst LazyDashboard = lazy(() => import('./Components/Dashboard'));\nconst LazyReset = lazy(() => import('./Components/Reset'));\n\n\nfunction App() {\n\n    const [isLoading, setIsLoading] = useState(false);\n\n  return (\n      <HashRouter>\n        <Routes>\n            <Route path=\"/\" element={<Suspense fallback={<LoadingScreen/>}><LazyHomePage/></Suspense>}/>\n            <Route path=\"/login\" element={<Suspense fallback={<LoadingScreen/>}><LazyLoginScreen isLoading={isLoading} setIsLoading={setIsLoading}/></Suspense>}/>\n            <Route path=\"/register\" element={<Suspense fallback={<LoadingScreen/>}><LazyRegisterScreen isLoading={isLoading} setIsLoading={setIsLoading}/></Suspense>}/>\n            <Route path=\"/dashboard\" element={<Suspense fallback={<LoadingScreen/>}><LazyDashboard isLoading={isLoading} setIsLoading={setIsLoading}/></Suspense>}/>\n            <Route path=\"/reset\" element={<Suspense fallback={<LoadingScreen/>}><LazyReset isLoading={isLoading} setIsLoading={setIsLoading}/></Suspense>}/>\n        </Routes>\n      </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <App />\n);\n"],"sourceRoot":""}