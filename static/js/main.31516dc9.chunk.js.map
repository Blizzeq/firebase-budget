{"version":3,"sources":["Components/HomePage.js","firebase-config.js","Components/LoginScreen.js","Components/RegisterScreen.js","Components/Database-Components/FetchUserData.js","Components/Database-Components/FetchBudgets.js","Components/Database-Components/CreateBudget.js","Components/AddBudgetForm.js","Components/Database-Components/DeleteBudget.js","Components/DeleteBudgetForm.js","Components/Database-Components/UpdateBudget.js","Components/EditBudgetForm.js","Components/Summary.js","Components/Dashboard.js","Components/Reset.js","App.js","index.js"],"names":["HomePage","className","to","color","auth","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","db","getFirestore","fetchDataToDB","user","q","query","collection","where","uid","getDocs","docs","length","addDoc","name","displayName","authProvider","email","console","error","alert","message","googleProvider","GoogleAuthProvider","signInWithGoogle","signInWithRedirect","logInWithEmailAndPassword","password","signInWithEmailAndPassword","registerWithEmailAndPassword","createUserWithEmailAndPassword","res","sendPasswordReset","sendPasswordResetEmail","LoginScreen","useState","setEmail","setPassword","useAuthState","loading","navigate","useNavigate","useEffect","form","useRef","validated","setValidated","Form","noValidate","ref","onSubmit","e","currentTarget","checkValidity","preventDefault","stopPropagation","Group","controlId","Control","required","type","placeholder","value","onChange","target","Feedback","Button","variant","onClick","RegisterScreen","setName","replace","fetchUserName","doc","data","log","fetchBudgets","setBudgets","id","querySnapshot","map","budget","amount","budgetId","category","totalBudget","createBudget","budgetName","budgetAmount","budgets","addBudget","setAddBudget","includes","uuid","AddBudgetForm","setBudgetName","setBudgetAmount","setTotalBudget","selectedCategory","setSelectedCategory","event","FloatingLabel","label","Select","valueAsNumber","deleteBudget","setDeleteBudget","budgetDoc","find","deleteDoc","DeleteBudgetForm","delBudget","setDelBudget","selectedBudget","setSelectedBudget","key","updateBudget","setEditBudget","updateDoc","EditBudgetForm","editBudget","defaultValue","Summary","style","backgroundColor","href","Dashboard","signOut","index","Reset","props","App","path","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.31516dc9.chunk.js","sourcesContent":["import React from 'react';\r\nimport {MDBBtn} from \"mdb-react-ui-kit\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\n\r\nfunction HomePage() {\r\n    return (\r\n        <div className={\"Home-Container\"}>\r\n            <div className={\"Home-Title\"}>\r\n                Welcome to the Budget App\r\n            </div>\r\n            <div className={\"Home-Subtitle\"}>\r\n                Manage your budget with us\r\n            </div>\r\n            <div className={\"Home-Text\"}>\r\n                Login to continue\r\n            </div>\r\n            <div className={\"Home-Login-Button\"}>\r\n                <LinkContainer to=\"/login\">\r\n                    <MDBBtn color={\"secondary\"}>Login</MDBBtn>\r\n                </LinkContainer>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n","// Import the functions you need from the SDKs you need\r\nimport {initializeApp} from \"firebase/app\";\r\nimport {\r\n    GoogleAuthProvider,\r\n    getAuth,\r\n    signInWithRedirect,\r\n    signInWithEmailAndPassword,\r\n    createUserWithEmailAndPassword,\r\n    sendPasswordResetEmail,\r\n    signOut\r\n} from \"firebase/auth\";\r\nimport {\r\n    getFirestore,\r\n    query,\r\n    getDocs,\r\n    collection,\r\n    where,\r\n    addDoc\r\n} from \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC3DMSjnUoA9dF9GM17-cXY2vGrD01UOsg\",\r\n    authDomain: \"budget-app-fba0d.firebaseapp.com\",\r\n    projectId: \"budget-app-fba0d\",\r\n    storageBucket: \"budget-app-fba0d.appspot.com\",\r\n    messagingSenderId: \"304622335247\",\r\n    appId: \"1:304622335247:web:fed99b704be7ad5cdafa7a\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth();\r\nconst db = getFirestore();\r\n\r\nconst fetchDataToDB = async (user) => {\r\n    try{\r\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\r\n        const docs = await getDocs(q);\r\n        if (docs.docs.length === 0) {\r\n            await addDoc(collection(db, \"users\"), {\r\n                uid: user.uid,\r\n                name: user.displayName,\r\n                authProvider: \"google\",\r\n                email: user.email,\r\n            });\r\n        }\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\nconst googleProvider = new GoogleAuthProvider();\r\nconst signInWithGoogle = async () => {\r\n    try {\r\n        await signInWithRedirect(auth, googleProvider);\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\nconst logInWithEmailAndPassword = async (email, password) => {\r\n    try {\r\n        await signInWithEmailAndPassword(auth, email, password);\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\nconst registerWithEmailAndPassword = async (name, email, password) => {\r\n    try {\r\n        const res = await createUserWithEmailAndPassword(auth, email, password);\r\n        const user = res.user;\r\n        await addDoc(collection(db, \"users\"), {\r\n            uid: user.uid,\r\n            name,\r\n            authProvider: \"local\",\r\n            email\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\nconst sendPasswordReset = async (email) => {\r\n    try {\r\n        await sendPasswordResetEmail(auth, email);\r\n        alert(\"Password reset email sent\");\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\nconst logout = () => {\r\n    signOut(auth);\r\n};\r\nexport {\r\n    auth,\r\n    db,\r\n    signInWithGoogle,\r\n    logInWithEmailAndPassword,\r\n    registerWithEmailAndPassword,\r\n    sendPasswordReset,\r\n    logout,\r\n    fetchDataToDB\r\n};\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { auth, logInWithEmailAndPassword, signInWithGoogle } from \"../firebase-config\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\n\r\nimport {\r\n    MDBCard\r\n} from 'mdb-react-ui-kit';\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\n\r\nconst LoginScreen = () =>  {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [user, loading] = useAuthState(auth);\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        if (loading) {\r\n            // maybe trigger a loading screen\r\n            return;\r\n        }\r\n        if (user) navigate(\"/dashboard\");\r\n    }, [user, loading, navigate]);\r\n\r\n    const form = useRef();\r\n\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const handleSubmit = (e) => {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        } else {\r\n            e.preventDefault();\r\n            logInWithEmailAndPassword(email, password);\r\n        }\r\n\r\n        setValidated(true);\r\n    };\r\n\r\n    return (\r\n        <div className={\"Login-Container\"}>\r\n            <MDBCard>\r\n                <Form noValidate validated={validated} ref={form} onSubmit={handleSubmit}\r\n                      className={'Form-Contact'}>\r\n\r\n                    <Form.Group className=\"form-content\" controlId=\"formBasicEmail\">\r\n                        <Form.Control required type=\"email\" placeholder=\"Email\" name=\"user_email\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid email.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"form-content\" controlId=\"formBasicPassword\">\r\n                        <Form.Control required type=\"password\" placeholder=\"Password\" name=\"user_password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid password.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <LinkContainer to=\"/reset\">\r\n                    <a>Forgot password?</a>\r\n                    </LinkContainer>\r\n                    <Button variant=\"secondary\" type=\"submit\" className={'Button-Login'}>\r\n                        Login\r\n                    </Button>\r\n                    <p>Not a member? <LinkContainer to=\"/register\"><a>Register</a></LinkContainer></p>\r\n                    <p>or sign up with:</p>\r\n                    <Button onClick={signInWithGoogle} className='Button-Register' variant={'secondary'}>\r\n                        Google\r\n                    </Button>\r\n                </Form>\r\n            </MDBCard>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default LoginScreen;\r\n","import {MDBCard} from \"mdb-react-ui-kit\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {\r\n    auth, logInWithEmailAndPassword,\r\n    registerWithEmailAndPassword, signInWithGoogle,\r\n} from \"../firebase-config\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\n\r\nfunction RegisterScreen() {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [user, loading, error] = useAuthState(auth);\r\n    const navigate = useNavigate();\r\n    const register = () => {\r\n        registerWithEmailAndPassword(name, email, password);\r\n    };\r\n    useEffect(() => {\r\n        if (loading) return;\r\n        if (user) navigate('/dashboard', { replace: true })\r\n    }, [user, loading, navigate]);\r\n\r\n    const form = useRef();\r\n\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const handleSubmit = (e) => {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        } else {\r\n                e.preventDefault();\r\n                register();\r\n            }\r\n\r\n        setValidated(true);\r\n    };\r\n\r\n    return (\r\n        <div className={\"Register-Container\"}>\r\n            <MDBCard>\r\n                <Form noValidate validated={validated} ref={form} onSubmit={handleSubmit}\r\n                      className={'Form-Contact'}>\r\n\r\n                    <Form.Group className=\"form-content\" controlId=\"formBasicName\">\r\n                        <Form.Control required type=\"name\" placeholder=\"Name\" name=\"user_name\" value={name} onChange={(e) => setName(e.target.value)}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid name.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"form-content\" controlId=\"formBasicEmail\">\r\n                        <Form.Control required type=\"email\" placeholder=\"Email\" name=\"user_email\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid email.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"form-content\" controlId=\"formBasicPassword\">\r\n                        <Form.Control required type=\"password\" placeholder=\"Password\" name=\"user_password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid password.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Button variant=\"secondary\" type=\"submit\" className={'Button-Login'}>\r\n                        Register\r\n                    </Button>\r\n                    <p>Already have account? <LinkContainer to={'/login'}>\r\n                        <a>Login</a>\r\n                    </LinkContainer></p>\r\n                    <p>or sign up with:</p>\r\n                    <Button onClick={signInWithGoogle} className='Button-Login' variant={'secondary'}>\r\n                        Google\r\n                    </Button>\r\n                </Form>\r\n            </MDBCard>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import {collection, getDocs, query, where} from \"firebase/firestore\";\r\nimport {db} from \"../../firebase-config\";\r\n\r\nexport const fetchUserName = async (user, setName) => {\r\n    try {\r\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\r\n        const doc = await getDocs(q);\r\n        const data = doc.docs[0].data();\r\n        setName(data.name);\r\n    } catch (err) {\r\n        setName(user.displayName);\r\n        console.error(err);\r\n        console.log(\"Error fetching user name\");\r\n    }\r\n};\r\n","import {collection, getDocs, query, where} from \"firebase/firestore\";\r\nimport {db} from \"../../firebase-config\";\r\n\r\nexport const fetchBudgets = async (user, setBudgets) => {\r\n    try {\r\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\r\n        const doc = await getDocs(q);\r\n        const querySnapshot = await getDocs(collection(db, \"users\", doc.docs[0].id, \"budgets\"));\r\n        const data = querySnapshot.docs.map(doc => doc.data());\r\n        setBudgets(data.map(budget => ({name: budget.name, amount: budget.amount, budgetId: budget.budgetId, category: budget.category, totalBudget: budget.totalBudget})));\r\n    } catch (err) {\r\n        console.error(err);\r\n        console.log(\"Error fetching budgets\");\r\n    }\r\n}\r\n","import {addDoc, collection, getDocs, query, where} from \"firebase/firestore\";\r\nimport {db} from \"../../firebase-config\";\r\nimport {uuid} from \"uuidv4\";\r\n\r\nexport const createBudget = async (user, budgetName, setBudgets, budgetAmount, budgets, addBudget, setAddBudget, category, totalBudget) => {\r\n    try {\r\n        setAddBudget(false);\r\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\r\n        const doc = await getDocs(q);\r\n        const querySnapshot = await getDocs(collection(db, \"users\", doc.docs[0].id, \"budgets\"));\r\n        const data = querySnapshot.docs.map(doc => doc.data());\r\n        const budgetNames = data.map(budget => budget.name);\r\n        if (!budgetNames.includes(budgetName)) {\r\n            await addDoc(collection(db, \"users\", doc.docs[0].id, \"budgets\"), {\r\n                uid: user.uid,\r\n                budgetId: uuid(),\r\n                name: budgetName,\r\n                category: category,\r\n                amount: budgetAmount,\r\n                totalBudget: totalBudget\r\n            });\r\n            setBudgets([...budgets, {name: budgetName, amount: budgetAmount, category: category, totalBudget: totalBudget}]);\r\n        } else {\r\n            alert(\"Budget name already exists\");\r\n        }\r\n    } catch (err) {\r\n        console.error(err);\r\n        console.log(\"Error creating budget\");\r\n    }\r\n};\r\n","import React, {useState} from 'react';\r\nimport {MDBCard} from \"mdb-react-ui-kit\";\r\nimport {Button, FloatingLabel, Form} from \"react-bootstrap\";\r\nimport {createBudget} from \"./Database-Components/CreateBudget\";\r\n\r\nfunction AddBudgetForm({\r\n                           user,\r\n                           addBudget,\r\n                           setAddBudget,\r\n                           budgets,\r\n                           setBudgets,\r\n                           setBudgetName,\r\n                           setBudgetAmount,\r\n                           budgetName,\r\n                           budgetAmount,\r\n                           totalBudget,\r\n                           setTotalBudget})\r\n{\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const [selectedCategory, setSelectedCategory] = useState(\"Other\");\r\n\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        } else {\r\n            createBudget(user, budgetName, setBudgets, budgetAmount, budgets, addBudget, setAddBudget, selectedCategory, totalBudget);\r\n        }\r\n\r\n        setValidated(true);\r\n    };\r\n\r\n    return (\r\n        <div className={\"Dashboard-AddBudget-Form\"}>\r\n            <MDBCard>\r\n                <Form noValidate validated={validated} onSubmit={handleSubmit} className={\"createBudgetForm\"}>\r\n                    <p className={'edit-info'}>Enter budget name</p>\r\n                    <FloatingLabel\r\n                        controlId=\"floatingBudget\"\r\n                        label=\"Budget Name\"\r\n                    >\r\n                        <Form.Control type=\"text\" placeholder=\"Budget\"\r\n                                      onChange={(e) => setBudgetName(e.target.value)} required/>\r\n                        <Form.Control.Feedback>\r\n                            Looks good!\r\n                        </Form.Control.Feedback>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a name for your budget.\r\n                        </Form.Control.Feedback>\r\n                    </FloatingLabel>\r\n                    <p className={'edit-info'}>Select budget category</p>\r\n                    <Form.Select aria-label=\"Default select example\"\r\n                                 onChange={(e) => setSelectedCategory(e.target.value)}>\r\n                        <option>Select category</option>\r\n                        <option value={\"Housing\"}>Housing</option>\r\n                        <option value={\"Transportation\"}>Transportation</option>\r\n                        <option value={\"Food\"}>Food</option>\r\n                        <option value={\"Utilities\"}>Utilities</option>\r\n                        <option value={\"Insurance\"}>Insurance</option>\r\n                        <option value={\"Medical/Dental\"}>Medical/Dental</option>\r\n                        <option value={\"Savings\"}>Savings</option>\r\n                        <option value={\"Other\"}>Other</option>\r\n                    </Form.Select>\r\n                    <p className={'edit-info'}>Enter current budget amount</p>\r\n                    <FloatingLabel controlId=\"floatingAmount\" label=\"Current Amount\">\r\n                        <Form.Control type=\"number\" placeholder=\"Amount\"\r\n                                      onChange={(e) => setBudgetAmount(e.target.valueAsNumber)} required/>\r\n                        <Form.Control.Feedback>\r\n                            Looks good!\r\n                        </Form.Control.Feedback>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid amount.\r\n                        </Form.Control.Feedback>\r\n                    </FloatingLabel>\r\n                    <p className={'edit-info'}>Enter maximum budget amount</p>\r\n                    <FloatingLabel controlId=\"floatingAmount\" label=\"Maximum Amount\">\r\n                        <Form.Control type=\"number\" placeholder=\"Amount\"\r\n                                      onChange={(e) => setTotalBudget(e.target.valueAsNumber)} required/>\r\n                        <Form.Control.Feedback>\r\n                            Looks good!\r\n                        </Form.Control.Feedback>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid total amount.\r\n                        </Form.Control.Feedback>\r\n                    </FloatingLabel>\r\n                    <Button variant={\"success\"} type={\"submit\"} className={'btn-submit'}>Add Budget</Button>\r\n                    <Button variant={\"danger\"} onClick={() => setAddBudget(!addBudget)}\r\n                            className={'btn-cancel'}>Cancel</Button>\r\n                </Form>\r\n            </MDBCard>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddBudgetForm;\r\n","import {collection, deleteDoc, getDocs, query, where} from \"firebase/firestore\";\r\nimport {db} from \"../../firebase-config\";\r\nimport {fetchBudgets} from \"./FetchBudgets\";\r\n\r\nexport const deleteBudget = async (user, budgetName, budgets, setBudgets, deleteBudget, setDeleteBudget) => {\r\n    try {\r\n        setDeleteBudget(false);\r\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\r\n        const doc = await getDocs(q);\r\n        const querySnapshot = await getDocs(collection(db, \"users\", doc.docs[0].id, \"budgets\"));\r\n        const budgetDoc = querySnapshot.docs.find(doc => doc.data().name === budgetName);\r\n        await deleteDoc(budgetDoc.ref);\r\n        await fetchBudgets(user, setBudgets);\r\n    } catch (err) {\r\n        console.error(err);\r\n        console.log(\"Error deleting budget\");\r\n    }\r\n}\r\n","import React, {useState} from 'react';\r\nimport {MDBCard} from \"mdb-react-ui-kit\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {deleteBudget} from \"./Database-Components/DeleteBudget\";\r\n\r\nfunction DeleteBudgetForm({user, delBudget, setDelBudget, budgets, setBudgets}) {\r\n\r\n    const [selectedBudget, setSelectedBudget] = useState(budgets[0].name);\r\n\r\n    const handleSubmit = () => {\r\n            deleteBudget(user, selectedBudget, budgets, setBudgets, delBudget, setDelBudget);\r\n    };\r\n\r\n    return (\r\n        <div className={\"Dashboard-DeleteBudget-Form\"}>\r\n            <MDBCard>\r\n                <Form onSubmit={handleSubmit} className={\"deleteBudgetForm\"}>\r\n                    <p className={'delete-info'}>Select budget</p>\r\n                    <Form.Select aria-label=\"Default select example\" value={selectedBudget} onChange={(e) => setSelectedBudget(e.target.value)}>\r\n                        {budgets.map((budget, key) => (\r\n                            <option key={key} id={budget.budgetId} value={budget.name}>{budget.name}</option>\r\n                        ))}\r\n                    </Form.Select>\r\n                    <Button variant={\"success\"} type={\"submit\"} className={'btn-delete'}>Delete Budget</Button>\r\n                    <Button variant={\"danger\"} onClick={() => setDelBudget(!delBudget)}\r\n                            className={'btn-cancel'}>Cancel</Button>\r\n                </Form>\r\n            </MDBCard>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DeleteBudgetForm;\r\n","import {collection, getDocs, query, updateDoc, where} from \"firebase/firestore\";\r\nimport {db} from \"../../firebase-config\";\r\nimport {fetchBudgets} from \"./FetchBudgets\";\r\n\r\nexport const updateBudget = async (user, budgetName, setBudgets, category, budgetAmount, selectedBudget, setEditBudget, totalBudget) => {\r\n    try {\r\n        setEditBudget(false);\r\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\r\n        const doc = await getDocs(q);\r\n        const querySnapshot = await getDocs(collection(db, \"users\", doc.docs[0].id, \"budgets\"));\r\n        const budgetDoc = querySnapshot.docs.find(doc => doc.data().name === selectedBudget);\r\n        await updateDoc(budgetDoc.ref, {\r\n            name: budgetName,\r\n            amount: budgetAmount,\r\n            category: category,\r\n            totalBudget: totalBudget\r\n        });\r\n        await fetchBudgets(user, setBudgets);\r\n    } catch (err) {\r\n        console.error(err);\r\n        console.log(\"Error updating budget\");\r\n    }\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Button, FloatingLabel, Form} from \"react-bootstrap\";\r\nimport {updateBudget} from \"./Database-Components/UpdateBudget\";\r\nimport {MDBCard} from \"mdb-react-ui-kit\";\r\n\r\n\r\nfunction EditBudgetForm({\r\n                            user,\r\n                            budgets,\r\n                            setBudgets,\r\n                            budgetName,\r\n                            setBudgetName,\r\n                            editBudget,\r\n                            setEditBudget,\r\n                            budgetAmount,\r\n                            setBudgetAmount,\r\n                            totalBudget,\r\n                            setTotalBudget\r\n                        }) {\r\n\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const [selectedBudget, setSelectedBudget] = useState(budgets[0].name);\r\n\r\n    const [selectedCategory, setSelectedCategory] = useState(budgets[0].category);\r\n\r\n    const handleNoChange = () => {\r\n        budgets.map((budget) => {\r\n            if (budget.name === selectedBudget) {\r\n                setBudgetName(budget.name);\r\n                setBudgetAmount(budget.amount);\r\n                setSelectedCategory(budget.category);\r\n                setTotalBudget(budget.totalBudget);\r\n            }\r\n            return null;\r\n        })\r\n    }\r\n\r\n\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        } else {\r\n            event.preventDefault();\r\n            updateBudget(user, budgetName, setBudgets, selectedCategory, budgetAmount, selectedBudget, setEditBudget, totalBudget);\r\n        }\r\n        setValidated(true);\r\n    };\r\n\r\n    useEffect(() => {\r\n        handleNoChange();\r\n    }, [selectedBudget]);\r\n\r\n\r\n    return (<div className={'Dashboard-EditBudget-Form'}>\r\n        <MDBCard>\r\n            <Form noValidate validated={validated} onSubmit={handleSubmit} className={\"editBudgetForm\"}>\r\n                <p className={'edit-info'}>Select budget</p>\r\n                <Form.Select aria-label=\"Default select example\" value={selectedBudget}\r\n                             onChange={(e) => setSelectedBudget(e.target.value)}>\r\n                    {budgets.map((budget, key) => (\r\n                        <option key={key} id={budget.budgetId} value={budget.name}>{budget.name}</option>))}\r\n                </Form.Select>\r\n                {budgets.map((budget) => [\r\n                    budget.name === selectedBudget && (\r\n                        <>\r\n                            <p className={'edit-info'}>Edit budget name</p>\r\n                            <FloatingLabel\r\n                                controlId=\"floatingBudget\"\r\n                                label={selectedBudget}\r\n                            >\r\n                                <Form.Control type=\"text\" placeholder=\"Budget\"\r\n                                              defaultValue={budget.name}\r\n                                              onChange={(e) => setBudgetName(e.target.value)}/>\r\n                                <Form.Control.Feedback>\r\n                                    Looks good!\r\n                                </Form.Control.Feedback>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Please provide a new name.\r\n                                </Form.Control.Feedback>\r\n                            </FloatingLabel>\r\n                            <p className={'edit-info'}>Select budget category</p>\r\n                            <Form.Select aria-label=\"Default select example\"\r\n                                         onChange={(e) => setSelectedCategory(e.target.value)}>\r\n                                <option>\r\n                                    {budgets.map((budget) => ([budget.name === selectedBudget && budget.category]))}\r\n                                </option>\r\n                                <option value={'Housing'}>Housing</option>\r\n                                <option value={'Transportation'}>Transportation</option>\r\n                                <option value={'Food'}>Food</option>\r\n                                <option value={'Utilities'}>Utilities</option>\r\n                                <option value={'Insurance'}>Insurance</option>\r\n                                <option value={'Medical/Dental'}>Medical/Dental</option>\r\n                                <option value={'Savings'}>Savings</option>\r\n                                <option value={'Other'}>Other</option>\r\n                            </Form.Select>\r\n                            <p className={'edit-info'}>Edit current budget amount</p>\r\n                            <FloatingLabel controlId=\"floatingAmount\"\r\n                                           label={budgets.map((budget) => ([budget.name === selectedBudget && budget.amount]))}\r\n                            >\r\n                                <Form.Control type=\"number\" placeholder=\"Amount\"\r\n                                              defaultValue={budget.amount}\r\n                                              onChange={(e) => setBudgetAmount(e.target.valueAsNumber)}/>\r\n                                <Form.Control.Feedback>\r\n                                    Looks good!\r\n                                </Form.Control.Feedback>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Please provide a new amount.\r\n                                </Form.Control.Feedback>\r\n                            </FloatingLabel>\r\n                            <p className={'edit-info'}>Edit maximum budget amount</p>\r\n                            <FloatingLabel controlId=\"floatingAmount\"\r\n                                           label={budgets.map((budget) => ([budget.name === selectedBudget && budget.totalBudget]))}\r\n                            >\r\n                                <Form.Control type=\"number\" placeholder=\"Amount\"\r\n                                              defaultValue={budget.totalBudget}\r\n                                              onChange={(e) => setTotalBudget(e.target.valueAsNumber)}/>\r\n                                <Form.Control.Feedback>\r\n                                    Looks good!\r\n                                </Form.Control.Feedback>\r\n                                <Form.Control.Feedback type=\"invalid\">\r\n                                    Please provide a new amount.\r\n                                </Form.Control.Feedback>\r\n                            </FloatingLabel>\r\n                            <Button variant={\"success\"} type={\"submit\"} className={'btn-edit'}>Edit Budget</Button>\r\n                            <Button variant={\"danger\"} onClick={() => setEditBudget(!editBudget)}\r\n                                    className={'btn-cancel'}>Cancel</Button>\r\n                        </>\r\n                    )\r\n                ])\r\n                }\r\n            </Form>\r\n        </MDBCard>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default EditBudgetForm;\r\n","import React from 'react';\r\nimport {MDBContainer, MDBFooter} from \"mdb-react-ui-kit\";\r\n\r\nfunction Summary({budgets}) {\r\n\r\n\r\n\r\n    return (\r\n        <div className={'Summary'}>\r\n            <MDBFooter className='text-center text-white' style={{ backgroundColor: '#1c1c1c' }}>\r\n                <MDBContainer className='p-4 pb-0'>\r\n                    <section className=''>\r\n                        <p className='d-flex justify-content-center align-items-center'>\r\n\r\n                        </p>\r\n                    </section>\r\n                </MDBContainer>\r\n\r\n                <div className='text-center p-3' style={{ backgroundColor: 'rgba(0, 0, 0, 0.2)' }}>\r\n                    © 2020 Copyright:\r\n                    <a className='text-white' href='https://mdbootstrap.com/'>\r\n                        MDBootstrap.com\r\n                    </a>\r\n                </div>\r\n            </MDBFooter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Summary;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {auth, fetchDataToDB, logout} from \"../firebase-config\";\r\nimport {fetchUserName} from \"./Database-Components/FetchUserData\";\r\nimport {fetchBudgets} from \"./Database-Components/FetchBudgets\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport AddBudgetForm from \"./AddBudgetForm\";\r\nimport DeleteBudgetForm from \"./DeleteBudgetForm\";\r\nimport EditBudgetForm from \"./EditBudgetForm\";\r\nimport {MDBCard} from \"mdb-react-ui-kit\";\r\nimport Summary from \"./Summary\";\r\n\r\n\r\nfunction Dashboard() {\r\n\r\n    const [user, loading] = useAuthState(auth);\r\n    const [name, setName] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const [budgetName, setBudgetName] = useState(\"\");\r\n    const [budgetAmount, setBudgetAmount] = useState(0);\r\n    const [totalBudget, setTotalBudget] = useState(0);\r\n    const [addBudget, setAddBudget] = useState(false);\r\n    const [delBudget, setDelBudget] = useState(false);\r\n    const [editBudget, setEditBudget] = useState(false);\r\n\r\n    const [budgets, setBudgets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (loading) return;\r\n        if (!user) return navigate(\"/\");\r\n        fetchDataToDB(user);\r\n        fetchUserName(user, setName);\r\n        fetchBudgets(user, setBudgets);\r\n        console.log(\"WOW\");\r\n\r\n    }, [user, loading, navigate]);\r\n\r\n\r\n    return (\r\n        <div className={\"Dashboard\"}>\r\n            <div className={\"Dashboard-Header\"}>\r\n                {name} <Button variant={\"secondary\"} onClick={() => logout()}>Logout</Button>\r\n            </div>\r\n            <div className={\"Dashboard-Menu\"}>\r\n                {addBudget ?\r\n                    <AddBudgetForm addBudget={addBudget} setAddBudget={setAddBudget} user={user} budgetName={budgetName}\r\n                                   setBudgetName={setBudgetName} budgetAmount={budgetAmount}\r\n                                   setBudgetAmount={setBudgetAmount}\r\n                                   setBudgets={setBudgets}\r\n                                   budgets={budgets} totalBudget={totalBudget} setTotalBudget={setTotalBudget}/>\r\n                    : <div className={\"Dashboard-AddBudget\"}>\r\n                        <Button variant={\"success\"} onClick={() => setAddBudget(!addBudget)}>+</Button> <span>Add new Budget</span>\r\n                    </div>}\r\n                {budgets.length !== 0 && [delBudget ?\r\n                    <DeleteBudgetForm delBudget={delBudget} setDelBudget={setDelBudget} user={user} budgets={budgets}\r\n                                      setBudgets={setBudgets}/>\r\n                    : <div className={\"Dashboard-DeleteBudget\"}>\r\n                        <Button variant={\"danger\"} onClick={() => setDelBudget(!delBudget)}>-</Button> <span>Delete existing Budget</span>\r\n                    </div>]}\r\n                {budgets.length !== 0 && [editBudget ?\r\n                    <EditBudgetForm user={user} budgets={budgets} setBudgets={setBudgets} budgetName={budgetName}\r\n                                    setBudgetName={setBudgetName} editBudget={editBudget} setEditBudget={setEditBudget}\r\n                                    budgetAmount={budgetAmount} setBudgetAmount={setBudgetAmount} totalBudget={totalBudget}\r\n                                    setTotalBudget={setTotalBudget}/>\r\n                    : <div className={\"Dashboard-EditBudget\"}>\r\n                        <Button variant={\"warning\"} onClick={() => setEditBudget(!editBudget)}>✎</Button> <span>Edit existing Budget</span>\r\n                    </div>]}\r\n            </div>\r\n            {budgets.length !== 0 &&\r\n                [budgets.map((budget, index) => {\r\n                    return <div className={\"Dashboard-Budget\"} key={index}>\r\n                        <MDBCard>\r\n                            <p className={'Budget-Name'}>{budget.name}</p>\r\n                            <p className={'Budget-Category'}>{budget.category}</p>\r\n                            <p className={'Budget-Amount'}>{budget.amount}/{budget.totalBudget}</p>\r\n                        </MDBCard>\r\n                    </div>\r\n                })]\r\n            }\r\n            <Summary budgets={budgets}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {auth, logInWithEmailAndPassword, sendPasswordReset, signInWithGoogle} from \"../firebase-config\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport {MDBCard} from \"mdb-react-ui-kit\";\r\n\r\nfunction Reset(props) {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [user, loading, error] = useAuthState(auth);\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        if (loading) return;\r\n        if (user) navigate(\"/dashboard\");\r\n    }, [user, loading]);\r\n\r\n    const form = useRef();\r\n\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const handleSubmit = (e) => {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        } else {\r\n            e.preventDefault();\r\n            sendPasswordReset(email);\r\n        }\r\n\r\n        setValidated(true);\r\n    };\r\n\r\n    return (\r\n        <div className={\"Login-Container\"}>\r\n            <MDBCard>\r\n                <Form noValidate validated={validated} ref={form} onSubmit={handleSubmit}\r\n                      className={'Form-Contact'}>\r\n\r\n                    <Form.Group className=\"form-content\" controlId=\"formBasicEmail\">\r\n                        <Form.Control required type=\"email\" placeholder=\"Email\" name=\"user_email\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid email.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Button variant=\"secondary\" type=\"submit\" className='Button-Register'>Send password reset email</Button>\r\n                    <p>Not a member? <LinkContainer to=\"/register\"><a>Register</a></LinkContainer></p>\r\n                </Form>\r\n            </MDBCard>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Reset;\r\n","import './App.scss';\r\nimport {HashRouter, Route, Routes} from \"react-router-dom\";\r\nimport HomePage from \"./Components/HomePage\";\r\nimport LoginScreen from \"./Components/LoginScreen\";\r\nimport RegisterScreen from \"./Components/RegisterScreen\";\r\nimport Dashboard from \"./Components/Dashboard\";\r\nimport Reset from \"./Components/Reset\";\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n      <HashRouter>\r\n        <Routes>\r\n            <Route path=\"/\" element={<HomePage/>}/>\r\n            <Route path=\"/login\" element={<LoginScreen/>}/>\r\n            <Route path=\"/register\" element={<RegisterScreen/>}/>\r\n            <Route path=\"/dashboard\" element={<Dashboard/>}/>\r\n            <Route path=\"/reset\" element={<Reset/>}/>\r\n        </Routes>\r\n      </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css';\r\nimport App from './App';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n    <App />\r\n);\r\n"],"sourceRoot":""}