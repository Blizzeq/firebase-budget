{"version":3,"sources":["Components/LoadingScreen.js","App.js","index.js"],"names":["LoadingScreen","props","className","color","style","width","height","LazyHomePage","lazy","LazyLoginScreen","LazyRegisterScreen","LazyDashboard","LazyReset","App","useState","isLoading","setIsLoading","path","element","fallback","ReactDOM","createRoot","document","getElementById","render"],"mappings":"yHAAA,wBAaeA,IAVf,SAAuBC,GACnB,OACI,qBAAKC,UAAW,gBAAgB,SAC5B,cAAC,IAAU,CAACC,MAAO,YAAaD,UAAU,OAAOE,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAAS,SACtF,sBAAMJ,UAAU,kBAAiB,2BAIjD,C,0KCLMK,EAAeC,gBAAK,kBAAM,4BAA+B,IACzDC,EAAkBD,gBAAK,kBAAM,kDAAkC,IAC/DE,EAAqBF,gBAAK,kBAAM,kDAAqC,IACrEG,EAAgBH,gBAAK,kBAAM,yDAAgC,IAC3DI,EAAYJ,gBAAK,kBAAM,kDAA4B,IAoB1CK,MAjBf,WAEI,MAAkCC,oBAAS,GAAM,mBAA1CC,EAAS,KAAEC,EAAY,KAEhC,OACI,cAAC,aAAU,UACT,eAAC,IAAM,WACH,cAAC,IAAK,CAACC,KAAK,IAAIC,QAAS,cAAC,WAAQ,CAACC,SAAU,cAACnB,EAAA,EAAa,IAAG,SAAC,cAACO,EAAY,QAC5E,cAAC,IAAK,CAACU,KAAK,SAASC,QAAS,cAAC,WAAQ,CAACC,SAAU,cAACnB,EAAA,EAAa,IAAG,SAAC,cAACS,EAAe,CAACM,UAAWA,EAAWC,aAAcA,QACzH,cAAC,IAAK,CAACC,KAAK,YAAYC,QAAS,cAAC,WAAQ,CAACC,SAAU,cAACnB,EAAA,EAAa,IAAG,SAAC,cAACU,EAAkB,CAACK,UAAWA,EAAWC,aAAcA,QAC/H,cAAC,IAAK,CAACC,KAAK,aAAaC,QAAS,cAAC,WAAQ,CAACC,SAAU,cAACnB,EAAA,EAAa,IAAG,SAAC,cAACW,EAAa,CAACI,UAAWA,EAAWC,aAAcA,QAC3H,cAAC,IAAK,CAACC,KAAK,SAASC,QAAS,cAAC,WAAQ,CAACC,SAAU,cAACnB,EAAA,EAAa,IAAG,SAAC,cAACY,EAAS,CAACG,UAAWA,EAAWC,aAAcA,YAI/H,ECrBaI,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACD,cAAC,EAAG,I","file":"static/js/main.75371f30.chunk.js","sourcesContent":["import React from 'react';\r\nimport {MDBSpinner} from \"mdb-react-ui-kit\";\r\n\r\nfunction LoadingScreen(props) {\r\n    return (\r\n        <div className={'LoadingScreen'}>\r\n            <MDBSpinner color={'secondary'} className='me-2' style={{ width: '6rem', height: '6rem' }}>\r\n                <span className='visually-hidden'>Loading...</span>\r\n            </MDBSpinner>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LoadingScreen;\r\n","import './App.scss';\r\nimport {HashRouter, Route, Routes} from \"react-router-dom\";\r\nimport {lazy, Suspense, useState} from \"react\";\r\nimport LoadingScreen from \"./Components/LoadingScreen\";\r\n\r\n\r\nconst LazyHomePage = lazy(() => import('./Components/HomePage'));\r\nconst LazyLoginScreen = lazy(() => import('./Components/LoginScreen'));\r\nconst LazyRegisterScreen = lazy(() => import('./Components/RegisterScreen'));\r\nconst LazyDashboard = lazy(() => import('./Components/Dashboard'));\r\nconst LazyReset = lazy(() => import('./Components/Reset'));\r\n\r\n\r\nfunction App() {\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n  return (\r\n      <HashRouter>\r\n        <Routes>\r\n            <Route path=\"/\" element={<Suspense fallback={<LoadingScreen/>}><LazyHomePage/></Suspense>}/>\r\n            <Route path=\"/login\" element={<Suspense fallback={<LoadingScreen/>}><LazyLoginScreen isLoading={isLoading} setIsLoading={setIsLoading}/></Suspense>}/>\r\n            <Route path=\"/register\" element={<Suspense fallback={<LoadingScreen/>}><LazyRegisterScreen isLoading={isLoading} setIsLoading={setIsLoading}/></Suspense>}/>\r\n            <Route path=\"/dashboard\" element={<Suspense fallback={<LoadingScreen/>}><LazyDashboard isLoading={isLoading} setIsLoading={setIsLoading}/></Suspense>}/>\r\n            <Route path=\"/reset\" element={<Suspense fallback={<LoadingScreen/>}><LazyReset isLoading={isLoading} setIsLoading={setIsLoading}/></Suspense>}/>\r\n        </Routes>\r\n      </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css';\r\nimport App from './App';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n    <App />\r\n);\r\n"],"sourceRoot":""}