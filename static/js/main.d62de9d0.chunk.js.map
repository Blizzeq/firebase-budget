{"version":3,"sources":["Components/HomePage.js","firebase-config.js","Components/LoginScreen.js","Components/RegisterScreen.js","Components/Database-Components/FetchUserData.js","Components/Database-Components/FetchBudgets.js","Components/Dashboard.js","Components/Reset.js","App.js","index.js"],"names":["HomePage","className","to","color","auth","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","db","getFirestore","fetchDataToDB","user","q","query","collection","where","uid","getDocs","docs","length","addDoc","name","displayName","authProvider","email","console","error","alert","message","googleProvider","GoogleAuthProvider","signInWithGoogle","signInWithRedirect","logInWithEmailAndPassword","password","signInWithEmailAndPassword","registerWithEmailAndPassword","createUserWithEmailAndPassword","res","sendPasswordReset","sendPasswordResetEmail","LoginScreen","useState","setEmail","setPassword","useAuthState","loading","navigate","useNavigate","useEffect","form","useRef","validated","setValidated","Form","noValidate","ref","onSubmit","e","currentTarget","checkValidity","preventDefault","stopPropagation","Group","controlId","Control","required","type","placeholder","value","onChange","target","Feedback","Button","variant","onClick","RegisterScreen","setName","replace","fetchUserName","doc","data","log","fetchBudgets","setBudgets","id","querySnapshot","map","budget","amount","budgetId","Dashboard","signOut","Reset","props","App","path","element","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.d62de9d0.chunk.js","sourcesContent":["import React from 'react';\r\nimport {MDBBtn} from \"mdb-react-ui-kit\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\n\r\nfunction HomePage() {\r\n    return (\r\n        <div className={\"Home-Container\"}>\r\n            <div className={\"Home-Title\"}>\r\n                Welcome to the Budget App\r\n            </div>\r\n            <div className={\"Home-Subtitle\"}>\r\n                Manage your budget with us\r\n            </div>\r\n            <div className={\"Home-Text\"}>\r\n                Login to continue\r\n            </div>\r\n            <div className={\"Home-Login-Button\"}>\r\n                <LinkContainer to=\"/login\">\r\n                    <MDBBtn color={\"secondary\"}>Login</MDBBtn>\r\n                </LinkContainer>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n","// Import the functions you need from the SDKs you need\r\nimport {initializeApp} from \"firebase/app\";\r\nimport {\r\n    GoogleAuthProvider,\r\n    getAuth,\r\n    signInWithRedirect,\r\n    signInWithEmailAndPassword,\r\n    createUserWithEmailAndPassword,\r\n    sendPasswordResetEmail,\r\n    signOut\r\n} from \"firebase/auth\";\r\nimport {\r\n    getFirestore,\r\n    query,\r\n    getDocs,\r\n    collection,\r\n    where,\r\n    addDoc\r\n} from \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAJrzoR3lqcLUdiU4OxLOuoAJvGrMN8lrI\",\r\n    authDomain: \"fir-budget-3e406.firebaseapp.com\",\r\n    projectId: \"fir-budget-3e406\",\r\n    storageBucket: \"fir-budget-3e406.appspot.com\",\r\n    messagingSenderId: \"537847221464\",\r\n    appId: \"1:537847221464:web:089f77ce94d86bd2975bad\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth();\r\nconst db = getFirestore();\r\n\r\nconst fetchDataToDB = async (user) => {\r\n    try{\r\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user.uid));\r\n        const docs = await getDocs(q);\r\n        if (docs.docs.length === 0) {\r\n            await addDoc(collection(db, \"users\"), {\r\n                uid: user.uid,\r\n                name: user.displayName,\r\n                authProvider: \"google\",\r\n                email: user.email,\r\n            });\r\n        }\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\nconst googleProvider = new GoogleAuthProvider();\r\nconst signInWithGoogle = async () => {\r\n    try {\r\n        await signInWithRedirect(auth, googleProvider);\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\n\r\nconst logInWithEmailAndPassword = async (email, password) => {\r\n    try {\r\n        await signInWithEmailAndPassword(auth, email, password);\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\nconst registerWithEmailAndPassword = async (name, email, password) => {\r\n    try {\r\n        const res = await createUserWithEmailAndPassword(auth, email, password);\r\n        const user = res.user;\r\n        await addDoc(collection(db, \"users\"), {\r\n            uid: user.uid,\r\n            name,\r\n            authProvider: \"local\",\r\n            email,\r\n        });\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\nconst sendPasswordReset = async (email) => {\r\n    try {\r\n        await sendPasswordResetEmail(auth, email);\r\n        alert(\"Password reset email sent\");\r\n\r\n    } catch (err) {\r\n        console.error(err);\r\n        alert(err.message);\r\n    }\r\n};\r\nconst logout = () => {\r\n    signOut(auth);\r\n};\r\nexport {\r\n    auth,\r\n    db,\r\n    signInWithGoogle,\r\n    logInWithEmailAndPassword,\r\n    registerWithEmailAndPassword,\r\n    sendPasswordReset,\r\n    logout,\r\n    fetchDataToDB\r\n};\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { auth, logInWithEmailAndPassword, signInWithGoogle } from \"../firebase-config\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\n\r\nimport {\r\n    MDBCard\r\n} from 'mdb-react-ui-kit';\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\n\r\nconst LoginScreen = () =>  {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [user, loading] = useAuthState(auth);\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        if (loading) {\r\n            // maybe trigger a loading screen\r\n            return;\r\n        }\r\n        if (user) navigate(\"/dashboard\");\r\n    }, [user, loading, navigate]);\r\n\r\n    const form = useRef();\r\n\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const handleSubmit = (e) => {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        } else {\r\n            e.preventDefault();\r\n            logInWithEmailAndPassword(email, password);\r\n        }\r\n\r\n        setValidated(true);\r\n    };\r\n\r\n    return (\r\n        <div className={\"Login-Container\"}>\r\n            <MDBCard>\r\n                <Form noValidate validated={validated} ref={form} onSubmit={handleSubmit}\r\n                      className={'Form-Contact'}>\r\n\r\n                    <Form.Group className=\"form-content\" controlId=\"formBasicEmail\">\r\n                        <Form.Control required type=\"email\" placeholder=\"Email\" name=\"user_email\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid email.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"form-content\" controlId=\"formBasicPassword\">\r\n                        <Form.Control required type=\"password\" placeholder=\"Password\" name=\"user_password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid password.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <LinkContainer to=\"/reset\">\r\n                    <a>Forgot password?</a>\r\n                    </LinkContainer>\r\n                    <Button variant=\"secondary\" type=\"submit\" className={'Button-Login'}>\r\n                        Login\r\n                    </Button>\r\n                    <p>Not a member? <LinkContainer to=\"/register\"><a>Register</a></LinkContainer></p>\r\n                    <p>or sign up with:</p>\r\n                    <Button onClick={signInWithGoogle} className='Button-Register' variant={'secondary'}>\r\n                        Google\r\n                    </Button>\r\n                </Form>\r\n            </MDBCard>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default LoginScreen;\r\n","import {MDBCard} from \"mdb-react-ui-kit\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {\r\n    auth, logInWithEmailAndPassword,\r\n    registerWithEmailAndPassword, signInWithGoogle,\r\n} from \"../firebase-config\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\n\r\nfunction RegisterScreen() {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [user, loading, error] = useAuthState(auth);\r\n    const navigate = useNavigate();\r\n    const register = () => {\r\n        registerWithEmailAndPassword(name, email, password);\r\n    };\r\n    useEffect(() => {\r\n        if (loading) return;\r\n        if (user) navigate('/dashboard', { replace: true })\r\n    }, [user, loading, navigate]);\r\n\r\n    const form = useRef();\r\n\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const handleSubmit = (e) => {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        } else {\r\n                e.preventDefault();\r\n                register();\r\n            }\r\n\r\n        setValidated(true);\r\n    };\r\n\r\n    return (\r\n        <div className={\"Register-Container\"}>\r\n            <MDBCard>\r\n                <Form noValidate validated={validated} ref={form} onSubmit={handleSubmit}\r\n                      className={'Form-Contact'}>\r\n\r\n                    <Form.Group className=\"form-content\" controlId=\"formBasicName\">\r\n                        <Form.Control required type=\"name\" placeholder=\"Name\" name=\"user_name\" value={name} onChange={(e) => setName(e.target.value)}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid name.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"form-content\" controlId=\"formBasicEmail\">\r\n                        <Form.Control required type=\"email\" placeholder=\"Email\" name=\"user_email\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid email.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"form-content\" controlId=\"formBasicPassword\">\r\n                        <Form.Control required type=\"password\" placeholder=\"Password\" name=\"user_password\" value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid password.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Button variant=\"secondary\" type=\"submit\" className={'Button-Login'}>\r\n                        Register\r\n                    </Button>\r\n                    <p>Already have account? <LinkContainer to={'/login'}>\r\n                        <a>Login</a>\r\n                    </LinkContainer></p>\r\n                    <p>or sign up with:</p>\r\n                    <Button onClick={signInWithGoogle} className='Button-Login' variant={'secondary'}>\r\n                        Google\r\n                    </Button>\r\n                </Form>\r\n            </MDBCard>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RegisterScreen;\r\n","import {collection, getDocs, query, where} from \"firebase/firestore\";\r\nimport {db} from \"../../firebase-config\";\r\n\r\nexport const fetchUserName = async (user, setName) => {\r\n    try {\r\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\r\n        const doc = await getDocs(q);\r\n        const data = doc.docs[0].data();\r\n        setName(data.name);\r\n    } catch (err) {\r\n        setName(user.displayName);\r\n        console.error(err);\r\n        console.log(\"Error fetching user name\");\r\n    }\r\n};\r\n","import {collection, getDocs, query, where} from \"firebase/firestore\";\r\nimport {db} from \"../../firebase-config\";\r\n\r\nexport const fetchBudgets = async (user, setBudgets) => {\r\n    try {\r\n        const q = query(collection(db, \"users\"), where(\"uid\", \"==\", user?.uid));\r\n        const doc = await getDocs(q);\r\n        const querySnapshot = await getDocs(collection(db, \"users\", doc.docs[0].id, \"budgets\"));\r\n        const data = querySnapshot.docs.map(doc => doc.data());\r\n        setBudgets(data.map(budget => ({name: budget.name, amount: budget.amount, budgetId: budget.budgetId})));\r\n    } catch (err) {\r\n        console.error(err);\r\n        console.log(\"Error fetching budgets\");\r\n    }\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {useAuthState} from \"react-firebase-hooks/auth\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport {auth, fetchDataToDB, logout} from \"../firebase-config\";\r\nimport {fetchUserName} from \"./Database-Components/FetchUserData\";\r\nimport {fetchBudgets} from \"./Database-Components/FetchBudgets\";\r\nimport {createBudget} from \"./Database-Components/CreateBudget\";\r\nimport {deleteBudget} from \"./Database-Components/DeleteBudget\";\r\nimport {updateBudget} from \"./Database-Components/UpdateBudget\";\r\nimport {Button} from \"react-bootstrap\";\r\n\r\n\r\nfunction Dashboard() {\r\n\r\n    const [user, loading] = useAuthState(auth);\r\n    const [name, setName] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const [budgetName, setBudgetName] = useState(\"\");\r\n    const [budgetAmount, setBudgetAmount] = useState(0);\r\n    const [budgetChange, setBudgetChange] = useState(0);\r\n\r\n    const [budgets, setBudgets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (loading) return;\r\n        if (!user) return navigate(\"/\");\r\n        fetchDataToDB(user);\r\n        fetchUserName(user, setName);\r\n        fetchBudgets(user, setBudgets);\r\n\r\n    }, [user, loading,navigate]);\r\n\r\n\r\n    return (\r\n        <div className={\"Dashboard\"}>\r\n            <div className={\"Dashboard-Header\"}>\r\n                {name} <Button variant={\"secondary\"} onClick={() => logout()}>Logout</Button>\r\n            </div>\r\n            <div className={\"Dashboard-Body\"}>\r\n                <div className={\"Dashboard-AddBudget\"}>\r\n                    <Button variant={\"success\"}>+</Button> <span>Add new Budget</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {auth, logInWithEmailAndPassword, sendPasswordReset, signInWithGoogle} from \"../firebase-config\";\r\nimport {Button, Form} from \"react-bootstrap\";\r\nimport {LinkContainer} from \"react-router-bootstrap\";\r\nimport {MDBCard} from \"mdb-react-ui-kit\";\r\n\r\nfunction Reset(props) {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [user, loading, error] = useAuthState(auth);\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        if (loading) return;\r\n        if (user) navigate(\"/dashboard\");\r\n    }, [user, loading]);\r\n\r\n    const form = useRef();\r\n\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const handleSubmit = (e) => {\r\n        const form = e.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        } else {\r\n            e.preventDefault();\r\n            sendPasswordReset(email);\r\n        }\r\n\r\n        setValidated(true);\r\n    };\r\n\r\n    return (\r\n        <div className={\"Login-Container\"}>\r\n            <MDBCard>\r\n                <Form noValidate validated={validated} ref={form} onSubmit={handleSubmit}\r\n                      className={'Form-Contact'}>\r\n\r\n                    <Form.Group className=\"form-content\" controlId=\"formBasicEmail\">\r\n                        <Form.Control required type=\"email\" placeholder=\"Email\" name=\"user_email\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Please provide a valid email.\r\n                        </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Button variant=\"secondary\" type=\"submit\" className='Button-Register'>Send password reset email</Button>\r\n                    <p>Not a member? <LinkContainer to=\"/register\"><a>Register</a></LinkContainer></p>\r\n                </Form>\r\n            </MDBCard>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Reset;\r\n","import './App.scss';\r\nimport {HashRouter, Route, Routes} from \"react-router-dom\";\r\nimport HomePage from \"./Components/HomePage\";\r\nimport LoginScreen from \"./Components/LoginScreen\";\r\nimport RegisterScreen from \"./Components/RegisterScreen\";\r\nimport Dashboard from \"./Components/Dashboard\";\r\nimport Reset from \"./Components/Reset\";\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n      <HashRouter>\r\n        <Routes>\r\n            <Route path=\"/\" element={<HomePage/>}/>\r\n            <Route path=\"/login\" element={<LoginScreen/>}/>\r\n            <Route path=\"/register\" element={<RegisterScreen/>}/>\r\n            <Route path=\"/dashboard\" element={<Dashboard/>}/>\r\n            <Route path=\"/reset\" element={<Reset/>}/>\r\n        </Routes>\r\n      </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport 'mdb-react-ui-kit/dist/css/mdb.min.css';\r\nimport App from './App';\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n    <App />\r\n);\r\n"],"sourceRoot":""}